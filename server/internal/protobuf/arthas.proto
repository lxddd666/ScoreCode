syntax = "proto3";

option go_package = "./protobuf";

// 定义动作枚举
enum Action {
  LOGIN = 0;
  LOGOUT = 1;
  ERR_STOP = 31;
  LOGIN_SINGLE = 37;

  //whatsapp
  SEND_MESSAGE = 2;
  SEND_GROUP_MESSAGE = 3;
  SYNC_ACCOUNT_KEY = 4; // 添加同步帐号密钥动作
  GET_PREKEYBUNDLE = 5;
  SYNC_CONTACTS = 6;
  PING_PONG = 7;
  SEND_VCARD_MESSAGE = 8;
  SET_HEAD_SCULPTURE = 9;
  GET_USER_HEAD_IMAGE = 10;
  SEND_VIDEO = 18;

  //telegram
  SYNC_APP_INFO = 11;
  RECEIVING_MSG = 12;
  SEND_PHOTO = 13;
  SEND_FILE = 14;
  SEND_CONTACT_CARD = 15;
  CREATE_GROUP = 16;
  ADD_GROUP_MEMBER = 17;
  GET_GROUP_MEMBERS = 23;
  SEND_CODE = 19;
  CONTACT_LIST = 20;
  DIALOG_LIST = 21;
  Get_MSG_HISTORY = 22;
  CREATE_CHANNEL = 24;
  DOWNLOAD_FILE = 25;
  INVITE_TO_CHANNEL = 26;
  IMPORT_TG_SESSION = 27;
  JOIN_BY_LINK = 28;
  GET_EMOJI_GROUP = 29;
  MESSAGES_REACTION = 30;
  LEAVE = 32;
  GET_CHANNEL_MEMBER = 33;
  GET_ONLINE_ACCOUNTS = 34;
  UPDATE_USER_INFO = 35;
  SEARCH = 36;
  FORWARD_MESSAGE = 38;
  DELETE_MEMBER = 39;
  GET_USER_CHAT_FOLDERS = 40;
  UPDATE_USER_CHAT_FOLDERS = 41;
  CHECK_USERNAME = 42;
  UPDATES_GET_STATUS = 43;
  CREATE_BOT = 44;
  START_BOT = 45;
  READ_HISTORY = 46;
  CHANNEL_READ_VIEW = 47;
  EDIT_ADMIN = 48;
  SET_TYPE_ACTION = 49;
  READ_CHANNEL_HISTORY = 50;
  SEND_MSG_SINGLE = 51;
  SEND_FILE_SINGLE = 52;
  SEND_CARD_SINGLE = 53;
  SAVE_DRAFT = 54;
  CLEAR_ALL_DRAFT = 55;
  DELETE_MESSAGES = 56;
  CONTACTS_GET_LOCATED = 57;
  EDIT_CHANNEL_INFO = 58;
  GET_MANAGED_CHANNELS = 59;
  EDIT_CHAT_BANNED_RIGHTS = 60;
  GET_CHATS_INFO = 61;
  GET_USER_INFO = 62;
  SET_HISTORY_TTL =63;
  GET_COMMON_CHATS = 64;
  EDIT_PARTICIPANT_BANNED=65;
  DELETE_PRIVATE_CHAT = 66;
  PIN_DIALOG = 67;
  GET_PINNED_DIALOGS = 68;
  SEND_STORIES = 69;
  DELETE_STORIES = 70;
  EDIT_STORIES = 71;
  EXPORT_STORIES_LINK =72;
  READ_STORIES =73;
  SEND_STORIES_REACTION=74;
  GET_STORIES_VIEWS=75;
  IMPORT_CONTACTS = 76;
  GET_ONLINE =77;
  CREATE_GROUP_CALL =78;
}


// 定义普通动作消息
//message OrdinaryAction {
//  repeated uint64 account_ids = 1; // 帐号的数组
//}

message EditChatBannedRightsDetail {
  uint64  Sender =1;
  string  Channel =2;
  ChatBannedRightsType ChatBannedRights =3;
}

message EditParticipantBannedDetail {
  uint64  Sender =1;
  string  Channel =2;
  string  User =3;
  ChatBannedRightsType ChatBannedRights =4;
}

message ChatBannedRightsType {
  // If set, does not allow a user to view messages in a supergroup/channel/chat¹
  bool ViewMessages  =1;
  // If set, does not allow a user to send messages in a supergroup/chat¹
  bool SendMessages  =2;
  // If set, does not allow a user to send any media in a supergroup/chat¹
  bool SendMedia  =3;
  // If set, does not allow a user to send stickers in a supergroup/chat¹
  bool SendStickers =4;
  // If set, does not allow a user to send gifs in a supergroup/chat¹
  bool SendGifs  =5;
  // If set, does not allow a user to send games in a supergroup/chat¹
  bool SendGames  =6;
  // If set, does not allow a user to use inline bots in a supergroup/chat¹.
  bool SendInline  =7;
  // If set, does not allow a user to embed links in the messages of a supergroup/chat¹
  bool EmbedLinks  =8;
  // If set, does not allow a user to send polls in a supergroup/chat¹
  bool SendPolls  =9;
  // If set, does not allow any user to change the description of a supergroup/chat¹
  bool ChangeInfo  =10;
  // If set, does not allow any user to invite users in a supergroup/chat¹
  bool InviteUsers  =11;
  // If set, does not allow any user to pin messages in a supergroup/chat¹
  bool PinMessages  =12;
  // If set, does not allow any user to create, delete or modify forum topics »¹.
  bool ManageTopics  =13;
  // If set, does not allow a user to send photos in a supergroup/chat¹.
  bool SendPhotos  =14;
  // If set, does not allow a user to send videos in a supergroup/chat¹.
  bool SendVideos  =15;
  // If set, does not allow a user to send round videos in a supergroup/chat¹.
  bool SendRoundVideos  =16;
  // If set, does not allow a user to send audio files in a supergroup/chat¹.
  bool SendAudios  =17;
  // If set, does not allow a user to send voice messages in a supergroup/chat¹.
  bool SendVoices  =18;
  // If set, does not allow a user to send documents in a supergroup/chat¹.
  bool SendDocs   =19;
  // If set, does not allow a user to send text messages in a supergroup/chat¹.
  bool SendPlain   =20;
  // Validity of said permissions (it is considered forever any value less then 30 seconds
  // or more then 366 days).
  int64 UntilDate =21;
}

message GetManageChannelsDetail {
  uint64 Sender =1;
  bool  ByLocation = 2;
  bool  CheckLimit =3;
}

message SendStoriesDetail {
  uint64 Sender =1;
  repeated string Chat =2;
  bool  Pinned=3;
  bool NoForwards=4;
  string Caption =5;
  uint64 Period =6;
  string From =7;
  int64 FromId = 8;
  FileDetailValue FileType = 9;
}

message GetCommonChatsDetail {
  uint64 Sender = 1;
  string User =2;
  int64 MaxId =3;
  int64 Limit =4;
}

message SetHistoryTTLDetail {
  uint64 Sender = 1;
  string Chat =2;
  int64 Period =3;
}

message GetChatsInfoDetail {
  uint64 Sender = 1;
  string Channel = 2;
  string Chat  =3;
}

message GetUserInfoDetail {
  uint64 Sender = 1;
  string User = 2;
}

message GetPinnedDialogs {
  uint64 Sender = 1;
}

message ContactsGetLocatedDetail {
  uint64 Sender  =1;
  //是否允许更新位置
  bool Background =2;
  //纬度
  double Lat =3;
  //经度
  double Long =4;
  //范围，米为单位
  uint64 AccuracyRadius =5;
  //位置过期时间
  uint64 SelfExpires =6;
}

message PinDialogDetail{
  uint64 Sender =1;
  string Channel = 2;
  string User =3;
  string Chat =4;
  bool Pinned=5;
}

message ClearAllDraftDetail {
  uint64 Sender = 1;
}

message  DeleteMessagesDetail {
  uint64 Sender = 1;
  bool Revoke   =2;  // true 双方都删除，false 只删除自己
  bool IsChannel =3;
  string Channel =4;
  repeated int64 MsgIds =5;
}

message OrdinaryAction {
  map<uint64, loginDetail> login_detail = 1;
  string Type = 2;
}

message OrdinarySingleAction {
  loginDetail login_detail = 1;
  string Type = 2;
  uint64 account = 3;
}

message DeletePrivateChatDetail {
  uint64  Sender = 1;
  string   User  = 2;
  bool Revoke =3;
}

message ForwardMessageDetail {
  uint64  Sender = 1;
  string fromPeer = 2;
  string ToPeer = 3;
  repeated int64 MsgIds = 4;
}

message DeleteMemberDetail {
  uint64 Sender = 1;
  string ChatId = 2;
  repeated string DeleteUsers = 3;
  string ChannelId = 4;
}

message LogoutAction {
  map<uint64, logoutDetail> logout_detail = 1;
  string Type = 2;
}

message loginDetail {
  string proxyUrl = 1;
  string loginId = 2;  //登录的id 用来收验证码
  TgDeviceConfig tgDevice = 3; // 登录设备信息
  bool isBot = 4;
  string token = 5;
  uint64 appId = 6;
  string appHash = 7;
}

message TgDeviceConfig {
  string deviceModel = 1;
  string SystemVersion = 2;
  string AppVersion = 3;
  string LangCode = 4;
  string SystemLangCode = 5;
  string LangPack = 6;

}

message logoutDetail {
  string proxyUrl = 1;
}


message GetUserHeadImageAction{
  map<uint64, getUserHeadImage> head_image = 1;
}

message getUserHeadImage{
  repeated uint64 account = 1;
}

message DownUserHeadImageDetail{
  uint64 account = 1 ;
  uint64 getUser = 2 ;
  int64 photoId = 3;
}

message SearchDetail {
  uint64 Sender = 1;
  string Search = 2;
}


// 定义头像
message HeadSculpture{
  bytes  image = 1;
  uint64 account = 2;
}

// 修改头像信息
message SetHeadSculptureAction {
  HeadSculpture HeadSculptrue_data = 1;
}


//定义明信片
message VCard{
  string Fn = 1;
  string Tel = 2;
}

// 定义明信片消息
message SendVCardMsgDetail {
  repeated SendVCardMsgDetailAction details = 1;
}

message SendMessageDetail {
  repeated SendMessageAction details = 1;
}

//定义telegram app 信息
message appData {
  uint64 appId = 1;
  string appHash = 2;
}

// 定义密钥数据
message KeyData {
  bytes privatekey = 1;
  bytes privateMsgKey = 2;
  bytes resumptionSecret = 3;
  bytes publickey = 4;
  bytes publicMsgKey = 5;
  bytes clientPayload = 6;
  bytes identify = 7;
}

// 定义同步帐号密钥动作消息
message SyncAccountKeyAction {
  map<uint64, KeyData> key_data = 1;
}

//定义同步app信息动作消息
message SyncAppInfoAction {
  map<uint64, appData> app_data = 1;
}

message DeleteStoriesDetail {
  uint64 Sender = 1;
  repeated int64 StoryIds =2;
}

message EditStoriesDetail {
  uint64 Sender =1;
  repeated string Chat =2;
  string Caption =3;
  FileDetailValue FileType = 4;
  int64 StoryId  =5;
}

message ExportStoriesLinkDetail {
  uint64 Sender =1;
  string User =2;
  int64 StoryId=3;
}

message ReadStoriesDetail {
  uint64 Sender =1;
  string User=2;
  int64 MaxId =3;
}

message SendStoriesReactionDetail {
  uint64 Sender =1;
  string User=2;
  int64 StoryId=3;
  string Emoticon=4;
}
message GetStoriesViewsDetail {
  uint64 Sender =1;
  repeated int64 StoryIds=2;

  int64 storyId =3;
  bool JustContacts  =4;
  bool ReactionsFirst =5;
  string Search =6;
  string Offset =7;
  int64 Limit    =8;
}

message TgAddContactDetail {
  uint64 Account         =1;
  string FirstName       =2;
  string   LastName     =3;
  string Phone          =4;
  bool AddPhonePrivacy  =5;
}

message ImportContactsDetail {
  uint64 Sender =1;
  repeated ContactInfo ContactInfoList =2;
}

message ContactInfo {
  int64 ClientID =1;
  // Phone number
  string Phone  =2;
  // Contact's first name
  string  FirstName  =3;
  // Contact's last name
  string LastName  =4;
}

message GetOnlineDetail {
  uint64 Sender =1;
  string Chat =2;
}

message CreateGroupCallDetail {
  uint64 Sender =1;
  string Chat =2;
  string Title =3;
}

// 定义总的消息
message RequestMessage {
  Action action = 1; // 动作字段
  oneof action_detail {
    OrdinaryAction ordinary_action = 2;
    SyncAccountKeyAction sync_account_key_action = 3;
    SyncAppInfoAction   sync_app_action = 4;
    QueryPreKeyBundleDetail query_prekeybundle_detail = 7;
    SendMessageDetail  sendmessage_detail = 8 ;
    string  ping_message = 9;
    SendVCardMsgDetail send_vcard_message = 10;
    SetHeadSculptureAction set_head_sculpture_action = 11;
    GetUserHeadImageAction get_user_head_image = 12;
    SyncContactDetail      sync_contact_detail = 13;
    ReceivingMsgDetail      receive_msg_detail = 14;
    SendPhotoDetail  send_photo_detail = 15;
    CreateGroupDetail       create_group_detail = 16;
    AddGroupMemberDetail     add_group_member_detail = 17;
    GetGroupMembersDetail get_group_members_detail = 29;
    SendImageFileDetail  send_image_file_detail = 19;
    SendContactCardDetail send_contact_card_detail = 20;
    SendGroupMessageDetail send_group_message_detail = 21;
    SendFileDetail  send_file_detail = 22;
    SendVideoDetail send_video_detail = 23;
    SendCodeDetail send_code_detail = 24;
    GetContactList      get_contact_list = 25;
    GetDialogList  get_dialog_list = 26;
    GetMsgHistory  get_msg_history = 27;
    LogoutAction     logout_action = 28;
    CreateChannelDetail create_channel_detail = 30;
    GetDownLoadFileDetail get_downLoad_file_detail = 31;
    ImportTgSessionDetail import_tg_session = 33;
    InviteToChannelDetail invite_to_channel_detail = 32;
    JoinByLinkDetail join_by_link_detail = 34;
    GetEmojiGroupsDetail get_emoji_group_detail = 36;
    MessagesReactionDetail messages_reaction_detail = 37;
    LeaveDetail leave_detail = 38;
    GetChannelMemberDetail get_channel_member_detail = 39;
    GetOnlineAccountsDetail get_online_accounts_detail = 40;
    UpdateUserInfoDetail update_user_info_detail = 41;
    DownUserHeadImageDetail down_user_head_image_detail = 42;
    SearchDetail search_detail = 43;
    OrdinarySingleAction ordinary_single_action = 44;
    ForwardMessageDetail forward_message_detail = 45;
    DeleteMemberDetail delete_member_detail = 46;
    GetUserChatFoldersDetail get_user_chat_folders_detail = 47;
    UpdateUserChatFoldersDetail update_user_chat_folders_details = 48;
    CheckUserNameDetail check_username_detail = 49;
    UpdatesGetStatusDetail update_get_status_detail = 50;
    CreateBotDetail create_bot_detail = 51;
    StartBotDetail  start_bot_detail = 52;
    ReadHistoryDetail read_history_detail = 54;
    ChannelReadViewDetail channel_read_view_detail = 55;
    EditAdminDetail edit_admin_detail = 56;
    SetTypeActionDetail set_type_action_detail = 57;
    ReadChannelHistoryDetail read_channel_history_action = 58;
    SendMsgSingleDetail  send_msg_single_detail = 59;
    SendFileSingleDetail send_file_single_detail = 60;
    SendContactCardSingleDetail send_contact_card_single_detail = 61;
    SaveDraftDetail save_draft_detail = 62;
    ClearAllDraftDetail clear_all_draft_detail =63;
    DeleteMessagesDetail delete_messages_detail = 64;
    ContactsGetLocatedDetail contacts_get_located_detail = 65;
    EditChannelInfoDetail  edit_channel_info_detail = 66;
    GetManageChannelsDetail get_manage_channels_detail =67;
    EditChatBannedRightsDetail edit_chat_banned_rights_detail = 68;
    GetChatsInfoDetail get_chats_info_detail = 69;
    GetUserInfoDetail get_user_info_detail  = 70;
    SetHistoryTTLDetail set_history_ttl_detail = 71;
    GetCommonChatsDetail get_common_chats_detail = 72;
    EditParticipantBannedDetail edit_participant_banned_detail =73;
    DeletePrivateChatDetail  delete_private_chat_detail = 74;
    PinDialogDetail  pin_dialog_detail =75;
    GetPinnedDialogs get_pinned_dialogs = 76;
    SendStoriesDetail send_stories_detail = 77;
    DeleteStoriesDetail delete_stories_detail = 78;
    EditStoriesDetail edit_stories_detail = 79;
    ExportStoriesLinkDetail export_stories_link_detail =80;
    ReadStoriesDetail read_stories_detail =81;
    SendStoriesReactionDetail send_stories_reaction_detail=82;
    GetStoriesViewsDetail get_stories_views_detail = 83;
    TgAddContactDetail tg_add_contact_detail = 84;
    ImportContactsDetail import_contacts_detail =85;
    GetOnlineDetail get_online_detail =86;
    CreateGroupCallDetail create_group_call_detail =87;
  }
  string type = 18;
  uint64 account = 35; //账号
  string key = 53;
}

message UintkeyUintvalue {
  uint64 key = 1;
  repeated uint64 values = 2;
}

message UintkeyStringvalue {
  uint64 key = 1;
  repeated string values = 2;
}

message StringKeyStringvalue{
  string key = 1;
  repeated string values = 2;
}

message UintSenderVcard{
  uint64 Receiver = 1;
  repeated VCard vcards = 2;
}

message SendMessageAction {
  map<uint64, UintkeyStringvalue> send_data = 1;
  map<uint64, StringKeyStringvalue> send_tgData = 2;
}

message SendVCardMsgDetailAction {
  map<uint64, UintSenderVcard> send_data = 1;
}

message SendGroupMessageAction {
  map<uint64, StringKeyStringvalue> send_data = 1;
}

message SendPhotoAction{
  map<uint64, UintkeyStringvalue> send_data = 1;
}


message UintFileDetailValue{
  uint64 key = 1;
  repeated FileDetailValue value = 2;
}

message UintTgFileDetailValue{
  string key = 1;
  repeated FileDetailValue value = 2;
}


message UintSendContactCard {
  uint64 key = 1;
  uint64 sender = 2;
  string receiver = 3;
  repeated ContactCardValue value = 4;
}


message ContactCardValue{
  string FirstName = 1;
  string LastName = 2;
  string PhoneNumber = 3;
}

message FileDetailValue{
  string FileType = 1;
  string SendType = 2;
  string Path = 3;
  bytes  FileByte = 4;
  string Name = 5;
}

message GeoPointValue {
  double Lat = 1;
  double Long = 2;
  uint64 AccuracyRadius = 3;
}

message EditChannelInfoDetail {
  uint64 Sender = 1;
  string Channel = 2;
  FileDetailValue Photo = 3;
  string Title = 4;
  GeoPointValue GeoPoint =5;
  string Address = 6;
  string Describe =7;
}



message SendGroupMessageDetail {
  repeated SendGroupMessageAction details = 1;
}


message SendPhotoDetail {
  repeated SendPhotoAction details = 1;
}

message SendFileDetail{
  repeated SendFileAction details = 1;
}

message SendFileSingleDetail{
  uint64 sender = 1;
  string receiver = 2;
  FileDetailValue  fileDetail = 3;
}


message  SendCodeDetail{
  sendCodeAction details = 1;
}

message GetContactList{
  uint64 Account = 1;
}

message GetDialogList{
  uint64 Account = 1;
}

message GetDownLoadFileDetail{
  map<uint64, DownLoadFileMsg> download_file = 1;
}

message DownLoadFileMsg{
  int64 chatId = 1;
  int64 messageId = 2;
}

message GetMsgHistory{
  uint64 Self = 1;
  string  Other = 2;
  int32  Limit = 3;
  int64   OffsetDat = 4;
  int64  OffsetID = 5;
  int64  MaxID = 6;
  int64  MinID = 7;
}

message sendCodeAction{
  map<uint64, string> send_code = 1;
  string loginId = 2;
  bool   flag = 3;
  string comments = 4;
}



message SendVideoDetail{
  repeated SendFileAction details = 1;
}

message SendImageFileDetail{
  repeated SendFileAction details = 1;
}

message SendContactCardDetail{
  repeated SendContactCardAction detail = 1;
}

message SendContactCardSingleDetail{
  uint64 sender = 2;
  string receiver = 3;
  ContactCardValue card = 1;
}

message SaveDraftDetail {
  uint64 Sender = 1;
  string receiver = 2;
  int64 ReplyToMsgId =3;
  int64 TopMsgId =4;
  string Msg    =5;
}

message  ReceivingMsgDetail {
  uint64 Receiver = 1;
}

message  CreateGroupDetail {
  string GroupName = 1;
  UintkeyStringvalue detail = 2;
}

message CreateChannelDetail {
  string ChannelTitle = 1;
  string   ChannelUserName = 2;
  string   ChannelDescription = 3;
  UintkeyStringvalue detail = 4;
  bool IsChannel = 5;
  bool IsSuperGroup = 6;
}

message  AddGroupMemberDetail {
  string Chat = 1;
  UintkeyStringvalue detail = 2;
}

message GetChannelMemberDetail {
  uint64 Sender = 1;
  string Channel = 2;
  int64  Offset = 3;
  int64 Limit = 4;
  string  SearchType = 5;
  int64 TopMsgId = 6;
}

message UpdateUserInfoDetail {
  uint64 account = 1;
  map<uint64, UpdateUserInfoMsg> send_data = 2;

}

message UpdateUserInfoMsg {
  optional string userName = 1;
  optional string firstName = 2;
  optional string lastName = 3;
  optional string bio = 4;
  FileDetailValue photo = 5;
}

message GetOnlineAccountsDetail {
  repeated string phone = 1;
}

message  InviteToChannelDetail {
  string Channel = 1;
  UintkeyStringvalue detail = 2;
}

message ImportTgSessionDetail{
  uint64 account = 1;
  map<uint64, ImportTgSessionMsg> send_data = 2;
}

message ImportTgSessionMsg{
  int32   DC = 1;
  string  Addr = 2;
  bytes  AuthKey = 3;
  ImportTgDeviceMsg DeviceMsg = 4;
}

message ImportTgDeviceMsg{
  uint64 AppId = 1;
  string AppHash = 2;

  string DeviceModel = 3;
  string SystemVersion = 4;
  string AppVersion = 5;
  string LangCode = 6;
  string SystemLangCode = 7;
  string LangPack = 8 ;
}



message ImportTgSessionDetailAction{

}

message JoinByLinkDetail {
  UintkeyStringvalue detail = 1;
}

message GetEmojiGroupsDetail {
  uint64 Sender = 1;
}

message GetUserChatFoldersDetail{
  uint64 account = 1;
}

message ChannelReadViewDetail{
  uint64 account = 1;
  string receiver = 2;
  repeated int64 msgIds = 3;
}

message EditAdminDetail{
  uint64 Sender  = 1;
  string ModifiedUser = 2;
  string Channel = 3;
  string Rank = 4;
  AdminRightsDetail   AdminRights =5;
}

message AdminRightsDetail {
  // If set, allows the admin to modify the description of the channel/supergroup¹
  bool ChangeInfo =1;
  // If set, allows the admin to post messages in the channel¹
  bool PostMessages = 2;
  // If set, allows the admin to also edit messages from other admins in the channel¹
  bool EditMessages  =3;
  // If set, allows the admin to also delete messages from other admins in the channel¹
  bool DeleteMessages =4;
  // If set, allows the admin to ban users from the channel/supergroup¹
  bool BanUsers  =5;
  // If set, allows the admin to invite users in the channel/supergroup¹
  bool InviteUsers =6;
  // If set, allows the admin to pin messages in the channel/supergroup¹
  bool PinMessages =7;
  // If set, allows the admin to add other admins with the same (or more limited)
  bool AddAdmins  =8;
  // Whether this admin is anonymous
  bool Anonymous  =9;
  // If set, allows the admin to change group call/livestream settings
  bool ManageCall =10;
  // Set this flag if none of the other flags are set, but you still want the user to be an
  // admin: if this or any of the other flags are set, the admin can get the chat admin
  // log¹, get chat statistics², get message statistics in channels³, get channel
  // members, see anonymous administrators in supergroups and ignore slow mode.
  bool Other =11;
  // If set, allows the admin to create, delete or modify forum topics »¹.
  bool ManageTopics  =12;
  // PostStories field of ChatAdminRights.
  bool PostStories  =13;
  // EditStories field of ChatAdminRights.
  bool EditStories  =14;
  // DeleteStories field of ChatAdminRights.
  bool DeleteStories  =15;
}

message SetTypeActionDetail {
  uint64 Sender  =1;
  string Receiver =2;
  string FileType  =3;
}

message SendMsgSingleDetail {
  uint64 Sender  =1;
  string Receiver =2;
  string  Msg = 3;
}

message ReadHistoryDetail{
  uint64 account = 1;
  string receiver = 2;
}

message ReadChannelHistoryDetail{
  uint64 account = 1;
  string receiver = 2;
}

message CheckUserNameDetail{
  uint64 account = 1;
  string username = 2;
}

message UpdatesGetStatusDetail{
  uint64 account = 1;
}

message CreateBotDetail {
  uint64 Sender = 1;
}

message StartBotDetail {
  uint64 Sender = 1;
  repeated string BotUserNames = 2;
}


message UpdateUserChatFoldersDetail{
  uint64 account = 1;
  string title = 2;
  uint64 folderID = 3;
  repeated PeerBuf pinnedPeers = 4;
  repeated PeerBuf includePeers = 5;
  repeated PeerBuf excludePeers = 6;
  bool groups = 7;
  bool nonContacts = 8;
  bool contacts = 9;
  bool channels = 10;
  bool bots = 11;
  bool delete = 12;
  string emoticon = 13;
}
message PeerBuf {
  bytes buf = 1;
}

message MessagesReactionDetail{
  string Emotion = 1;
  UintkeyUintvalue detail = 2;
  string Receiver = 3;
}

message LeaveDetail {
  UintkeyStringvalue detail = 1;
}


message  GetGroupMembersDetail {
  uint64 Account = 1;
  int64 ChatId = 2;
}

message QueryPreKeyBundleDetail {
  repeated UintkeyUintvalue details = 1;
}

message SyncContactDetail {
  repeated UintkeyUintvalue details = 1;
}

message SetHeadSculptureDetail{
  repeated SetHeadSculptureAction detail = 1;
}

// 定义动作的返回状态枚举
enum ActionResult {
  ALL_SUCCESS = 0;
  PARTIAL_SUCCESS = 1;
  ALL_FAIL = 2;
  ALL_UNKNOWN = 3;
  PONG = 4;
  LOGIN_NEED_CODE = 5;
  LOGIN_VERIFY_CODE_FAIL = 6;
  RUN_TIME_OUT = 7;
}

// 定义单个帐号的执行状态枚举
enum AccountStatus {
  SUCCESS = 0;   //成功
  FAIL = 1;      //失败
  UNKNOWN = 2;   //未知
  NOT_EXIST = 3; //账号不存在
  PROXY_ERR = 4; // 代理地址报错
  SEAL = 403; //登录失败，已封号
  PERMISSION = 401; // 登录失败，权限错误
  NEED_SEND_CODE = 5; // 需要发送验证码
  LOGIN_CODE_FAIL = 6;// 验证码错误
  LOGOUT_FAIL = 7;// 登出失败
  LOGIN_SESSION_CORRUPTED = 8;//登录session损坏
  LOGIN_TIMEOUT = 9;

}

// 定义返回消息
message ResponseMessage {
  ActionResult action_result = 1; // 动作的返回状态
  map<string, AccountStatus> account_status = 2; // 帐号的执行状态字典
  string   pong_message = 3;
  oneof callbackInfo {
    LoginCallbacks login_callbacks = 4;
    TextMsgCallbacks text_msg_callbacks = 5;
    ReadMsgCallbacks read_msg_callbacks = 6;
  }
  string   login_id = 7;
  string   account = 8;
  string   comment = 9;
  bytes    data = 10;
  AccountStatus respond_account_status = 11; // 账号的执行返回状态
  string   key = 12;
}
message LoginCallbacks{
  repeated LoginCallback results = 1;
}
message LoginCallback{
  uint64 userJid = 1;
  AccountStatus loginStatus = 2;
  string proxyUrl = 3;
  string comment = 4;
}

message TextMsgCallbacks{
  repeated TextMsgCallback results = 1;
}

message SendFileAction{
  map<uint64, UintFileDetailValue> send_data = 1;
  map<uint64, UintTgFileDetailValue> send_tgData = 2;
  string  Type = 3;
}

message SendContactCardAction{
  map<uint64, UintSendContactCard> send_data = 1;
  string Type = 2;
}


message TextMsgCallback{
  uint64 sender = 1;     //发送人
  uint64 receiver = 2;  //接收人
  string sendText = 3; //消息内容
  int64 sendTime = 4;  //发送时间
  string reqId = 5; //请求id
  bool  read = 6 ;//已读
}

message ReadMsgCallbacks{
  repeated ReadMsgCallback results = 1;
}

message ReadMsgCallback{
  string reqId = 1;
}

service Arthas {
  rpc connect(RequestMessage) returns(ResponseMessage);
}

service ArthasStream {
  rpc connect(stream RequestMessage) returns(stream ResponseMessage);
}

