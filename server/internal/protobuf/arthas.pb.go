// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: protobuf/arthas.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义动作枚举
type Action int32

const (
	Action_LOGIN        Action = 0
	Action_LOGOUT       Action = 1
	Action_ERR_STOP     Action = 31
	Action_LOGIN_SINGLE Action = 37
	// whatsapp
	Action_SEND_MESSAGE        Action = 2
	Action_SEND_GROUP_MESSAGE  Action = 3
	Action_SYNC_ACCOUNT_KEY    Action = 4 // 添加同步帐号密钥动作
	Action_GET_PREKEYBUNDLE    Action = 5
	Action_SYNC_CONTACTS       Action = 6
	Action_PING_PONG           Action = 7
	Action_SEND_VCARD_MESSAGE  Action = 8
	Action_SET_HEAD_SCULPTURE  Action = 9
	Action_GET_USER_HEAD_IMAGE Action = 10
	Action_SEND_VIDEO          Action = 18
	// telegram
	Action_SYNC_APP_INFO            Action = 11
	Action_RECEIVING_MSG            Action = 12
	Action_SEND_PHOTO               Action = 13
	Action_SEND_FILE                Action = 14
	Action_SEND_CONTACT_CARD        Action = 15
	Action_CREATE_GROUP             Action = 16
	Action_ADD_GROUP_MEMBER         Action = 17
	Action_GET_GROUP_MEMBERS        Action = 23
	Action_SEND_CODE                Action = 19
	Action_CONTACT_LIST             Action = 20
	Action_DIALOG_LIST              Action = 21
	Action_Get_MSG_HISTORY          Action = 22
	Action_CREATE_CHANNEL           Action = 24
	Action_DOWNLOAD_FILE            Action = 25
	Action_INVITE_TO_CHANNEL        Action = 26
	Action_IMPORT_TG_SESSION        Action = 27
	Action_JOIN_BY_LINK             Action = 28
	Action_GET_EMOJI_GROUP          Action = 29
	Action_MESSAGES_REACTION        Action = 30
	Action_LEAVE                    Action = 32
	Action_GET_CHANNEL_MEMBER       Action = 33
	Action_GET_ONLINE_ACCOUNTS      Action = 34
	Action_UPDATE_USER_INFO         Action = 35
	Action_SEARCH                   Action = 36
	Action_FORWARD_MESSAGE          Action = 38
	Action_DELETE_MEMBER            Action = 39
	Action_GET_USER_CHAT_FOLDERS    Action = 40
	Action_UPDATE_USER_CHAT_FOLDERS Action = 41
	Action_CHECK_USERNAME           Action = 42
	Action_UPDATES_GET_STATUS       Action = 43
	Action_CREATE_BOT               Action = 44
	Action_START_BOT                Action = 45
	Action_READ_HISTORY             Action = 46
	Action_CHANNEL_READ_VIEW        Action = 47
	Action_EDIT_ADMIN               Action = 48
	Action_SET_TYPE_ACTION          Action = 49
	Action_READ_CHANNEL_HISTORY     Action = 50
	Action_SEND_MSG_SINGLE          Action = 51
	Action_SEND_FILE_SINGLE         Action = 52
	Action_SEND_CARD_SINGLE         Action = 53
	Action_SAVE_DRAFT               Action = 54
	Action_CLEAR_ALL_DRAFT          Action = 55
	Action_DELETE_MESSAGES          Action = 56
	Action_CONTACTS_GET_LOCATED     Action = 57
	Action_EDIT_CHANNEL_INFO        Action = 58
	Action_GET_MANAGED_CHANNELS     Action = 59
	Action_EDIT_CHAT_BANNED_RIGHTS  Action = 60
	Action_GET_CHATS_INFO           Action = 61
	Action_GET_USER_INFO            Action = 62
	Action_SET_HISTORY_TTL          Action = 63
	Action_GET_COMMON_CHATS         Action = 64
	Action_EDIT_PARTICIPANT_BANNED  Action = 65
	Action_DELETE_PRIVATE_CHAT      Action = 66
	Action_PIN_DIALOG               Action = 67
	Action_GET_PINNED_DIALOGS       Action = 68
	Action_SEND_STORIES             Action = 69
	Action_DELETE_STORIES           Action = 70
	Action_EDIT_STORIES             Action = 71
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0:  "LOGIN",
		1:  "LOGOUT",
		31: "ERR_STOP",
		37: "LOGIN_SINGLE",
		2:  "SEND_MESSAGE",
		3:  "SEND_GROUP_MESSAGE",
		4:  "SYNC_ACCOUNT_KEY",
		5:  "GET_PREKEYBUNDLE",
		6:  "SYNC_CONTACTS",
		7:  "PING_PONG",
		8:  "SEND_VCARD_MESSAGE",
		9:  "SET_HEAD_SCULPTURE",
		10: "GET_USER_HEAD_IMAGE",
		18: "SEND_VIDEO",
		11: "SYNC_APP_INFO",
		12: "RECEIVING_MSG",
		13: "SEND_PHOTO",
		14: "SEND_FILE",
		15: "SEND_CONTACT_CARD",
		16: "CREATE_GROUP",
		17: "ADD_GROUP_MEMBER",
		23: "GET_GROUP_MEMBERS",
		19: "SEND_CODE",
		20: "CONTACT_LIST",
		21: "DIALOG_LIST",
		22: "Get_MSG_HISTORY",
		24: "CREATE_CHANNEL",
		25: "DOWNLOAD_FILE",
		26: "INVITE_TO_CHANNEL",
		27: "IMPORT_TG_SESSION",
		28: "JOIN_BY_LINK",
		29: "GET_EMOJI_GROUP",
		30: "MESSAGES_REACTION",
		32: "LEAVE",
		33: "GET_CHANNEL_MEMBER",
		34: "GET_ONLINE_ACCOUNTS",
		35: "UPDATE_USER_INFO",
		36: "SEARCH",
		38: "FORWARD_MESSAGE",
		39: "DELETE_MEMBER",
		40: "GET_USER_CHAT_FOLDERS",
		41: "UPDATE_USER_CHAT_FOLDERS",
		42: "CHECK_USERNAME",
		43: "UPDATES_GET_STATUS",
		44: "CREATE_BOT",
		45: "START_BOT",
		46: "READ_HISTORY",
		47: "CHANNEL_READ_VIEW",
		48: "EDIT_ADMIN",
		49: "SET_TYPE_ACTION",
		50: "READ_CHANNEL_HISTORY",
		51: "SEND_MSG_SINGLE",
		52: "SEND_FILE_SINGLE",
		53: "SEND_CARD_SINGLE",
		54: "SAVE_DRAFT",
		55: "CLEAR_ALL_DRAFT",
		56: "DELETE_MESSAGES",
		57: "CONTACTS_GET_LOCATED",
		58: "EDIT_CHANNEL_INFO",
		59: "GET_MANAGED_CHANNELS",
		60: "EDIT_CHAT_BANNED_RIGHTS",
		61: "GET_CHATS_INFO",
		62: "GET_USER_INFO",
		63: "SET_HISTORY_TTL",
		64: "GET_COMMON_CHATS",
		65: "EDIT_PARTICIPANT_BANNED",
		66: "DELETE_PRIVATE_CHAT",
		67: "PIN_DIALOG",
		68: "GET_PINNED_DIALOGS",
		69: "SEND_STORIES",
		70: "DELETE_STORIES",
		71: "EDIT_STORIES",
	}
	Action_value = map[string]int32{
		"LOGIN":                    0,
		"LOGOUT":                   1,
		"ERR_STOP":                 31,
		"LOGIN_SINGLE":             37,
		"SEND_MESSAGE":             2,
		"SEND_GROUP_MESSAGE":       3,
		"SYNC_ACCOUNT_KEY":         4,
		"GET_PREKEYBUNDLE":         5,
		"SYNC_CONTACTS":            6,
		"PING_PONG":                7,
		"SEND_VCARD_MESSAGE":       8,
		"SET_HEAD_SCULPTURE":       9,
		"GET_USER_HEAD_IMAGE":      10,
		"SEND_VIDEO":               18,
		"SYNC_APP_INFO":            11,
		"RECEIVING_MSG":            12,
		"SEND_PHOTO":               13,
		"SEND_FILE":                14,
		"SEND_CONTACT_CARD":        15,
		"CREATE_GROUP":             16,
		"ADD_GROUP_MEMBER":         17,
		"GET_GROUP_MEMBERS":        23,
		"SEND_CODE":                19,
		"CONTACT_LIST":             20,
		"DIALOG_LIST":              21,
		"Get_MSG_HISTORY":          22,
		"CREATE_CHANNEL":           24,
		"DOWNLOAD_FILE":            25,
		"INVITE_TO_CHANNEL":        26,
		"IMPORT_TG_SESSION":        27,
		"JOIN_BY_LINK":             28,
		"GET_EMOJI_GROUP":          29,
		"MESSAGES_REACTION":        30,
		"LEAVE":                    32,
		"GET_CHANNEL_MEMBER":       33,
		"GET_ONLINE_ACCOUNTS":      34,
		"UPDATE_USER_INFO":         35,
		"SEARCH":                   36,
		"FORWARD_MESSAGE":          38,
		"DELETE_MEMBER":            39,
		"GET_USER_CHAT_FOLDERS":    40,
		"UPDATE_USER_CHAT_FOLDERS": 41,
		"CHECK_USERNAME":           42,
		"UPDATES_GET_STATUS":       43,
		"CREATE_BOT":               44,
		"START_BOT":                45,
		"READ_HISTORY":             46,
		"CHANNEL_READ_VIEW":        47,
		"EDIT_ADMIN":               48,
		"SET_TYPE_ACTION":          49,
		"READ_CHANNEL_HISTORY":     50,
		"SEND_MSG_SINGLE":          51,
		"SEND_FILE_SINGLE":         52,
		"SEND_CARD_SINGLE":         53,
		"SAVE_DRAFT":               54,
		"CLEAR_ALL_DRAFT":          55,
		"DELETE_MESSAGES":          56,
		"CONTACTS_GET_LOCATED":     57,
		"EDIT_CHANNEL_INFO":        58,
		"GET_MANAGED_CHANNELS":     59,
		"EDIT_CHAT_BANNED_RIGHTS":  60,
		"GET_CHATS_INFO":           61,
		"GET_USER_INFO":            62,
		"SET_HISTORY_TTL":          63,
		"GET_COMMON_CHATS":         64,
		"EDIT_PARTICIPANT_BANNED":  65,
		"DELETE_PRIVATE_CHAT":      66,
		"PIN_DIALOG":               67,
		"GET_PINNED_DIALOGS":       68,
		"SEND_STORIES":             69,
		"DELETE_STORIES":           70,
		"EDIT_STORIES":             71,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_arthas_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_protobuf_arthas_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{0}
}

// 定义动作的返回状态枚举
type ActionResult int32

const (
	ActionResult_ALL_SUCCESS            ActionResult = 0
	ActionResult_PARTIAL_SUCCESS        ActionResult = 1
	ActionResult_ALL_FAIL               ActionResult = 2
	ActionResult_ALL_UNKNOWN            ActionResult = 3
	ActionResult_PONG                   ActionResult = 4
	ActionResult_LOGIN_NEED_CODE        ActionResult = 5
	ActionResult_LOGIN_VERIFY_CODE_FAIL ActionResult = 6
	ActionResult_RUN_TIME_OUT           ActionResult = 7
)

// Enum value maps for ActionResult.
var (
	ActionResult_name = map[int32]string{
		0: "ALL_SUCCESS",
		1: "PARTIAL_SUCCESS",
		2: "ALL_FAIL",
		3: "ALL_UNKNOWN",
		4: "PONG",
		5: "LOGIN_NEED_CODE",
		6: "LOGIN_VERIFY_CODE_FAIL",
		7: "RUN_TIME_OUT",
	}
	ActionResult_value = map[string]int32{
		"ALL_SUCCESS":            0,
		"PARTIAL_SUCCESS":        1,
		"ALL_FAIL":               2,
		"ALL_UNKNOWN":            3,
		"PONG":                   4,
		"LOGIN_NEED_CODE":        5,
		"LOGIN_VERIFY_CODE_FAIL": 6,
		"RUN_TIME_OUT":           7,
	}
)

func (x ActionResult) Enum() *ActionResult {
	p := new(ActionResult)
	*p = x
	return p
}

func (x ActionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_arthas_proto_enumTypes[1].Descriptor()
}

func (ActionResult) Type() protoreflect.EnumType {
	return &file_protobuf_arthas_proto_enumTypes[1]
}

func (x ActionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionResult.Descriptor instead.
func (ActionResult) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{1}
}

// 定义单个帐号的执行状态枚举
type AccountStatus int32

const (
	AccountStatus_SUCCESS                 AccountStatus = 0   //成功
	AccountStatus_FAIL                    AccountStatus = 1   //失败
	AccountStatus_UNKNOWN                 AccountStatus = 2   //未知
	AccountStatus_NOT_EXIST               AccountStatus = 3   //账号不存在
	AccountStatus_PROXY_ERR               AccountStatus = 4   // 代理地址报错
	AccountStatus_SEAL                    AccountStatus = 403 //登录失败，已封号
	AccountStatus_PERMISSION              AccountStatus = 401 // 登录失败，权限错误
	AccountStatus_NEED_SEND_CODE          AccountStatus = 5   // 需要发送验证码
	AccountStatus_LOGIN_CODE_FAIL         AccountStatus = 6   // 验证码错误
	AccountStatus_LOGOUT_FAIL             AccountStatus = 7   // 登出失败
	AccountStatus_LOGIN_SESSION_CORRUPTED AccountStatus = 8   //登录session损坏
	AccountStatus_LOGIN_TIMEOUT           AccountStatus = 9
)

// Enum value maps for AccountStatus.
var (
	AccountStatus_name = map[int32]string{
		0:   "SUCCESS",
		1:   "FAIL",
		2:   "UNKNOWN",
		3:   "NOT_EXIST",
		4:   "PROXY_ERR",
		403: "SEAL",
		401: "PERMISSION",
		5:   "NEED_SEND_CODE",
		6:   "LOGIN_CODE_FAIL",
		7:   "LOGOUT_FAIL",
		8:   "LOGIN_SESSION_CORRUPTED",
		9:   "LOGIN_TIMEOUT",
	}
	AccountStatus_value = map[string]int32{
		"SUCCESS":                 0,
		"FAIL":                    1,
		"UNKNOWN":                 2,
		"NOT_EXIST":               3,
		"PROXY_ERR":               4,
		"SEAL":                    403,
		"PERMISSION":              401,
		"NEED_SEND_CODE":          5,
		"LOGIN_CODE_FAIL":         6,
		"LOGOUT_FAIL":             7,
		"LOGIN_SESSION_CORRUPTED": 8,
		"LOGIN_TIMEOUT":           9,
	}
)

func (x AccountStatus) Enum() *AccountStatus {
	p := new(AccountStatus)
	*p = x
	return p
}

func (x AccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_arthas_proto_enumTypes[2].Descriptor()
}

func (AccountStatus) Type() protoreflect.EnumType {
	return &file_protobuf_arthas_proto_enumTypes[2]
}

func (x AccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountStatus.Descriptor instead.
func (AccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{2}
}

type EditChatBannedRightsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           uint64                `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel          string                `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	ChatBannedRights *ChatBannedRightsType `protobuf:"bytes,3,opt,name=ChatBannedRights,proto3" json:"ChatBannedRights,omitempty"`
}

func (x *EditChatBannedRightsDetail) Reset() {
	*x = EditChatBannedRightsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChatBannedRightsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChatBannedRightsDetail) ProtoMessage() {}

func (x *EditChatBannedRightsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChatBannedRightsDetail.ProtoReflect.Descriptor instead.
func (*EditChatBannedRightsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{0}
}

func (x *EditChatBannedRightsDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *EditChatBannedRightsDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *EditChatBannedRightsDetail) GetChatBannedRights() *ChatBannedRightsType {
	if x != nil {
		return x.ChatBannedRights
	}
	return nil
}

type EditParticipantBannedDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           uint64                `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel          string                `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	User             string                `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	ChatBannedRights *ChatBannedRightsType `protobuf:"bytes,4,opt,name=ChatBannedRights,proto3" json:"ChatBannedRights,omitempty"`
}

func (x *EditParticipantBannedDetail) Reset() {
	*x = EditParticipantBannedDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditParticipantBannedDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditParticipantBannedDetail) ProtoMessage() {}

func (x *EditParticipantBannedDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditParticipantBannedDetail.ProtoReflect.Descriptor instead.
func (*EditParticipantBannedDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{1}
}

func (x *EditParticipantBannedDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *EditParticipantBannedDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *EditParticipantBannedDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *EditParticipantBannedDetail) GetChatBannedRights() *ChatBannedRightsType {
	if x != nil {
		return x.ChatBannedRights
	}
	return nil
}

type ChatBannedRightsType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, does not allow a user to view messages in a supergroup/channel/chat¹
	ViewMessages bool `protobuf:"varint,1,opt,name=ViewMessages,proto3" json:"ViewMessages,omitempty"`
	// If set, does not allow a user to send messages in a supergroup/chat¹
	SendMessages bool `protobuf:"varint,2,opt,name=SendMessages,proto3" json:"SendMessages,omitempty"`
	// If set, does not allow a user to send any media in a supergroup/chat¹
	SendMedia bool `protobuf:"varint,3,opt,name=SendMedia,proto3" json:"SendMedia,omitempty"`
	// If set, does not allow a user to send stickers in a supergroup/chat¹
	SendStickers bool `protobuf:"varint,4,opt,name=SendStickers,proto3" json:"SendStickers,omitempty"`
	// If set, does not allow a user to send gifs in a supergroup/chat¹
	SendGifs bool `protobuf:"varint,5,opt,name=SendGifs,proto3" json:"SendGifs,omitempty"`
	// If set, does not allow a user to send games in a supergroup/chat¹
	SendGames bool `protobuf:"varint,6,opt,name=SendGames,proto3" json:"SendGames,omitempty"`
	// If set, does not allow a user to use inline bots in a supergroup/chat¹.
	SendInline bool `protobuf:"varint,7,opt,name=SendInline,proto3" json:"SendInline,omitempty"`
	// If set, does not allow a user to embed links in the messages of a supergroup/chat¹
	EmbedLinks bool `protobuf:"varint,8,opt,name=EmbedLinks,proto3" json:"EmbedLinks,omitempty"`
	// If set, does not allow a user to send polls in a supergroup/chat¹
	SendPolls bool `protobuf:"varint,9,opt,name=SendPolls,proto3" json:"SendPolls,omitempty"`
	// If set, does not allow any user to change the description of a supergroup/chat¹
	ChangeInfo bool `protobuf:"varint,10,opt,name=ChangeInfo,proto3" json:"ChangeInfo,omitempty"`
	// If set, does not allow any user to invite users in a supergroup/chat¹
	InviteUsers bool `protobuf:"varint,11,opt,name=InviteUsers,proto3" json:"InviteUsers,omitempty"`
	// If set, does not allow any user to pin messages in a supergroup/chat¹
	PinMessages bool `protobuf:"varint,12,opt,name=PinMessages,proto3" json:"PinMessages,omitempty"`
	// If set, does not allow any user to create, delete or modify forum topics »¹.
	ManageTopics bool `protobuf:"varint,13,opt,name=ManageTopics,proto3" json:"ManageTopics,omitempty"`
	// If set, does not allow a user to send photos in a supergroup/chat¹.
	SendPhotos bool `protobuf:"varint,14,opt,name=SendPhotos,proto3" json:"SendPhotos,omitempty"`
	// If set, does not allow a user to send videos in a supergroup/chat¹.
	SendVideos bool `protobuf:"varint,15,opt,name=SendVideos,proto3" json:"SendVideos,omitempty"`
	// If set, does not allow a user to send round videos in a supergroup/chat¹.
	SendRoundVideos bool `protobuf:"varint,16,opt,name=SendRoundVideos,proto3" json:"SendRoundVideos,omitempty"`
	// If set, does not allow a user to send audio files in a supergroup/chat¹.
	SendAudios bool `protobuf:"varint,17,opt,name=SendAudios,proto3" json:"SendAudios,omitempty"`
	// If set, does not allow a user to send voice messages in a supergroup/chat¹.
	SendVoices bool `protobuf:"varint,18,opt,name=SendVoices,proto3" json:"SendVoices,omitempty"`
	// If set, does not allow a user to send documents in a supergroup/chat¹.
	SendDocs bool `protobuf:"varint,19,opt,name=SendDocs,proto3" json:"SendDocs,omitempty"`
	// If set, does not allow a user to send text messages in a supergroup/chat¹.
	SendPlain bool `protobuf:"varint,20,opt,name=SendPlain,proto3" json:"SendPlain,omitempty"`
	// Validity of said permissions (it is considered forever any value less then 30 seconds
	// or more then 366 days).
	UntilDate int64 `protobuf:"varint,21,opt,name=UntilDate,proto3" json:"UntilDate,omitempty"`
}

func (x *ChatBannedRightsType) Reset() {
	*x = ChatBannedRightsType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatBannedRightsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBannedRightsType) ProtoMessage() {}

func (x *ChatBannedRightsType) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBannedRightsType.ProtoReflect.Descriptor instead.
func (*ChatBannedRightsType) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{2}
}

func (x *ChatBannedRightsType) GetViewMessages() bool {
	if x != nil {
		return x.ViewMessages
	}
	return false
}

func (x *ChatBannedRightsType) GetSendMessages() bool {
	if x != nil {
		return x.SendMessages
	}
	return false
}

func (x *ChatBannedRightsType) GetSendMedia() bool {
	if x != nil {
		return x.SendMedia
	}
	return false
}

func (x *ChatBannedRightsType) GetSendStickers() bool {
	if x != nil {
		return x.SendStickers
	}
	return false
}

func (x *ChatBannedRightsType) GetSendGifs() bool {
	if x != nil {
		return x.SendGifs
	}
	return false
}

func (x *ChatBannedRightsType) GetSendGames() bool {
	if x != nil {
		return x.SendGames
	}
	return false
}

func (x *ChatBannedRightsType) GetSendInline() bool {
	if x != nil {
		return x.SendInline
	}
	return false
}

func (x *ChatBannedRightsType) GetEmbedLinks() bool {
	if x != nil {
		return x.EmbedLinks
	}
	return false
}

func (x *ChatBannedRightsType) GetSendPolls() bool {
	if x != nil {
		return x.SendPolls
	}
	return false
}

func (x *ChatBannedRightsType) GetChangeInfo() bool {
	if x != nil {
		return x.ChangeInfo
	}
	return false
}

func (x *ChatBannedRightsType) GetInviteUsers() bool {
	if x != nil {
		return x.InviteUsers
	}
	return false
}

func (x *ChatBannedRightsType) GetPinMessages() bool {
	if x != nil {
		return x.PinMessages
	}
	return false
}

func (x *ChatBannedRightsType) GetManageTopics() bool {
	if x != nil {
		return x.ManageTopics
	}
	return false
}

func (x *ChatBannedRightsType) GetSendPhotos() bool {
	if x != nil {
		return x.SendPhotos
	}
	return false
}

func (x *ChatBannedRightsType) GetSendVideos() bool {
	if x != nil {
		return x.SendVideos
	}
	return false
}

func (x *ChatBannedRightsType) GetSendRoundVideos() bool {
	if x != nil {
		return x.SendRoundVideos
	}
	return false
}

func (x *ChatBannedRightsType) GetSendAudios() bool {
	if x != nil {
		return x.SendAudios
	}
	return false
}

func (x *ChatBannedRightsType) GetSendVoices() bool {
	if x != nil {
		return x.SendVoices
	}
	return false
}

func (x *ChatBannedRightsType) GetSendDocs() bool {
	if x != nil {
		return x.SendDocs
	}
	return false
}

func (x *ChatBannedRightsType) GetSendPlain() bool {
	if x != nil {
		return x.SendPlain
	}
	return false
}

func (x *ChatBannedRightsType) GetUntilDate() int64 {
	if x != nil {
		return x.UntilDate
	}
	return 0
}

type GetManageChannelsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ByLocation bool   `protobuf:"varint,2,opt,name=ByLocation,proto3" json:"ByLocation,omitempty"`
	CheckLimit bool   `protobuf:"varint,3,opt,name=CheckLimit,proto3" json:"CheckLimit,omitempty"`
}

func (x *GetManageChannelsDetail) Reset() {
	*x = GetManageChannelsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManageChannelsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManageChannelsDetail) ProtoMessage() {}

func (x *GetManageChannelsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManageChannelsDetail.ProtoReflect.Descriptor instead.
func (*GetManageChannelsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{3}
}

func (x *GetManageChannelsDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *GetManageChannelsDetail) GetByLocation() bool {
	if x != nil {
		return x.ByLocation
	}
	return false
}

func (x *GetManageChannelsDetail) GetCheckLimit() bool {
	if x != nil {
		return x.CheckLimit
	}
	return false
}

type SendStoriesDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     uint64           `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Chat       []string         `protobuf:"bytes,2,rep,name=Chat,proto3" json:"Chat,omitempty"`
	Pinned     bool             `protobuf:"varint,3,opt,name=Pinned,proto3" json:"Pinned,omitempty"`
	NoForwards bool             `protobuf:"varint,4,opt,name=NoForwards,proto3" json:"NoForwards,omitempty"`
	Caption    string           `protobuf:"bytes,5,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Period     uint64           `protobuf:"varint,6,opt,name=Period,proto3" json:"Period,omitempty"`
	From       string           `protobuf:"bytes,7,opt,name=From,proto3" json:"From,omitempty"`
	FromId     int64            `protobuf:"varint,8,opt,name=FromId,proto3" json:"FromId,omitempty"`
	FileType   *FileDetailValue `protobuf:"bytes,9,opt,name=FileType,proto3" json:"FileType,omitempty"`
}

func (x *SendStoriesDetail) Reset() {
	*x = SendStoriesDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendStoriesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStoriesDetail) ProtoMessage() {}

func (x *SendStoriesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStoriesDetail.ProtoReflect.Descriptor instead.
func (*SendStoriesDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{4}
}

func (x *SendStoriesDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SendStoriesDetail) GetChat() []string {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *SendStoriesDetail) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *SendStoriesDetail) GetNoForwards() bool {
	if x != nil {
		return x.NoForwards
	}
	return false
}

func (x *SendStoriesDetail) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *SendStoriesDetail) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *SendStoriesDetail) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendStoriesDetail) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *SendStoriesDetail) GetFileType() *FileDetailValue {
	if x != nil {
		return x.FileType
	}
	return nil
}

type GetCommonChatsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	User   string `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	MaxId  int64  `protobuf:"varint,3,opt,name=MaxId,proto3" json:"MaxId,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetCommonChatsDetail) Reset() {
	*x = GetCommonChatsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommonChatsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommonChatsDetail) ProtoMessage() {}

func (x *GetCommonChatsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommonChatsDetail.ProtoReflect.Descriptor instead.
func (*GetCommonChatsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommonChatsDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *GetCommonChatsDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GetCommonChatsDetail) GetMaxId() int64 {
	if x != nil {
		return x.MaxId
	}
	return 0
}

func (x *GetCommonChatsDetail) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SetHistoryTTLDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Chat   string `protobuf:"bytes,2,opt,name=Chat,proto3" json:"Chat,omitempty"`
	Period int64  `protobuf:"varint,3,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *SetHistoryTTLDetail) Reset() {
	*x = SetHistoryTTLDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHistoryTTLDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHistoryTTLDetail) ProtoMessage() {}

func (x *SetHistoryTTLDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHistoryTTLDetail.ProtoReflect.Descriptor instead.
func (*SetHistoryTTLDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{6}
}

func (x *SetHistoryTTLDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SetHistoryTTLDetail) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

func (x *SetHistoryTTLDetail) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type GetChatsInfoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Chat    string `protobuf:"bytes,3,opt,name=Chat,proto3" json:"Chat,omitempty"`
}

func (x *GetChatsInfoDetail) Reset() {
	*x = GetChatsInfoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatsInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatsInfoDetail) ProtoMessage() {}

func (x *GetChatsInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatsInfoDetail.ProtoReflect.Descriptor instead.
func (*GetChatsInfoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{7}
}

func (x *GetChatsInfoDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *GetChatsInfoDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetChatsInfoDetail) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

type GetUserInfoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	User   string `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
}

func (x *GetUserInfoDetail) Reset() {
	*x = GetUserInfoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoDetail) ProtoMessage() {}

func (x *GetUserInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoDetail.ProtoReflect.Descriptor instead.
func (*GetUserInfoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserInfoDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *GetUserInfoDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetPinnedDialogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *GetPinnedDialogs) Reset() {
	*x = GetPinnedDialogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedDialogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedDialogs) ProtoMessage() {}

func (x *GetPinnedDialogs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedDialogs.ProtoReflect.Descriptor instead.
func (*GetPinnedDialogs) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{9}
}

func (x *GetPinnedDialogs) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type ContactsGetLocatedDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	// 是否允许更新位置
	Background bool `protobuf:"varint,2,opt,name=Background,proto3" json:"Background,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,3,opt,name=Lat,proto3" json:"Lat,omitempty"`
	// 经度
	Long float64 `protobuf:"fixed64,4,opt,name=Long,proto3" json:"Long,omitempty"`
	// 范围，米为单位
	AccuracyRadius uint64 `protobuf:"varint,5,opt,name=AccuracyRadius,proto3" json:"AccuracyRadius,omitempty"`
	// 位置过期时间
	SelfExpires uint64 `protobuf:"varint,6,opt,name=SelfExpires,proto3" json:"SelfExpires,omitempty"`
}

func (x *ContactsGetLocatedDetail) Reset() {
	*x = ContactsGetLocatedDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactsGetLocatedDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactsGetLocatedDetail) ProtoMessage() {}

func (x *ContactsGetLocatedDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactsGetLocatedDetail.ProtoReflect.Descriptor instead.
func (*ContactsGetLocatedDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{10}
}

func (x *ContactsGetLocatedDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *ContactsGetLocatedDetail) GetBackground() bool {
	if x != nil {
		return x.Background
	}
	return false
}

func (x *ContactsGetLocatedDetail) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ContactsGetLocatedDetail) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *ContactsGetLocatedDetail) GetAccuracyRadius() uint64 {
	if x != nil {
		return x.AccuracyRadius
	}
	return 0
}

func (x *ContactsGetLocatedDetail) GetSelfExpires() uint64 {
	if x != nil {
		return x.SelfExpires
	}
	return 0
}

type PinDialogDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	Chat    string `protobuf:"bytes,4,opt,name=Chat,proto3" json:"Chat,omitempty"`
	Pinned  bool   `protobuf:"varint,5,opt,name=Pinned,proto3" json:"Pinned,omitempty"`
}

func (x *PinDialogDetail) Reset() {
	*x = PinDialogDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinDialogDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinDialogDetail) ProtoMessage() {}

func (x *PinDialogDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinDialogDetail.ProtoReflect.Descriptor instead.
func (*PinDialogDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{11}
}

func (x *PinDialogDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *PinDialogDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PinDialogDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PinDialogDetail) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

func (x *PinDialogDetail) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

type ClearAllDraftDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *ClearAllDraftDetail) Reset() {
	*x = ClearAllDraftDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllDraftDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllDraftDetail) ProtoMessage() {}

func (x *ClearAllDraftDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllDraftDetail.ProtoReflect.Descriptor instead.
func (*ClearAllDraftDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{12}
}

func (x *ClearAllDraftDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type DeleteMessagesDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    uint64  `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Revoke    bool    `protobuf:"varint,2,opt,name=Revoke,proto3" json:"Revoke,omitempty"` // true 双方都删除，false 只删除自己
	IsChannel bool    `protobuf:"varint,3,opt,name=IsChannel,proto3" json:"IsChannel,omitempty"`
	Channel   string  `protobuf:"bytes,4,opt,name=Channel,proto3" json:"Channel,omitempty"`
	MsgIds    []int64 `protobuf:"varint,5,rep,packed,name=MsgIds,proto3" json:"MsgIds,omitempty"`
}

func (x *DeleteMessagesDetail) Reset() {
	*x = DeleteMessagesDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessagesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessagesDetail) ProtoMessage() {}

func (x *DeleteMessagesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessagesDetail.ProtoReflect.Descriptor instead.
func (*DeleteMessagesDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMessagesDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *DeleteMessagesDetail) GetRevoke() bool {
	if x != nil {
		return x.Revoke
	}
	return false
}

func (x *DeleteMessagesDetail) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

func (x *DeleteMessagesDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *DeleteMessagesDetail) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type OrdinaryAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginDetail map[uint64]*LoginDetail `protobuf:"bytes,1,rep,name=login_detail,json=loginDetail,proto3" json:"login_detail,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type        string                  `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *OrdinaryAction) Reset() {
	*x = OrdinaryAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdinaryAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdinaryAction) ProtoMessage() {}

func (x *OrdinaryAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdinaryAction.ProtoReflect.Descriptor instead.
func (*OrdinaryAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{14}
}

func (x *OrdinaryAction) GetLoginDetail() map[uint64]*LoginDetail {
	if x != nil {
		return x.LoginDetail
	}
	return nil
}

func (x *OrdinaryAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OrdinarySingleAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginDetail *LoginDetail `protobuf:"bytes,1,opt,name=login_detail,json=loginDetail,proto3" json:"login_detail,omitempty"`
	Type        string       `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Account     uint64       `protobuf:"varint,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *OrdinarySingleAction) Reset() {
	*x = OrdinarySingleAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdinarySingleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdinarySingleAction) ProtoMessage() {}

func (x *OrdinarySingleAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdinarySingleAction.ProtoReflect.Descriptor instead.
func (*OrdinarySingleAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{15}
}

func (x *OrdinarySingleAction) GetLoginDetail() *LoginDetail {
	if x != nil {
		return x.LoginDetail
	}
	return nil
}

func (x *OrdinarySingleAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrdinarySingleAction) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type DeletePrivateChatDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	User   string `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Revoke bool   `protobuf:"varint,3,opt,name=Revoke,proto3" json:"Revoke,omitempty"`
}

func (x *DeletePrivateChatDetail) Reset() {
	*x = DeletePrivateChatDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePrivateChatDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrivateChatDetail) ProtoMessage() {}

func (x *DeletePrivateChatDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrivateChatDetail.ProtoReflect.Descriptor instead.
func (*DeletePrivateChatDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePrivateChatDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *DeletePrivateChatDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeletePrivateChatDetail) GetRevoke() bool {
	if x != nil {
		return x.Revoke
	}
	return false
}

type ForwardMessageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64  `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	FromPeer string  `protobuf:"bytes,2,opt,name=fromPeer,proto3" json:"fromPeer,omitempty"`
	ToPeer   string  `protobuf:"bytes,3,opt,name=ToPeer,proto3" json:"ToPeer,omitempty"`
	MsgIds   []int64 `protobuf:"varint,4,rep,packed,name=MsgIds,proto3" json:"MsgIds,omitempty"`
}

func (x *ForwardMessageDetail) Reset() {
	*x = ForwardMessageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardMessageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardMessageDetail) ProtoMessage() {}

func (x *ForwardMessageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardMessageDetail.ProtoReflect.Descriptor instead.
func (*ForwardMessageDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{17}
}

func (x *ForwardMessageDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *ForwardMessageDetail) GetFromPeer() string {
	if x != nil {
		return x.FromPeer
	}
	return ""
}

func (x *ForwardMessageDetail) GetToPeer() string {
	if x != nil {
		return x.ToPeer
	}
	return ""
}

func (x *ForwardMessageDetail) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type DeleteMemberDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      uint64   `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ChatId      string   `protobuf:"bytes,2,opt,name=ChatId,proto3" json:"ChatId,omitempty"`
	DeleteUsers []string `protobuf:"bytes,3,rep,name=DeleteUsers,proto3" json:"DeleteUsers,omitempty"`
	ChannelId   string   `protobuf:"bytes,4,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
}

func (x *DeleteMemberDetail) Reset() {
	*x = DeleteMemberDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberDetail) ProtoMessage() {}

func (x *DeleteMemberDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberDetail.ProtoReflect.Descriptor instead.
func (*DeleteMemberDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteMemberDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *DeleteMemberDetail) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *DeleteMemberDetail) GetDeleteUsers() []string {
	if x != nil {
		return x.DeleteUsers
	}
	return nil
}

func (x *DeleteMemberDetail) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type LogoutAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoutDetail map[uint64]*LogoutDetail `protobuf:"bytes,1,rep,name=logout_detail,json=logoutDetail,proto3" json:"logout_detail,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type         string                   `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *LogoutAction) Reset() {
	*x = LogoutAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutAction) ProtoMessage() {}

func (x *LogoutAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutAction.ProtoReflect.Descriptor instead.
func (*LogoutAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{19}
}

func (x *LogoutAction) GetLogoutDetail() map[uint64]*LogoutDetail {
	if x != nil {
		return x.LogoutDetail
	}
	return nil
}

func (x *LogoutAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LoginDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyUrl string          `protobuf:"bytes,1,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
	LoginId  string          `protobuf:"bytes,2,opt,name=loginId,proto3" json:"loginId,omitempty"`   //登录的id 用来收验证码
	TgDevice *TgDeviceConfig `protobuf:"bytes,3,opt,name=tgDevice,proto3" json:"tgDevice,omitempty"` // 登录设备信息
	IsBot    bool            `protobuf:"varint,4,opt,name=isBot,proto3" json:"isBot,omitempty"`
	Token    string          `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginDetail) Reset() {
	*x = LoginDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginDetail) ProtoMessage() {}

func (x *LoginDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginDetail.ProtoReflect.Descriptor instead.
func (*LoginDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{20}
}

func (x *LoginDetail) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *LoginDetail) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

func (x *LoginDetail) GetTgDevice() *TgDeviceConfig {
	if x != nil {
		return x.TgDevice
	}
	return nil
}

func (x *LoginDetail) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

func (x *LoginDetail) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type TgDeviceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceModel    string `protobuf:"bytes,1,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	SystemVersion  string `protobuf:"bytes,2,opt,name=SystemVersion,proto3" json:"SystemVersion,omitempty"`
	AppVersion     string `protobuf:"bytes,3,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	LangCode       string `protobuf:"bytes,4,opt,name=LangCode,proto3" json:"LangCode,omitempty"`
	SystemLangCode string `protobuf:"bytes,5,opt,name=SystemLangCode,proto3" json:"SystemLangCode,omitempty"`
	LangPack       string `protobuf:"bytes,6,opt,name=LangPack,proto3" json:"LangPack,omitempty"`
}

func (x *TgDeviceConfig) Reset() {
	*x = TgDeviceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TgDeviceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TgDeviceConfig) ProtoMessage() {}

func (x *TgDeviceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TgDeviceConfig.ProtoReflect.Descriptor instead.
func (*TgDeviceConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{21}
}

func (x *TgDeviceConfig) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *TgDeviceConfig) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *TgDeviceConfig) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *TgDeviceConfig) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *TgDeviceConfig) GetSystemLangCode() string {
	if x != nil {
		return x.SystemLangCode
	}
	return ""
}

func (x *TgDeviceConfig) GetLangPack() string {
	if x != nil {
		return x.LangPack
	}
	return ""
}

type LogoutDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyUrl string `protobuf:"bytes,1,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
}

func (x *LogoutDetail) Reset() {
	*x = LogoutDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutDetail) ProtoMessage() {}

func (x *LogoutDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutDetail.ProtoReflect.Descriptor instead.
func (*LogoutDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{22}
}

func (x *LogoutDetail) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

type GetUserHeadImageAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadImage map[uint64]*GetUserHeadImage `protobuf:"bytes,1,rep,name=head_image,json=headImage,proto3" json:"head_image,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUserHeadImageAction) Reset() {
	*x = GetUserHeadImageAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserHeadImageAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserHeadImageAction) ProtoMessage() {}

func (x *GetUserHeadImageAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserHeadImageAction.ProtoReflect.Descriptor instead.
func (*GetUserHeadImageAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{23}
}

func (x *GetUserHeadImageAction) GetHeadImage() map[uint64]*GetUserHeadImage {
	if x != nil {
		return x.HeadImage
	}
	return nil
}

type GetUserHeadImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account []uint64 `protobuf:"varint,1,rep,packed,name=account,proto3" json:"account,omitempty"`
}

func (x *GetUserHeadImage) Reset() {
	*x = GetUserHeadImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserHeadImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserHeadImage) ProtoMessage() {}

func (x *GetUserHeadImage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserHeadImage.ProtoReflect.Descriptor instead.
func (*GetUserHeadImage) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserHeadImage) GetAccount() []uint64 {
	if x != nil {
		return x.Account
	}
	return nil
}

type DownUserHeadImageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	GetUser uint64 `protobuf:"varint,2,opt,name=getUser,proto3" json:"getUser,omitempty"`
	PhotoId int64  `protobuf:"varint,3,opt,name=photoId,proto3" json:"photoId,omitempty"`
}

func (x *DownUserHeadImageDetail) Reset() {
	*x = DownUserHeadImageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownUserHeadImageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownUserHeadImageDetail) ProtoMessage() {}

func (x *DownUserHeadImageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownUserHeadImageDetail.ProtoReflect.Descriptor instead.
func (*DownUserHeadImageDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{25}
}

func (x *DownUserHeadImageDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *DownUserHeadImageDetail) GetGetUser() uint64 {
	if x != nil {
		return x.GetUser
	}
	return 0
}

func (x *DownUserHeadImageDetail) GetPhotoId() int64 {
	if x != nil {
		return x.PhotoId
	}
	return 0
}

type SearchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=Search,proto3" json:"Search,omitempty"`
}

func (x *SearchDetail) Reset() {
	*x = SearchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDetail) ProtoMessage() {}

func (x *SearchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDetail.ProtoReflect.Descriptor instead.
func (*SearchDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{26}
}

func (x *SearchDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SearchDetail) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

// 定义头像
type HeadSculpture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image   []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Account uint64 `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *HeadSculpture) Reset() {
	*x = HeadSculpture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadSculpture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSculpture) ProtoMessage() {}

func (x *HeadSculpture) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSculpture.ProtoReflect.Descriptor instead.
func (*HeadSculpture) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{27}
}

func (x *HeadSculpture) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *HeadSculpture) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

// 修改头像信息
type SetHeadSculptureAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadSculptrueData *HeadSculpture `protobuf:"bytes,1,opt,name=HeadSculptrue_data,json=HeadSculptrueData,proto3" json:"HeadSculptrue_data,omitempty"`
}

func (x *SetHeadSculptureAction) Reset() {
	*x = SetHeadSculptureAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHeadSculptureAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHeadSculptureAction) ProtoMessage() {}

func (x *SetHeadSculptureAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHeadSculptureAction.ProtoReflect.Descriptor instead.
func (*SetHeadSculptureAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{28}
}

func (x *SetHeadSculptureAction) GetHeadSculptrueData() *HeadSculpture {
	if x != nil {
		return x.HeadSculptrueData
	}
	return nil
}

// 定义明信片
type VCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fn  string `protobuf:"bytes,1,opt,name=Fn,proto3" json:"Fn,omitempty"`
	Tel string `protobuf:"bytes,2,opt,name=Tel,proto3" json:"Tel,omitempty"`
}

func (x *VCard) Reset() {
	*x = VCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCard) ProtoMessage() {}

func (x *VCard) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCard.ProtoReflect.Descriptor instead.
func (*VCard) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{29}
}

func (x *VCard) GetFn() string {
	if x != nil {
		return x.Fn
	}
	return ""
}

func (x *VCard) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

// 定义明信片消息
type SendVCardMsgDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendVCardMsgDetailAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendVCardMsgDetail) Reset() {
	*x = SendVCardMsgDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVCardMsgDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVCardMsgDetail) ProtoMessage() {}

func (x *SendVCardMsgDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVCardMsgDetail.ProtoReflect.Descriptor instead.
func (*SendVCardMsgDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{30}
}

func (x *SendVCardMsgDetail) GetDetails() []*SendVCardMsgDetailAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendMessageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendMessageAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendMessageDetail) Reset() {
	*x = SendMessageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageDetail) ProtoMessage() {}

func (x *SendMessageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageDetail.ProtoReflect.Descriptor instead.
func (*SendMessageDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{31}
}

func (x *SendMessageDetail) GetDetails() []*SendMessageAction {
	if x != nil {
		return x.Details
	}
	return nil
}

// 定义telegram app 信息
type AppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   uint64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	AppHash string `protobuf:"bytes,2,opt,name=appHash,proto3" json:"appHash,omitempty"`
}

func (x *AppData) Reset() {
	*x = AppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppData) ProtoMessage() {}

func (x *AppData) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppData.ProtoReflect.Descriptor instead.
func (*AppData) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{32}
}

func (x *AppData) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AppData) GetAppHash() string {
	if x != nil {
		return x.AppHash
	}
	return ""
}

// 定义密钥数据
type KeyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Privatekey       []byte `protobuf:"bytes,1,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
	PrivateMsgKey    []byte `protobuf:"bytes,2,opt,name=privateMsgKey,proto3" json:"privateMsgKey,omitempty"`
	ResumptionSecret []byte `protobuf:"bytes,3,opt,name=resumptionSecret,proto3" json:"resumptionSecret,omitempty"`
	Publickey        []byte `protobuf:"bytes,4,opt,name=publickey,proto3" json:"publickey,omitempty"`
	PublicMsgKey     []byte `protobuf:"bytes,5,opt,name=publicMsgKey,proto3" json:"publicMsgKey,omitempty"`
	ClientPayload    []byte `protobuf:"bytes,6,opt,name=clientPayload,proto3" json:"clientPayload,omitempty"`
	Identify         []byte `protobuf:"bytes,7,opt,name=identify,proto3" json:"identify,omitempty"`
}

func (x *KeyData) Reset() {
	*x = KeyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyData) ProtoMessage() {}

func (x *KeyData) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyData.ProtoReflect.Descriptor instead.
func (*KeyData) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{33}
}

func (x *KeyData) GetPrivatekey() []byte {
	if x != nil {
		return x.Privatekey
	}
	return nil
}

func (x *KeyData) GetPrivateMsgKey() []byte {
	if x != nil {
		return x.PrivateMsgKey
	}
	return nil
}

func (x *KeyData) GetResumptionSecret() []byte {
	if x != nil {
		return x.ResumptionSecret
	}
	return nil
}

func (x *KeyData) GetPublickey() []byte {
	if x != nil {
		return x.Publickey
	}
	return nil
}

func (x *KeyData) GetPublicMsgKey() []byte {
	if x != nil {
		return x.PublicMsgKey
	}
	return nil
}

func (x *KeyData) GetClientPayload() []byte {
	if x != nil {
		return x.ClientPayload
	}
	return nil
}

func (x *KeyData) GetIdentify() []byte {
	if x != nil {
		return x.Identify
	}
	return nil
}

// 定义同步帐号密钥动作消息
type SyncAccountKeyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyData map[uint64]*KeyData `protobuf:"bytes,1,rep,name=key_data,json=keyData,proto3" json:"key_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SyncAccountKeyAction) Reset() {
	*x = SyncAccountKeyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAccountKeyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAccountKeyAction) ProtoMessage() {}

func (x *SyncAccountKeyAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAccountKeyAction.ProtoReflect.Descriptor instead.
func (*SyncAccountKeyAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{34}
}

func (x *SyncAccountKeyAction) GetKeyData() map[uint64]*KeyData {
	if x != nil {
		return x.KeyData
	}
	return nil
}

// 定义同步app信息动作消息
type SyncAppInfoAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppData map[uint64]*AppData `protobuf:"bytes,1,rep,name=app_data,json=appData,proto3" json:"app_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SyncAppInfoAction) Reset() {
	*x = SyncAppInfoAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAppInfoAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAppInfoAction) ProtoMessage() {}

func (x *SyncAppInfoAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAppInfoAction.ProtoReflect.Descriptor instead.
func (*SyncAppInfoAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{35}
}

func (x *SyncAppInfoAction) GetAppData() map[uint64]*AppData {
	if x != nil {
		return x.AppData
	}
	return nil
}

type DeleteStoriesDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64  `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	StoryIds []int64 `protobuf:"varint,2,rep,packed,name=StoryIds,proto3" json:"StoryIds,omitempty"`
}

func (x *DeleteStoriesDetail) Reset() {
	*x = DeleteStoriesDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoriesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoriesDetail) ProtoMessage() {}

func (x *DeleteStoriesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoriesDetail.ProtoReflect.Descriptor instead.
func (*DeleteStoriesDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteStoriesDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *DeleteStoriesDetail) GetStoryIds() []int64 {
	if x != nil {
		return x.StoryIds
	}
	return nil
}

type EditStoriesDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64           `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Chat     []string         `protobuf:"bytes,2,rep,name=Chat,proto3" json:"Chat,omitempty"`
	Caption  string           `protobuf:"bytes,3,opt,name=Caption,proto3" json:"Caption,omitempty"`
	FileType *FileDetailValue `protobuf:"bytes,4,opt,name=FileType,proto3" json:"FileType,omitempty"`
	StoryId  int64            `protobuf:"varint,5,opt,name=StoryId,proto3" json:"StoryId,omitempty"`
}

func (x *EditStoriesDetail) Reset() {
	*x = EditStoriesDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditStoriesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditStoriesDetail) ProtoMessage() {}

func (x *EditStoriesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditStoriesDetail.ProtoReflect.Descriptor instead.
func (*EditStoriesDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{37}
}

func (x *EditStoriesDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *EditStoriesDetail) GetChat() []string {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *EditStoriesDetail) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *EditStoriesDetail) GetFileType() *FileDetailValue {
	if x != nil {
		return x.FileType
	}
	return nil
}

func (x *EditStoriesDetail) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

// 定义总的消息
type RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action `protobuf:"varint,1,opt,name=action,proto3,enum=Action" json:"action,omitempty"` // 动作字段
	// Types that are assignable to ActionDetail:
	//
	//	*RequestMessage_OrdinaryAction
	//	*RequestMessage_SyncAccountKeyAction
	//	*RequestMessage_SyncAppAction
	//	*RequestMessage_QueryPrekeybundleDetail
	//	*RequestMessage_SendmessageDetail
	//	*RequestMessage_PingMessage
	//	*RequestMessage_SendVcardMessage
	//	*RequestMessage_SetHeadSculptureAction
	//	*RequestMessage_GetUserHeadImage
	//	*RequestMessage_SyncContactDetail
	//	*RequestMessage_ReceiveMsgDetail
	//	*RequestMessage_SendPhotoDetail
	//	*RequestMessage_CreateGroupDetail
	//	*RequestMessage_AddGroupMemberDetail
	//	*RequestMessage_GetGroupMembersDetail
	//	*RequestMessage_SendImageFileDetail
	//	*RequestMessage_SendContactCardDetail
	//	*RequestMessage_SendGroupMessageDetail
	//	*RequestMessage_SendFileDetail
	//	*RequestMessage_SendVideoDetail
	//	*RequestMessage_SendCodeDetail
	//	*RequestMessage_GetContactList
	//	*RequestMessage_GetDialogList
	//	*RequestMessage_GetMsgHistory
	//	*RequestMessage_LogoutAction
	//	*RequestMessage_CreateChannelDetail
	//	*RequestMessage_GetDownLoadFileDetail
	//	*RequestMessage_ImportTgSession
	//	*RequestMessage_InviteToChannelDetail
	//	*RequestMessage_JoinByLinkDetail
	//	*RequestMessage_GetEmojiGroupDetail
	//	*RequestMessage_MessagesReactionDetail
	//	*RequestMessage_LeaveDetail
	//	*RequestMessage_GetChannelMemberDetail
	//	*RequestMessage_GetOnlineAccountsDetail
	//	*RequestMessage_UpdateUserInfoDetail
	//	*RequestMessage_DownUserHeadImageDetail
	//	*RequestMessage_SearchDetail
	//	*RequestMessage_OrdinarySingleAction
	//	*RequestMessage_ForwardMessageDetail
	//	*RequestMessage_DeleteMemberDetail
	//	*RequestMessage_GetUserChatFoldersDetail
	//	*RequestMessage_UpdateUserChatFoldersDetails
	//	*RequestMessage_CheckUsernameDetail
	//	*RequestMessage_UpdateGetStatusDetail
	//	*RequestMessage_CreateBotDetail
	//	*RequestMessage_StartBotDetail
	//	*RequestMessage_ReadHistoryDetail
	//	*RequestMessage_ChannelReadViewDetail
	//	*RequestMessage_EditAdminDetail
	//	*RequestMessage_SetTypeActionDetail
	//	*RequestMessage_ReadChannelHistoryAction
	//	*RequestMessage_SendMsgSingleDetail
	//	*RequestMessage_SendFileSingleDetail
	//	*RequestMessage_SendContactCardSingleDetail
	//	*RequestMessage_SaveDraftDetail
	//	*RequestMessage_ClearAllDraftDetail
	//	*RequestMessage_DeleteMessagesDetail
	//	*RequestMessage_ContactsGetLocatedDetail
	//	*RequestMessage_EditChannelInfoDetail
	//	*RequestMessage_GetManageChannelsDetail
	//	*RequestMessage_EditChatBannedRightsDetail
	//	*RequestMessage_GetChatsInfoDetail
	//	*RequestMessage_GetUserInfoDetail
	//	*RequestMessage_SetHistoryTtlDetail
	//	*RequestMessage_GetCommonChatsDetail
	//	*RequestMessage_EditParticipantBannedDetail
	//	*RequestMessage_DeletePrivateChatDetail
	//	*RequestMessage_PinDialogDetail
	//	*RequestMessage_GetPinnedDialogs
	//	*RequestMessage_SendStoriesDetail
	//	*RequestMessage_DeleteStoriesDetail
	//	*RequestMessage_EditStoriesDetail
	ActionDetail isRequestMessage_ActionDetail `protobuf_oneof:"action_detail"`
	Type         string                        `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
	Account      uint64                        `protobuf:"varint,35,opt,name=account,proto3" json:"account,omitempty"` //账号
	Key          string                        `protobuf:"bytes,53,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RequestMessage) Reset() {
	*x = RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMessage) ProtoMessage() {}

func (x *RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMessage.ProtoReflect.Descriptor instead.
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{38}
}

func (x *RequestMessage) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_LOGIN
}

func (m *RequestMessage) GetActionDetail() isRequestMessage_ActionDetail {
	if m != nil {
		return m.ActionDetail
	}
	return nil
}

func (x *RequestMessage) GetOrdinaryAction() *OrdinaryAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_OrdinaryAction); ok {
		return x.OrdinaryAction
	}
	return nil
}

func (x *RequestMessage) GetSyncAccountKeyAction() *SyncAccountKeyAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_SyncAccountKeyAction); ok {
		return x.SyncAccountKeyAction
	}
	return nil
}

func (x *RequestMessage) GetSyncAppAction() *SyncAppInfoAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_SyncAppAction); ok {
		return x.SyncAppAction
	}
	return nil
}

func (x *RequestMessage) GetQueryPrekeybundleDetail() *QueryPreKeyBundleDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_QueryPrekeybundleDetail); ok {
		return x.QueryPrekeybundleDetail
	}
	return nil
}

func (x *RequestMessage) GetSendmessageDetail() *SendMessageDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendmessageDetail); ok {
		return x.SendmessageDetail
	}
	return nil
}

func (x *RequestMessage) GetPingMessage() string {
	if x, ok := x.GetActionDetail().(*RequestMessage_PingMessage); ok {
		return x.PingMessage
	}
	return ""
}

func (x *RequestMessage) GetSendVcardMessage() *SendVCardMsgDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendVcardMessage); ok {
		return x.SendVcardMessage
	}
	return nil
}

func (x *RequestMessage) GetSetHeadSculptureAction() *SetHeadSculptureAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_SetHeadSculptureAction); ok {
		return x.SetHeadSculptureAction
	}
	return nil
}

func (x *RequestMessage) GetGetUserHeadImage() *GetUserHeadImageAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetUserHeadImage); ok {
		return x.GetUserHeadImage
	}
	return nil
}

func (x *RequestMessage) GetSyncContactDetail() *SyncContactDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SyncContactDetail); ok {
		return x.SyncContactDetail
	}
	return nil
}

func (x *RequestMessage) GetReceiveMsgDetail() *ReceivingMsgDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ReceiveMsgDetail); ok {
		return x.ReceiveMsgDetail
	}
	return nil
}

func (x *RequestMessage) GetSendPhotoDetail() *SendPhotoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendPhotoDetail); ok {
		return x.SendPhotoDetail
	}
	return nil
}

func (x *RequestMessage) GetCreateGroupDetail() *CreateGroupDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_CreateGroupDetail); ok {
		return x.CreateGroupDetail
	}
	return nil
}

func (x *RequestMessage) GetAddGroupMemberDetail() *AddGroupMemberDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_AddGroupMemberDetail); ok {
		return x.AddGroupMemberDetail
	}
	return nil
}

func (x *RequestMessage) GetGetGroupMembersDetail() *GetGroupMembersDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetGroupMembersDetail); ok {
		return x.GetGroupMembersDetail
	}
	return nil
}

func (x *RequestMessage) GetSendImageFileDetail() *SendImageFileDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendImageFileDetail); ok {
		return x.SendImageFileDetail
	}
	return nil
}

func (x *RequestMessage) GetSendContactCardDetail() *SendContactCardDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendContactCardDetail); ok {
		return x.SendContactCardDetail
	}
	return nil
}

func (x *RequestMessage) GetSendGroupMessageDetail() *SendGroupMessageDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendGroupMessageDetail); ok {
		return x.SendGroupMessageDetail
	}
	return nil
}

func (x *RequestMessage) GetSendFileDetail() *SendFileDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendFileDetail); ok {
		return x.SendFileDetail
	}
	return nil
}

func (x *RequestMessage) GetSendVideoDetail() *SendVideoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendVideoDetail); ok {
		return x.SendVideoDetail
	}
	return nil
}

func (x *RequestMessage) GetSendCodeDetail() *SendCodeDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendCodeDetail); ok {
		return x.SendCodeDetail
	}
	return nil
}

func (x *RequestMessage) GetGetContactList() *GetContactList {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetContactList); ok {
		return x.GetContactList
	}
	return nil
}

func (x *RequestMessage) GetGetDialogList() *GetDialogList {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetDialogList); ok {
		return x.GetDialogList
	}
	return nil
}

func (x *RequestMessage) GetGetMsgHistory() *GetMsgHistory {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetMsgHistory); ok {
		return x.GetMsgHistory
	}
	return nil
}

func (x *RequestMessage) GetLogoutAction() *LogoutAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_LogoutAction); ok {
		return x.LogoutAction
	}
	return nil
}

func (x *RequestMessage) GetCreateChannelDetail() *CreateChannelDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_CreateChannelDetail); ok {
		return x.CreateChannelDetail
	}
	return nil
}

func (x *RequestMessage) GetGetDownLoadFileDetail() *GetDownLoadFileDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetDownLoadFileDetail); ok {
		return x.GetDownLoadFileDetail
	}
	return nil
}

func (x *RequestMessage) GetImportTgSession() *ImportTgSessionDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ImportTgSession); ok {
		return x.ImportTgSession
	}
	return nil
}

func (x *RequestMessage) GetInviteToChannelDetail() *InviteToChannelDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_InviteToChannelDetail); ok {
		return x.InviteToChannelDetail
	}
	return nil
}

func (x *RequestMessage) GetJoinByLinkDetail() *JoinByLinkDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_JoinByLinkDetail); ok {
		return x.JoinByLinkDetail
	}
	return nil
}

func (x *RequestMessage) GetGetEmojiGroupDetail() *GetEmojiGroupsDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetEmojiGroupDetail); ok {
		return x.GetEmojiGroupDetail
	}
	return nil
}

func (x *RequestMessage) GetMessagesReactionDetail() *MessagesReactionDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_MessagesReactionDetail); ok {
		return x.MessagesReactionDetail
	}
	return nil
}

func (x *RequestMessage) GetLeaveDetail() *LeaveDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_LeaveDetail); ok {
		return x.LeaveDetail
	}
	return nil
}

func (x *RequestMessage) GetGetChannelMemberDetail() *GetChannelMemberDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetChannelMemberDetail); ok {
		return x.GetChannelMemberDetail
	}
	return nil
}

func (x *RequestMessage) GetGetOnlineAccountsDetail() *GetOnlineAccountsDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetOnlineAccountsDetail); ok {
		return x.GetOnlineAccountsDetail
	}
	return nil
}

func (x *RequestMessage) GetUpdateUserInfoDetail() *UpdateUserInfoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_UpdateUserInfoDetail); ok {
		return x.UpdateUserInfoDetail
	}
	return nil
}

func (x *RequestMessage) GetDownUserHeadImageDetail() *DownUserHeadImageDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_DownUserHeadImageDetail); ok {
		return x.DownUserHeadImageDetail
	}
	return nil
}

func (x *RequestMessage) GetSearchDetail() *SearchDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SearchDetail); ok {
		return x.SearchDetail
	}
	return nil
}

func (x *RequestMessage) GetOrdinarySingleAction() *OrdinarySingleAction {
	if x, ok := x.GetActionDetail().(*RequestMessage_OrdinarySingleAction); ok {
		return x.OrdinarySingleAction
	}
	return nil
}

func (x *RequestMessage) GetForwardMessageDetail() *ForwardMessageDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ForwardMessageDetail); ok {
		return x.ForwardMessageDetail
	}
	return nil
}

func (x *RequestMessage) GetDeleteMemberDetail() *DeleteMemberDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_DeleteMemberDetail); ok {
		return x.DeleteMemberDetail
	}
	return nil
}

func (x *RequestMessage) GetGetUserChatFoldersDetail() *GetUserChatFoldersDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetUserChatFoldersDetail); ok {
		return x.GetUserChatFoldersDetail
	}
	return nil
}

func (x *RequestMessage) GetUpdateUserChatFoldersDetails() *UpdateUserChatFoldersDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_UpdateUserChatFoldersDetails); ok {
		return x.UpdateUserChatFoldersDetails
	}
	return nil
}

func (x *RequestMessage) GetCheckUsernameDetail() *CheckUserNameDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_CheckUsernameDetail); ok {
		return x.CheckUsernameDetail
	}
	return nil
}

func (x *RequestMessage) GetUpdateGetStatusDetail() *UpdatesGetStatusDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_UpdateGetStatusDetail); ok {
		return x.UpdateGetStatusDetail
	}
	return nil
}

func (x *RequestMessage) GetCreateBotDetail() *CreateBotDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_CreateBotDetail); ok {
		return x.CreateBotDetail
	}
	return nil
}

func (x *RequestMessage) GetStartBotDetail() *StartBotDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_StartBotDetail); ok {
		return x.StartBotDetail
	}
	return nil
}

func (x *RequestMessage) GetReadHistoryDetail() *ReadHistoryDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ReadHistoryDetail); ok {
		return x.ReadHistoryDetail
	}
	return nil
}

func (x *RequestMessage) GetChannelReadViewDetail() *ChannelReadViewDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ChannelReadViewDetail); ok {
		return x.ChannelReadViewDetail
	}
	return nil
}

func (x *RequestMessage) GetEditAdminDetail() *EditAdminDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_EditAdminDetail); ok {
		return x.EditAdminDetail
	}
	return nil
}

func (x *RequestMessage) GetSetTypeActionDetail() *SetTypeActionDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SetTypeActionDetail); ok {
		return x.SetTypeActionDetail
	}
	return nil
}

func (x *RequestMessage) GetReadChannelHistoryAction() *ReadChannelHistoryDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ReadChannelHistoryAction); ok {
		return x.ReadChannelHistoryAction
	}
	return nil
}

func (x *RequestMessage) GetSendMsgSingleDetail() *SendMsgSingleDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendMsgSingleDetail); ok {
		return x.SendMsgSingleDetail
	}
	return nil
}

func (x *RequestMessage) GetSendFileSingleDetail() *SendFileSingleDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendFileSingleDetail); ok {
		return x.SendFileSingleDetail
	}
	return nil
}

func (x *RequestMessage) GetSendContactCardSingleDetail() *SendContactCardSingleDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendContactCardSingleDetail); ok {
		return x.SendContactCardSingleDetail
	}
	return nil
}

func (x *RequestMessage) GetSaveDraftDetail() *SaveDraftDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SaveDraftDetail); ok {
		return x.SaveDraftDetail
	}
	return nil
}

func (x *RequestMessage) GetClearAllDraftDetail() *ClearAllDraftDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ClearAllDraftDetail); ok {
		return x.ClearAllDraftDetail
	}
	return nil
}

func (x *RequestMessage) GetDeleteMessagesDetail() *DeleteMessagesDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_DeleteMessagesDetail); ok {
		return x.DeleteMessagesDetail
	}
	return nil
}

func (x *RequestMessage) GetContactsGetLocatedDetail() *ContactsGetLocatedDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_ContactsGetLocatedDetail); ok {
		return x.ContactsGetLocatedDetail
	}
	return nil
}

func (x *RequestMessage) GetEditChannelInfoDetail() *EditChannelInfoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_EditChannelInfoDetail); ok {
		return x.EditChannelInfoDetail
	}
	return nil
}

func (x *RequestMessage) GetGetManageChannelsDetail() *GetManageChannelsDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetManageChannelsDetail); ok {
		return x.GetManageChannelsDetail
	}
	return nil
}

func (x *RequestMessage) GetEditChatBannedRightsDetail() *EditChatBannedRightsDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_EditChatBannedRightsDetail); ok {
		return x.EditChatBannedRightsDetail
	}
	return nil
}

func (x *RequestMessage) GetGetChatsInfoDetail() *GetChatsInfoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetChatsInfoDetail); ok {
		return x.GetChatsInfoDetail
	}
	return nil
}

func (x *RequestMessage) GetGetUserInfoDetail() *GetUserInfoDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetUserInfoDetail); ok {
		return x.GetUserInfoDetail
	}
	return nil
}

func (x *RequestMessage) GetSetHistoryTtlDetail() *SetHistoryTTLDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SetHistoryTtlDetail); ok {
		return x.SetHistoryTtlDetail
	}
	return nil
}

func (x *RequestMessage) GetGetCommonChatsDetail() *GetCommonChatsDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetCommonChatsDetail); ok {
		return x.GetCommonChatsDetail
	}
	return nil
}

func (x *RequestMessage) GetEditParticipantBannedDetail() *EditParticipantBannedDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_EditParticipantBannedDetail); ok {
		return x.EditParticipantBannedDetail
	}
	return nil
}

func (x *RequestMessage) GetDeletePrivateChatDetail() *DeletePrivateChatDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_DeletePrivateChatDetail); ok {
		return x.DeletePrivateChatDetail
	}
	return nil
}

func (x *RequestMessage) GetPinDialogDetail() *PinDialogDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_PinDialogDetail); ok {
		return x.PinDialogDetail
	}
	return nil
}

func (x *RequestMessage) GetGetPinnedDialogs() *GetPinnedDialogs {
	if x, ok := x.GetActionDetail().(*RequestMessage_GetPinnedDialogs); ok {
		return x.GetPinnedDialogs
	}
	return nil
}

func (x *RequestMessage) GetSendStoriesDetail() *SendStoriesDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_SendStoriesDetail); ok {
		return x.SendStoriesDetail
	}
	return nil
}

func (x *RequestMessage) GetDeleteStoriesDetail() *DeleteStoriesDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_DeleteStoriesDetail); ok {
		return x.DeleteStoriesDetail
	}
	return nil
}

func (x *RequestMessage) GetEditStoriesDetail() *EditStoriesDetail {
	if x, ok := x.GetActionDetail().(*RequestMessage_EditStoriesDetail); ok {
		return x.EditStoriesDetail
	}
	return nil
}

func (x *RequestMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RequestMessage) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *RequestMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isRequestMessage_ActionDetail interface {
	isRequestMessage_ActionDetail()
}

type RequestMessage_OrdinaryAction struct {
	OrdinaryAction *OrdinaryAction `protobuf:"bytes,2,opt,name=ordinary_action,json=ordinaryAction,proto3,oneof"`
}

type RequestMessage_SyncAccountKeyAction struct {
	SyncAccountKeyAction *SyncAccountKeyAction `protobuf:"bytes,3,opt,name=sync_account_key_action,json=syncAccountKeyAction,proto3,oneof"`
}

type RequestMessage_SyncAppAction struct {
	SyncAppAction *SyncAppInfoAction `protobuf:"bytes,4,opt,name=sync_app_action,json=syncAppAction,proto3,oneof"`
}

type RequestMessage_QueryPrekeybundleDetail struct {
	QueryPrekeybundleDetail *QueryPreKeyBundleDetail `protobuf:"bytes,7,opt,name=query_prekeybundle_detail,json=queryPrekeybundleDetail,proto3,oneof"`
}

type RequestMessage_SendmessageDetail struct {
	SendmessageDetail *SendMessageDetail `protobuf:"bytes,8,opt,name=sendmessage_detail,json=sendmessageDetail,proto3,oneof"`
}

type RequestMessage_PingMessage struct {
	PingMessage string `protobuf:"bytes,9,opt,name=ping_message,json=pingMessage,proto3,oneof"`
}

type RequestMessage_SendVcardMessage struct {
	SendVcardMessage *SendVCardMsgDetail `protobuf:"bytes,10,opt,name=send_vcard_message,json=sendVcardMessage,proto3,oneof"`
}

type RequestMessage_SetHeadSculptureAction struct {
	SetHeadSculptureAction *SetHeadSculptureAction `protobuf:"bytes,11,opt,name=set_head_sculpture_action,json=setHeadSculptureAction,proto3,oneof"`
}

type RequestMessage_GetUserHeadImage struct {
	GetUserHeadImage *GetUserHeadImageAction `protobuf:"bytes,12,opt,name=get_user_head_image,json=getUserHeadImage,proto3,oneof"`
}

type RequestMessage_SyncContactDetail struct {
	SyncContactDetail *SyncContactDetail `protobuf:"bytes,13,opt,name=sync_contact_detail,json=syncContactDetail,proto3,oneof"`
}

type RequestMessage_ReceiveMsgDetail struct {
	ReceiveMsgDetail *ReceivingMsgDetail `protobuf:"bytes,14,opt,name=receive_msg_detail,json=receiveMsgDetail,proto3,oneof"`
}

type RequestMessage_SendPhotoDetail struct {
	SendPhotoDetail *SendPhotoDetail `protobuf:"bytes,15,opt,name=send_photo_detail,json=sendPhotoDetail,proto3,oneof"`
}

type RequestMessage_CreateGroupDetail struct {
	CreateGroupDetail *CreateGroupDetail `protobuf:"bytes,16,opt,name=create_group_detail,json=createGroupDetail,proto3,oneof"`
}

type RequestMessage_AddGroupMemberDetail struct {
	AddGroupMemberDetail *AddGroupMemberDetail `protobuf:"bytes,17,opt,name=add_group_member_detail,json=addGroupMemberDetail,proto3,oneof"`
}

type RequestMessage_GetGroupMembersDetail struct {
	GetGroupMembersDetail *GetGroupMembersDetail `protobuf:"bytes,29,opt,name=get_group_members_detail,json=getGroupMembersDetail,proto3,oneof"`
}

type RequestMessage_SendImageFileDetail struct {
	SendImageFileDetail *SendImageFileDetail `protobuf:"bytes,19,opt,name=send_image_file_detail,json=sendImageFileDetail,proto3,oneof"`
}

type RequestMessage_SendContactCardDetail struct {
	SendContactCardDetail *SendContactCardDetail `protobuf:"bytes,20,opt,name=send_contact_card_detail,json=sendContactCardDetail,proto3,oneof"`
}

type RequestMessage_SendGroupMessageDetail struct {
	SendGroupMessageDetail *SendGroupMessageDetail `protobuf:"bytes,21,opt,name=send_group_message_detail,json=sendGroupMessageDetail,proto3,oneof"`
}

type RequestMessage_SendFileDetail struct {
	SendFileDetail *SendFileDetail `protobuf:"bytes,22,opt,name=send_file_detail,json=sendFileDetail,proto3,oneof"`
}

type RequestMessage_SendVideoDetail struct {
	SendVideoDetail *SendVideoDetail `protobuf:"bytes,23,opt,name=send_video_detail,json=sendVideoDetail,proto3,oneof"`
}

type RequestMessage_SendCodeDetail struct {
	SendCodeDetail *SendCodeDetail `protobuf:"bytes,24,opt,name=send_code_detail,json=sendCodeDetail,proto3,oneof"`
}

type RequestMessage_GetContactList struct {
	GetContactList *GetContactList `protobuf:"bytes,25,opt,name=get_contact_list,json=getContactList,proto3,oneof"`
}

type RequestMessage_GetDialogList struct {
	GetDialogList *GetDialogList `protobuf:"bytes,26,opt,name=get_dialog_list,json=getDialogList,proto3,oneof"`
}

type RequestMessage_GetMsgHistory struct {
	GetMsgHistory *GetMsgHistory `protobuf:"bytes,27,opt,name=get_msg_history,json=getMsgHistory,proto3,oneof"`
}

type RequestMessage_LogoutAction struct {
	LogoutAction *LogoutAction `protobuf:"bytes,28,opt,name=logout_action,json=logoutAction,proto3,oneof"`
}

type RequestMessage_CreateChannelDetail struct {
	CreateChannelDetail *CreateChannelDetail `protobuf:"bytes,30,opt,name=create_channel_detail,json=createChannelDetail,proto3,oneof"`
}

type RequestMessage_GetDownLoadFileDetail struct {
	GetDownLoadFileDetail *GetDownLoadFileDetail `protobuf:"bytes,31,opt,name=get_downLoad_file_detail,json=getDownLoadFileDetail,proto3,oneof"`
}

type RequestMessage_ImportTgSession struct {
	ImportTgSession *ImportTgSessionDetail `protobuf:"bytes,33,opt,name=import_tg_session,json=importTgSession,proto3,oneof"`
}

type RequestMessage_InviteToChannelDetail struct {
	InviteToChannelDetail *InviteToChannelDetail `protobuf:"bytes,32,opt,name=invite_to_channel_detail,json=inviteToChannelDetail,proto3,oneof"`
}

type RequestMessage_JoinByLinkDetail struct {
	JoinByLinkDetail *JoinByLinkDetail `protobuf:"bytes,34,opt,name=join_by_link_detail,json=joinByLinkDetail,proto3,oneof"`
}

type RequestMessage_GetEmojiGroupDetail struct {
	GetEmojiGroupDetail *GetEmojiGroupsDetail `protobuf:"bytes,36,opt,name=get_emoji_group_detail,json=getEmojiGroupDetail,proto3,oneof"`
}

type RequestMessage_MessagesReactionDetail struct {
	MessagesReactionDetail *MessagesReactionDetail `protobuf:"bytes,37,opt,name=messages_reaction_detail,json=messagesReactionDetail,proto3,oneof"`
}

type RequestMessage_LeaveDetail struct {
	LeaveDetail *LeaveDetail `protobuf:"bytes,38,opt,name=leave_detail,json=leaveDetail,proto3,oneof"`
}

type RequestMessage_GetChannelMemberDetail struct {
	GetChannelMemberDetail *GetChannelMemberDetail `protobuf:"bytes,39,opt,name=get_channel_member_detail,json=getChannelMemberDetail,proto3,oneof"`
}

type RequestMessage_GetOnlineAccountsDetail struct {
	GetOnlineAccountsDetail *GetOnlineAccountsDetail `protobuf:"bytes,40,opt,name=get_online_accounts_detail,json=getOnlineAccountsDetail,proto3,oneof"`
}

type RequestMessage_UpdateUserInfoDetail struct {
	UpdateUserInfoDetail *UpdateUserInfoDetail `protobuf:"bytes,41,opt,name=update_user_info_detail,json=updateUserInfoDetail,proto3,oneof"`
}

type RequestMessage_DownUserHeadImageDetail struct {
	DownUserHeadImageDetail *DownUserHeadImageDetail `protobuf:"bytes,42,opt,name=down_user_head_image_detail,json=downUserHeadImageDetail,proto3,oneof"`
}

type RequestMessage_SearchDetail struct {
	SearchDetail *SearchDetail `protobuf:"bytes,43,opt,name=search_detail,json=searchDetail,proto3,oneof"`
}

type RequestMessage_OrdinarySingleAction struct {
	OrdinarySingleAction *OrdinarySingleAction `protobuf:"bytes,44,opt,name=ordinary_single_action,json=ordinarySingleAction,proto3,oneof"`
}

type RequestMessage_ForwardMessageDetail struct {
	ForwardMessageDetail *ForwardMessageDetail `protobuf:"bytes,45,opt,name=forward_message_detail,json=forwardMessageDetail,proto3,oneof"`
}

type RequestMessage_DeleteMemberDetail struct {
	DeleteMemberDetail *DeleteMemberDetail `protobuf:"bytes,46,opt,name=delete_member_detail,json=deleteMemberDetail,proto3,oneof"`
}

type RequestMessage_GetUserChatFoldersDetail struct {
	GetUserChatFoldersDetail *GetUserChatFoldersDetail `protobuf:"bytes,47,opt,name=get_user_chat_folders_detail,json=getUserChatFoldersDetail,proto3,oneof"`
}

type RequestMessage_UpdateUserChatFoldersDetails struct {
	UpdateUserChatFoldersDetails *UpdateUserChatFoldersDetail `protobuf:"bytes,48,opt,name=update_user_chat_folders_details,json=updateUserChatFoldersDetails,proto3,oneof"`
}

type RequestMessage_CheckUsernameDetail struct {
	CheckUsernameDetail *CheckUserNameDetail `protobuf:"bytes,49,opt,name=check_username_detail,json=checkUsernameDetail,proto3,oneof"`
}

type RequestMessage_UpdateGetStatusDetail struct {
	UpdateGetStatusDetail *UpdatesGetStatusDetail `protobuf:"bytes,50,opt,name=update_get_status_detail,json=updateGetStatusDetail,proto3,oneof"`
}

type RequestMessage_CreateBotDetail struct {
	CreateBotDetail *CreateBotDetail `protobuf:"bytes,51,opt,name=create_bot_detail,json=createBotDetail,proto3,oneof"`
}

type RequestMessage_StartBotDetail struct {
	StartBotDetail *StartBotDetail `protobuf:"bytes,52,opt,name=start_bot_detail,json=startBotDetail,proto3,oneof"`
}

type RequestMessage_ReadHistoryDetail struct {
	ReadHistoryDetail *ReadHistoryDetail `protobuf:"bytes,54,opt,name=read_history_detail,json=readHistoryDetail,proto3,oneof"`
}

type RequestMessage_ChannelReadViewDetail struct {
	ChannelReadViewDetail *ChannelReadViewDetail `protobuf:"bytes,55,opt,name=channel_read_view_detail,json=channelReadViewDetail,proto3,oneof"`
}

type RequestMessage_EditAdminDetail struct {
	EditAdminDetail *EditAdminDetail `protobuf:"bytes,56,opt,name=edit_admin_detail,json=editAdminDetail,proto3,oneof"`
}

type RequestMessage_SetTypeActionDetail struct {
	SetTypeActionDetail *SetTypeActionDetail `protobuf:"bytes,57,opt,name=set_type_action_detail,json=setTypeActionDetail,proto3,oneof"`
}

type RequestMessage_ReadChannelHistoryAction struct {
	ReadChannelHistoryAction *ReadChannelHistoryDetail `protobuf:"bytes,58,opt,name=read_channel_history_action,json=readChannelHistoryAction,proto3,oneof"`
}

type RequestMessage_SendMsgSingleDetail struct {
	SendMsgSingleDetail *SendMsgSingleDetail `protobuf:"bytes,59,opt,name=send_msg_single_detail,json=sendMsgSingleDetail,proto3,oneof"`
}

type RequestMessage_SendFileSingleDetail struct {
	SendFileSingleDetail *SendFileSingleDetail `protobuf:"bytes,60,opt,name=send_file_single_detail,json=sendFileSingleDetail,proto3,oneof"`
}

type RequestMessage_SendContactCardSingleDetail struct {
	SendContactCardSingleDetail *SendContactCardSingleDetail `protobuf:"bytes,61,opt,name=send_contact_card_single_detail,json=sendContactCardSingleDetail,proto3,oneof"`
}

type RequestMessage_SaveDraftDetail struct {
	SaveDraftDetail *SaveDraftDetail `protobuf:"bytes,62,opt,name=save_draft_detail,json=saveDraftDetail,proto3,oneof"`
}

type RequestMessage_ClearAllDraftDetail struct {
	ClearAllDraftDetail *ClearAllDraftDetail `protobuf:"bytes,63,opt,name=clear_all_draft_detail,json=clearAllDraftDetail,proto3,oneof"`
}

type RequestMessage_DeleteMessagesDetail struct {
	DeleteMessagesDetail *DeleteMessagesDetail `protobuf:"bytes,64,opt,name=delete_messages_detail,json=deleteMessagesDetail,proto3,oneof"`
}

type RequestMessage_ContactsGetLocatedDetail struct {
	ContactsGetLocatedDetail *ContactsGetLocatedDetail `protobuf:"bytes,65,opt,name=contacts_get_located_detail,json=contactsGetLocatedDetail,proto3,oneof"`
}

type RequestMessage_EditChannelInfoDetail struct {
	EditChannelInfoDetail *EditChannelInfoDetail `protobuf:"bytes,66,opt,name=edit_channel_info_detail,json=editChannelInfoDetail,proto3,oneof"`
}

type RequestMessage_GetManageChannelsDetail struct {
	GetManageChannelsDetail *GetManageChannelsDetail `protobuf:"bytes,67,opt,name=get_manage_channels_detail,json=getManageChannelsDetail,proto3,oneof"`
}

type RequestMessage_EditChatBannedRightsDetail struct {
	EditChatBannedRightsDetail *EditChatBannedRightsDetail `protobuf:"bytes,68,opt,name=edit_chat_banned_rights_detail,json=editChatBannedRightsDetail,proto3,oneof"`
}

type RequestMessage_GetChatsInfoDetail struct {
	GetChatsInfoDetail *GetChatsInfoDetail `protobuf:"bytes,69,opt,name=get_chats_info_detail,json=getChatsInfoDetail,proto3,oneof"`
}

type RequestMessage_GetUserInfoDetail struct {
	GetUserInfoDetail *GetUserInfoDetail `protobuf:"bytes,70,opt,name=get_user_info_detail,json=getUserInfoDetail,proto3,oneof"`
}

type RequestMessage_SetHistoryTtlDetail struct {
	SetHistoryTtlDetail *SetHistoryTTLDetail `protobuf:"bytes,71,opt,name=set_history_ttl_detail,json=setHistoryTtlDetail,proto3,oneof"`
}

type RequestMessage_GetCommonChatsDetail struct {
	GetCommonChatsDetail *GetCommonChatsDetail `protobuf:"bytes,72,opt,name=get_common_chats_detail,json=getCommonChatsDetail,proto3,oneof"`
}

type RequestMessage_EditParticipantBannedDetail struct {
	EditParticipantBannedDetail *EditParticipantBannedDetail `protobuf:"bytes,73,opt,name=edit_participant_banned_detail,json=editParticipantBannedDetail,proto3,oneof"`
}

type RequestMessage_DeletePrivateChatDetail struct {
	DeletePrivateChatDetail *DeletePrivateChatDetail `protobuf:"bytes,74,opt,name=delete_private_chat_detail,json=deletePrivateChatDetail,proto3,oneof"`
}

type RequestMessage_PinDialogDetail struct {
	PinDialogDetail *PinDialogDetail `protobuf:"bytes,75,opt,name=pin_dialog_detail,json=pinDialogDetail,proto3,oneof"`
}

type RequestMessage_GetPinnedDialogs struct {
	GetPinnedDialogs *GetPinnedDialogs `protobuf:"bytes,76,opt,name=get_pinned_dialogs,json=getPinnedDialogs,proto3,oneof"`
}

type RequestMessage_SendStoriesDetail struct {
	SendStoriesDetail *SendStoriesDetail `protobuf:"bytes,77,opt,name=send_stories_detail,json=sendStoriesDetail,proto3,oneof"`
}

type RequestMessage_DeleteStoriesDetail struct {
	DeleteStoriesDetail *DeleteStoriesDetail `protobuf:"bytes,78,opt,name=delete_stories_detail,json=deleteStoriesDetail,proto3,oneof"`
}

type RequestMessage_EditStoriesDetail struct {
	EditStoriesDetail *EditStoriesDetail `protobuf:"bytes,79,opt,name=edit_stories_detail,json=editStoriesDetail,proto3,oneof"`
}

func (*RequestMessage_OrdinaryAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SyncAccountKeyAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SyncAppAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_QueryPrekeybundleDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendmessageDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_PingMessage) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendVcardMessage) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SetHeadSculptureAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetUserHeadImage) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SyncContactDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ReceiveMsgDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendPhotoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_CreateGroupDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_AddGroupMemberDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetGroupMembersDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendImageFileDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendContactCardDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendGroupMessageDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendFileDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendVideoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendCodeDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetContactList) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetDialogList) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetMsgHistory) isRequestMessage_ActionDetail() {}

func (*RequestMessage_LogoutAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_CreateChannelDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetDownLoadFileDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ImportTgSession) isRequestMessage_ActionDetail() {}

func (*RequestMessage_InviteToChannelDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_JoinByLinkDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetEmojiGroupDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_MessagesReactionDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_LeaveDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetChannelMemberDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetOnlineAccountsDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_UpdateUserInfoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_DownUserHeadImageDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SearchDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_OrdinarySingleAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ForwardMessageDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_DeleteMemberDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetUserChatFoldersDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_UpdateUserChatFoldersDetails) isRequestMessage_ActionDetail() {}

func (*RequestMessage_CheckUsernameDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_UpdateGetStatusDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_CreateBotDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_StartBotDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ReadHistoryDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ChannelReadViewDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_EditAdminDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SetTypeActionDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ReadChannelHistoryAction) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendMsgSingleDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendFileSingleDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendContactCardSingleDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SaveDraftDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ClearAllDraftDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_DeleteMessagesDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_ContactsGetLocatedDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_EditChannelInfoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetManageChannelsDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_EditChatBannedRightsDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetChatsInfoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetUserInfoDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SetHistoryTtlDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetCommonChatsDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_EditParticipantBannedDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_DeletePrivateChatDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_PinDialogDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_GetPinnedDialogs) isRequestMessage_ActionDetail() {}

func (*RequestMessage_SendStoriesDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_DeleteStoriesDetail) isRequestMessage_ActionDetail() {}

func (*RequestMessage_EditStoriesDetail) isRequestMessage_ActionDetail() {}

type UintkeyUintvalue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    uint64   `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []uint64 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *UintkeyUintvalue) Reset() {
	*x = UintkeyUintvalue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintkeyUintvalue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintkeyUintvalue) ProtoMessage() {}

func (x *UintkeyUintvalue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintkeyUintvalue.ProtoReflect.Descriptor instead.
func (*UintkeyUintvalue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{39}
}

func (x *UintkeyUintvalue) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *UintkeyUintvalue) GetValues() []uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type UintkeyStringvalue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    uint64   `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *UintkeyStringvalue) Reset() {
	*x = UintkeyStringvalue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintkeyStringvalue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintkeyStringvalue) ProtoMessage() {}

func (x *UintkeyStringvalue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintkeyStringvalue.ProtoReflect.Descriptor instead.
func (*UintkeyStringvalue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{40}
}

func (x *UintkeyStringvalue) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *UintkeyStringvalue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type StringKeyStringvalue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringKeyStringvalue) Reset() {
	*x = StringKeyStringvalue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringKeyStringvalue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringKeyStringvalue) ProtoMessage() {}

func (x *StringKeyStringvalue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringKeyStringvalue.ProtoReflect.Descriptor instead.
func (*StringKeyStringvalue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{41}
}

func (x *StringKeyStringvalue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringKeyStringvalue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type UintSenderVcard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver uint64   `protobuf:"varint,1,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Vcards   []*VCard `protobuf:"bytes,2,rep,name=vcards,proto3" json:"vcards,omitempty"`
}

func (x *UintSenderVcard) Reset() {
	*x = UintSenderVcard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintSenderVcard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintSenderVcard) ProtoMessage() {}

func (x *UintSenderVcard) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintSenderVcard.ProtoReflect.Descriptor instead.
func (*UintSenderVcard) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{42}
}

func (x *UintSenderVcard) GetReceiver() uint64 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *UintSenderVcard) GetVcards() []*VCard {
	if x != nil {
		return x.Vcards
	}
	return nil
}

type SendMessageAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData   map[uint64]*UintkeyStringvalue   `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SendTgData map[uint64]*StringKeyStringvalue `protobuf:"bytes,2,rep,name=send_tgData,json=sendTgData,proto3" json:"send_tgData,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendMessageAction) Reset() {
	*x = SendMessageAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageAction) ProtoMessage() {}

func (x *SendMessageAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageAction.ProtoReflect.Descriptor instead.
func (*SendMessageAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{43}
}

func (x *SendMessageAction) GetSendData() map[uint64]*UintkeyStringvalue {
	if x != nil {
		return x.SendData
	}
	return nil
}

func (x *SendMessageAction) GetSendTgData() map[uint64]*StringKeyStringvalue {
	if x != nil {
		return x.SendTgData
	}
	return nil
}

type SendVCardMsgDetailAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData map[uint64]*UintSenderVcard `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendVCardMsgDetailAction) Reset() {
	*x = SendVCardMsgDetailAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVCardMsgDetailAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVCardMsgDetailAction) ProtoMessage() {}

func (x *SendVCardMsgDetailAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVCardMsgDetailAction.ProtoReflect.Descriptor instead.
func (*SendVCardMsgDetailAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{44}
}

func (x *SendVCardMsgDetailAction) GetSendData() map[uint64]*UintSenderVcard {
	if x != nil {
		return x.SendData
	}
	return nil
}

type SendGroupMessageAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData map[uint64]*StringKeyStringvalue `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendGroupMessageAction) Reset() {
	*x = SendGroupMessageAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageAction) ProtoMessage() {}

func (x *SendGroupMessageAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageAction.ProtoReflect.Descriptor instead.
func (*SendGroupMessageAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{45}
}

func (x *SendGroupMessageAction) GetSendData() map[uint64]*StringKeyStringvalue {
	if x != nil {
		return x.SendData
	}
	return nil
}

type SendPhotoAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData map[uint64]*UintkeyStringvalue `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendPhotoAction) Reset() {
	*x = SendPhotoAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhotoAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhotoAction) ProtoMessage() {}

func (x *SendPhotoAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhotoAction.ProtoReflect.Descriptor instead.
func (*SendPhotoAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{46}
}

func (x *SendPhotoAction) GetSendData() map[uint64]*UintkeyStringvalue {
	if x != nil {
		return x.SendData
	}
	return nil
}

type UintFileDetailValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint64             `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []*FileDetailValue `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *UintFileDetailValue) Reset() {
	*x = UintFileDetailValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintFileDetailValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintFileDetailValue) ProtoMessage() {}

func (x *UintFileDetailValue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintFileDetailValue.ProtoReflect.Descriptor instead.
func (*UintFileDetailValue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{47}
}

func (x *UintFileDetailValue) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *UintFileDetailValue) GetValue() []*FileDetailValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type UintTgFileDetailValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []*FileDetailValue `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *UintTgFileDetailValue) Reset() {
	*x = UintTgFileDetailValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintTgFileDetailValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintTgFileDetailValue) ProtoMessage() {}

func (x *UintTgFileDetailValue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintTgFileDetailValue.ProtoReflect.Descriptor instead.
func (*UintTgFileDetailValue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{48}
}

func (x *UintTgFileDetailValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UintTgFileDetailValue) GetValue() []*FileDetailValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type UintSendContactCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      uint64              `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Sender   uint64              `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver string              `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Value    []*ContactCardValue `protobuf:"bytes,4,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *UintSendContactCard) Reset() {
	*x = UintSendContactCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintSendContactCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintSendContactCard) ProtoMessage() {}

func (x *UintSendContactCard) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintSendContactCard.ProtoReflect.Descriptor instead.
func (*UintSendContactCard) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{49}
}

func (x *UintSendContactCard) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *UintSendContactCard) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *UintSendContactCard) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *UintSendContactCard) GetValue() []*ContactCardValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type ContactCardValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
}

func (x *ContactCardValue) Reset() {
	*x = ContactCardValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCardValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCardValue) ProtoMessage() {}

func (x *ContactCardValue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCardValue.ProtoReflect.Descriptor instead.
func (*ContactCardValue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{50}
}

func (x *ContactCardValue) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ContactCardValue) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ContactCardValue) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type FileDetailValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType string `protobuf:"bytes,1,opt,name=FileType,proto3" json:"FileType,omitempty"`
	SendType string `protobuf:"bytes,2,opt,name=SendType,proto3" json:"SendType,omitempty"`
	Path     string `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	FileByte []byte `protobuf:"bytes,4,opt,name=FileByte,proto3" json:"FileByte,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *FileDetailValue) Reset() {
	*x = FileDetailValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDetailValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDetailValue) ProtoMessage() {}

func (x *FileDetailValue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDetailValue.ProtoReflect.Descriptor instead.
func (*FileDetailValue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{51}
}

func (x *FileDetailValue) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileDetailValue) GetSendType() string {
	if x != nil {
		return x.SendType
	}
	return ""
}

func (x *FileDetailValue) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDetailValue) GetFileByte() []byte {
	if x != nil {
		return x.FileByte
	}
	return nil
}

func (x *FileDetailValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GeoPointValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat            float64 `protobuf:"fixed64,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Long           float64 `protobuf:"fixed64,2,opt,name=Long,proto3" json:"Long,omitempty"`
	AccuracyRadius uint64  `protobuf:"varint,3,opt,name=AccuracyRadius,proto3" json:"AccuracyRadius,omitempty"`
}

func (x *GeoPointValue) Reset() {
	*x = GeoPointValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoPointValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPointValue) ProtoMessage() {}

func (x *GeoPointValue) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPointValue.ProtoReflect.Descriptor instead.
func (*GeoPointValue) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{52}
}

func (x *GeoPointValue) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GeoPointValue) GetLong() float64 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *GeoPointValue) GetAccuracyRadius() uint64 {
	if x != nil {
		return x.AccuracyRadius
	}
	return 0
}

type EditChannelInfoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64           `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel  string           `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Photo    *FileDetailValue `protobuf:"bytes,3,opt,name=Photo,proto3" json:"Photo,omitempty"`
	Title    string           `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	GeoPoint *GeoPointValue   `protobuf:"bytes,5,opt,name=GeoPoint,proto3" json:"GeoPoint,omitempty"`
	Address  string           `protobuf:"bytes,6,opt,name=Address,proto3" json:"Address,omitempty"`
	Describe string           `protobuf:"bytes,7,opt,name=Describe,proto3" json:"Describe,omitempty"`
}

func (x *EditChannelInfoDetail) Reset() {
	*x = EditChannelInfoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelInfoDetail) ProtoMessage() {}

func (x *EditChannelInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelInfoDetail.ProtoReflect.Descriptor instead.
func (*EditChannelInfoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{53}
}

func (x *EditChannelInfoDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *EditChannelInfoDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *EditChannelInfoDetail) GetPhoto() *FileDetailValue {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *EditChannelInfoDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditChannelInfoDetail) GetGeoPoint() *GeoPointValue {
	if x != nil {
		return x.GeoPoint
	}
	return nil
}

func (x *EditChannelInfoDetail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EditChannelInfoDetail) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type SendGroupMessageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendGroupMessageAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendGroupMessageDetail) Reset() {
	*x = SendGroupMessageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageDetail) ProtoMessage() {}

func (x *SendGroupMessageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageDetail.ProtoReflect.Descriptor instead.
func (*SendGroupMessageDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{54}
}

func (x *SendGroupMessageDetail) GetDetails() []*SendGroupMessageAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendPhotoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendPhotoAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendPhotoDetail) Reset() {
	*x = SendPhotoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhotoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhotoDetail) ProtoMessage() {}

func (x *SendPhotoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhotoDetail.ProtoReflect.Descriptor instead.
func (*SendPhotoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{55}
}

func (x *SendPhotoDetail) GetDetails() []*SendPhotoAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendFileDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendFileAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendFileDetail) Reset() {
	*x = SendFileDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFileDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileDetail) ProtoMessage() {}

func (x *SendFileDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileDetail.ProtoReflect.Descriptor instead.
func (*SendFileDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{56}
}

func (x *SendFileDetail) GetDetails() []*SendFileAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendFileSingleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     uint64           `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver   string           `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	FileDetail *FileDetailValue `protobuf:"bytes,3,opt,name=fileDetail,proto3" json:"fileDetail,omitempty"`
}

func (x *SendFileSingleDetail) Reset() {
	*x = SendFileSingleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFileSingleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileSingleDetail) ProtoMessage() {}

func (x *SendFileSingleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileSingleDetail.ProtoReflect.Descriptor instead.
func (*SendFileSingleDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{57}
}

func (x *SendFileSingleDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SendFileSingleDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SendFileSingleDetail) GetFileDetail() *FileDetailValue {
	if x != nil {
		return x.FileDetail
	}
	return nil
}

type SendCodeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *SendCodeAction `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SendCodeDetail) Reset() {
	*x = SendCodeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeDetail) ProtoMessage() {}

func (x *SendCodeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeDetail.ProtoReflect.Descriptor instead.
func (*SendCodeDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{58}
}

func (x *SendCodeDetail) GetDetails() *SendCodeAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetContactList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *GetContactList) Reset() {
	*x = GetContactList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactList) ProtoMessage() {}

func (x *GetContactList) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactList.ProtoReflect.Descriptor instead.
func (*GetContactList) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{59}
}

func (x *GetContactList) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type GetDialogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *GetDialogList) Reset() {
	*x = GetDialogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDialogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialogList) ProtoMessage() {}

func (x *GetDialogList) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialogList.ProtoReflect.Descriptor instead.
func (*GetDialogList) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{60}
}

func (x *GetDialogList) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type GetDownLoadFileDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadFile map[uint64]*DownLoadFileMsg `protobuf:"bytes,1,rep,name=download_file,json=downloadFile,proto3" json:"download_file,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDownLoadFileDetail) Reset() {
	*x = GetDownLoadFileDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownLoadFileDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownLoadFileDetail) ProtoMessage() {}

func (x *GetDownLoadFileDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownLoadFileDetail.ProtoReflect.Descriptor instead.
func (*GetDownLoadFileDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{61}
}

func (x *GetDownLoadFileDetail) GetDownloadFile() map[uint64]*DownLoadFileMsg {
	if x != nil {
		return x.DownloadFile
	}
	return nil
}

type DownLoadFileMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId    int64 `protobuf:"varint,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	MessageId int64 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
}

func (x *DownLoadFileMsg) Reset() {
	*x = DownLoadFileMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLoadFileMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLoadFileMsg) ProtoMessage() {}

func (x *DownLoadFileMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLoadFileMsg.ProtoReflect.Descriptor instead.
func (*DownLoadFileMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{62}
}

func (x *DownLoadFileMsg) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *DownLoadFileMsg) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type GetMsgHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Self      uint64 `protobuf:"varint,1,opt,name=Self,proto3" json:"Self,omitempty"`
	Other     string `protobuf:"bytes,2,opt,name=Other,proto3" json:"Other,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	OffsetDat int64  `protobuf:"varint,4,opt,name=OffsetDat,proto3" json:"OffsetDat,omitempty"`
	OffsetID  int64  `protobuf:"varint,5,opt,name=OffsetID,proto3" json:"OffsetID,omitempty"`
	MaxID     int64  `protobuf:"varint,6,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	MinID     int64  `protobuf:"varint,7,opt,name=MinID,proto3" json:"MinID,omitempty"`
}

func (x *GetMsgHistory) Reset() {
	*x = GetMsgHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgHistory) ProtoMessage() {}

func (x *GetMsgHistory) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgHistory.ProtoReflect.Descriptor instead.
func (*GetMsgHistory) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{63}
}

func (x *GetMsgHistory) GetSelf() uint64 {
	if x != nil {
		return x.Self
	}
	return 0
}

func (x *GetMsgHistory) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

func (x *GetMsgHistory) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMsgHistory) GetOffsetDat() int64 {
	if x != nil {
		return x.OffsetDat
	}
	return 0
}

func (x *GetMsgHistory) GetOffsetID() int64 {
	if x != nil {
		return x.OffsetID
	}
	return 0
}

func (x *GetMsgHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *GetMsgHistory) GetMinID() int64 {
	if x != nil {
		return x.MinID
	}
	return 0
}

type SendCodeAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendCode map[uint64]string `protobuf:"bytes,1,rep,name=send_code,json=sendCode,proto3" json:"send_code,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LoginId  string            `protobuf:"bytes,2,opt,name=loginId,proto3" json:"loginId,omitempty"`
	Flag     bool              `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	Comments string            `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
}

func (x *SendCodeAction) Reset() {
	*x = SendCodeAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCodeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeAction) ProtoMessage() {}

func (x *SendCodeAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeAction.ProtoReflect.Descriptor instead.
func (*SendCodeAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{64}
}

func (x *SendCodeAction) GetSendCode() map[uint64]string {
	if x != nil {
		return x.SendCode
	}
	return nil
}

func (x *SendCodeAction) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

func (x *SendCodeAction) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

func (x *SendCodeAction) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

type SendVideoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendFileAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendVideoDetail) Reset() {
	*x = SendVideoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVideoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVideoDetail) ProtoMessage() {}

func (x *SendVideoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVideoDetail.ProtoReflect.Descriptor instead.
func (*SendVideoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{65}
}

func (x *SendVideoDetail) GetDetails() []*SendFileAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendImageFileDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*SendFileAction `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SendImageFileDetail) Reset() {
	*x = SendImageFileDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendImageFileDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendImageFileDetail) ProtoMessage() {}

func (x *SendImageFileDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendImageFileDetail.ProtoReflect.Descriptor instead.
func (*SendImageFileDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{66}
}

func (x *SendImageFileDetail) GetDetails() []*SendFileAction {
	if x != nil {
		return x.Details
	}
	return nil
}

type SendContactCardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail []*SendContactCardAction `protobuf:"bytes,1,rep,name=detail,proto3" json:"detail,omitempty"`
}

func (x *SendContactCardDetail) Reset() {
	*x = SendContactCardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactCardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactCardDetail) ProtoMessage() {}

func (x *SendContactCardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactCardDetail.ProtoReflect.Descriptor instead.
func (*SendContactCardDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{67}
}

func (x *SendContactCardDetail) GetDetail() []*SendContactCardAction {
	if x != nil {
		return x.Detail
	}
	return nil
}

type SendContactCardSingleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64            `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver string            `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Card     *ContactCardValue `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *SendContactCardSingleDetail) Reset() {
	*x = SendContactCardSingleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactCardSingleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactCardSingleDetail) ProtoMessage() {}

func (x *SendContactCardSingleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactCardSingleDetail.ProtoReflect.Descriptor instead.
func (*SendContactCardSingleDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{68}
}

func (x *SendContactCardSingleDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SendContactCardSingleDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SendContactCardSingleDetail) GetCard() *ContactCardValue {
	if x != nil {
		return x.Card
	}
	return nil
}

type SaveDraftDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver     string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReplyToMsgId int64  `protobuf:"varint,3,opt,name=ReplyToMsgId,proto3" json:"ReplyToMsgId,omitempty"`
	TopMsgId     int64  `protobuf:"varint,4,opt,name=TopMsgId,proto3" json:"TopMsgId,omitempty"`
	Msg          string `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *SaveDraftDetail) Reset() {
	*x = SaveDraftDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDraftDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftDetail) ProtoMessage() {}

func (x *SaveDraftDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftDetail.ProtoReflect.Descriptor instead.
func (*SaveDraftDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{69}
}

func (x *SaveDraftDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SaveDraftDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SaveDraftDetail) GetReplyToMsgId() int64 {
	if x != nil {
		return x.ReplyToMsgId
	}
	return 0
}

func (x *SaveDraftDetail) GetTopMsgId() int64 {
	if x != nil {
		return x.TopMsgId
	}
	return 0
}

func (x *SaveDraftDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReceivingMsgDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver uint64 `protobuf:"varint,1,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
}

func (x *ReceivingMsgDetail) Reset() {
	*x = ReceivingMsgDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivingMsgDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivingMsgDetail) ProtoMessage() {}

func (x *ReceivingMsgDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivingMsgDetail.ProtoReflect.Descriptor instead.
func (*ReceivingMsgDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{70}
}

func (x *ReceivingMsgDetail) GetReceiver() uint64 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

type CreateGroupDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string              `protobuf:"bytes,1,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Detail    *UintkeyStringvalue `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *CreateGroupDetail) Reset() {
	*x = CreateGroupDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupDetail) ProtoMessage() {}

func (x *CreateGroupDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupDetail.ProtoReflect.Descriptor instead.
func (*CreateGroupDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{71}
}

func (x *CreateGroupDetail) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateGroupDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

type CreateChannelDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelTitle       string              `protobuf:"bytes,1,opt,name=ChannelTitle,proto3" json:"ChannelTitle,omitempty"`
	ChannelUserName    string              `protobuf:"bytes,2,opt,name=ChannelUserName,proto3" json:"ChannelUserName,omitempty"`
	ChannelDescription string              `protobuf:"bytes,3,opt,name=ChannelDescription,proto3" json:"ChannelDescription,omitempty"`
	Detail             *UintkeyStringvalue `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	IsChannel          bool                `protobuf:"varint,5,opt,name=IsChannel,proto3" json:"IsChannel,omitempty"`
	IsSuperGroup       bool                `protobuf:"varint,6,opt,name=IsSuperGroup,proto3" json:"IsSuperGroup,omitempty"`
}

func (x *CreateChannelDetail) Reset() {
	*x = CreateChannelDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelDetail) ProtoMessage() {}

func (x *CreateChannelDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelDetail.ProtoReflect.Descriptor instead.
func (*CreateChannelDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{72}
}

func (x *CreateChannelDetail) GetChannelTitle() string {
	if x != nil {
		return x.ChannelTitle
	}
	return ""
}

func (x *CreateChannelDetail) GetChannelUserName() string {
	if x != nil {
		return x.ChannelUserName
	}
	return ""
}

func (x *CreateChannelDetail) GetChannelDescription() string {
	if x != nil {
		return x.ChannelDescription
	}
	return ""
}

func (x *CreateChannelDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *CreateChannelDetail) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

func (x *CreateChannelDetail) GetIsSuperGroup() bool {
	if x != nil {
		return x.IsSuperGroup
	}
	return false
}

type AddGroupMemberDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat   string              `protobuf:"bytes,1,opt,name=Chat,proto3" json:"Chat,omitempty"`
	Detail *UintkeyStringvalue `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *AddGroupMemberDetail) Reset() {
	*x = AddGroupMemberDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMemberDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMemberDetail) ProtoMessage() {}

func (x *AddGroupMemberDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMemberDetail.ProtoReflect.Descriptor instead.
func (*AddGroupMemberDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{73}
}

func (x *AddGroupMemberDetail) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

func (x *AddGroupMemberDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetChannelMemberDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Channel    string `protobuf:"bytes,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Offset     int64  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit      int64  `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	SearchType string `protobuf:"bytes,5,opt,name=SearchType,proto3" json:"SearchType,omitempty"`
	TopMsgId   int64  `protobuf:"varint,6,opt,name=TopMsgId,proto3" json:"TopMsgId,omitempty"`
}

func (x *GetChannelMemberDetail) Reset() {
	*x = GetChannelMemberDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMemberDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMemberDetail) ProtoMessage() {}

func (x *GetChannelMemberDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMemberDetail.ProtoReflect.Descriptor instead.
func (*GetChannelMemberDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{74}
}

func (x *GetChannelMemberDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *GetChannelMemberDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetChannelMemberDetail) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChannelMemberDetail) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChannelMemberDetail) GetSearchType() string {
	if x != nil {
		return x.SearchType
	}
	return ""
}

func (x *GetChannelMemberDetail) GetTopMsgId() int64 {
	if x != nil {
		return x.TopMsgId
	}
	return 0
}

type UpdateUserInfoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64                        `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	SendData map[uint64]*UpdateUserInfoMsg `protobuf:"bytes,2,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateUserInfoDetail) Reset() {
	*x = UpdateUserInfoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoDetail) ProtoMessage() {}

func (x *UpdateUserInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoDetail.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateUserInfoDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *UpdateUserInfoDetail) GetSendData() map[uint64]*UpdateUserInfoMsg {
	if x != nil {
		return x.SendData
	}
	return nil
}

type UpdateUserInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  *string          `protobuf:"bytes,1,opt,name=userName,proto3,oneof" json:"userName,omitempty"`
	FirstName *string          `protobuf:"bytes,2,opt,name=firstName,proto3,oneof" json:"firstName,omitempty"`
	LastName  *string          `protobuf:"bytes,3,opt,name=lastName,proto3,oneof" json:"lastName,omitempty"`
	Bio       *string          `protobuf:"bytes,4,opt,name=bio,proto3,oneof" json:"bio,omitempty"`
	Photo     *FileDetailValue `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *UpdateUserInfoMsg) Reset() {
	*x = UpdateUserInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoMsg) ProtoMessage() {}

func (x *UpdateUserInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoMsg.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateUserInfoMsg) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *UpdateUserInfoMsg) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *UpdateUserInfoMsg) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *UpdateUserInfoMsg) GetBio() string {
	if x != nil && x.Bio != nil {
		return *x.Bio
	}
	return ""
}

func (x *UpdateUserInfoMsg) GetPhoto() *FileDetailValue {
	if x != nil {
		return x.Photo
	}
	return nil
}

type GetOnlineAccountsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone []string `protobuf:"bytes,1,rep,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetOnlineAccountsDetail) Reset() {
	*x = GetOnlineAccountsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineAccountsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineAccountsDetail) ProtoMessage() {}

func (x *GetOnlineAccountsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineAccountsDetail.ProtoReflect.Descriptor instead.
func (*GetOnlineAccountsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{77}
}

func (x *GetOnlineAccountsDetail) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

type InviteToChannelDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string              `protobuf:"bytes,1,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Detail  *UintkeyStringvalue `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *InviteToChannelDetail) Reset() {
	*x = InviteToChannelDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteToChannelDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteToChannelDetail) ProtoMessage() {}

func (x *InviteToChannelDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteToChannelDetail.ProtoReflect.Descriptor instead.
func (*InviteToChannelDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{78}
}

func (x *InviteToChannelDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *InviteToChannelDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ImportTgSessionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64                         `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	SendData map[uint64]*ImportTgSessionMsg `protobuf:"bytes,2,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ImportTgSessionDetail) Reset() {
	*x = ImportTgSessionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTgSessionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTgSessionDetail) ProtoMessage() {}

func (x *ImportTgSessionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTgSessionDetail.ProtoReflect.Descriptor instead.
func (*ImportTgSessionDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{79}
}

func (x *ImportTgSessionDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ImportTgSessionDetail) GetSendData() map[uint64]*ImportTgSessionMsg {
	if x != nil {
		return x.SendData
	}
	return nil
}

type ImportTgSessionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DC        int32              `protobuf:"varint,1,opt,name=DC,proto3" json:"DC,omitempty"`
	Addr      string             `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`
	AuthKey   []byte             `protobuf:"bytes,3,opt,name=AuthKey,proto3" json:"AuthKey,omitempty"`
	DeviceMsg *ImportTgDeviceMsg `protobuf:"bytes,4,opt,name=DeviceMsg,proto3" json:"DeviceMsg,omitempty"`
}

func (x *ImportTgSessionMsg) Reset() {
	*x = ImportTgSessionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTgSessionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTgSessionMsg) ProtoMessage() {}

func (x *ImportTgSessionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTgSessionMsg.ProtoReflect.Descriptor instead.
func (*ImportTgSessionMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{80}
}

func (x *ImportTgSessionMsg) GetDC() int32 {
	if x != nil {
		return x.DC
	}
	return 0
}

func (x *ImportTgSessionMsg) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ImportTgSessionMsg) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *ImportTgSessionMsg) GetDeviceMsg() *ImportTgDeviceMsg {
	if x != nil {
		return x.DeviceMsg
	}
	return nil
}

type ImportTgDeviceMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId          uint64 `protobuf:"varint,1,opt,name=AppId,proto3" json:"AppId,omitempty"`
	AppHash        string `protobuf:"bytes,2,opt,name=AppHash,proto3" json:"AppHash,omitempty"`
	DeviceModel    string `protobuf:"bytes,3,opt,name=DeviceModel,proto3" json:"DeviceModel,omitempty"`
	SystemVersion  string `protobuf:"bytes,4,opt,name=SystemVersion,proto3" json:"SystemVersion,omitempty"`
	AppVersion     string `protobuf:"bytes,5,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	LangCode       string `protobuf:"bytes,6,opt,name=LangCode,proto3" json:"LangCode,omitempty"`
	SystemLangCode string `protobuf:"bytes,7,opt,name=SystemLangCode,proto3" json:"SystemLangCode,omitempty"`
	LangPack       string `protobuf:"bytes,8,opt,name=LangPack,proto3" json:"LangPack,omitempty"`
}

func (x *ImportTgDeviceMsg) Reset() {
	*x = ImportTgDeviceMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTgDeviceMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTgDeviceMsg) ProtoMessage() {}

func (x *ImportTgDeviceMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTgDeviceMsg.ProtoReflect.Descriptor instead.
func (*ImportTgDeviceMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{81}
}

func (x *ImportTgDeviceMsg) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ImportTgDeviceMsg) GetAppHash() string {
	if x != nil {
		return x.AppHash
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetSystemLangCode() string {
	if x != nil {
		return x.SystemLangCode
	}
	return ""
}

func (x *ImportTgDeviceMsg) GetLangPack() string {
	if x != nil {
		return x.LangPack
	}
	return ""
}

type ImportTgSessionDetailAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportTgSessionDetailAction) Reset() {
	*x = ImportTgSessionDetailAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTgSessionDetailAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTgSessionDetailAction) ProtoMessage() {}

func (x *ImportTgSessionDetailAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTgSessionDetailAction.ProtoReflect.Descriptor instead.
func (*ImportTgSessionDetailAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{82}
}

type JoinByLinkDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *UintkeyStringvalue `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *JoinByLinkDetail) Reset() {
	*x = JoinByLinkDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinByLinkDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinByLinkDetail) ProtoMessage() {}

func (x *JoinByLinkDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinByLinkDetail.ProtoReflect.Descriptor instead.
func (*JoinByLinkDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{83}
}

func (x *JoinByLinkDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetEmojiGroupsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *GetEmojiGroupsDetail) Reset() {
	*x = GetEmojiGroupsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmojiGroupsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmojiGroupsDetail) ProtoMessage() {}

func (x *GetEmojiGroupsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmojiGroupsDetail.ProtoReflect.Descriptor instead.
func (*GetEmojiGroupsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{84}
}

func (x *GetEmojiGroupsDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type GetUserChatFoldersDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetUserChatFoldersDetail) Reset() {
	*x = GetUserChatFoldersDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChatFoldersDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChatFoldersDetail) ProtoMessage() {}

func (x *GetUserChatFoldersDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChatFoldersDetail.ProtoReflect.Descriptor instead.
func (*GetUserChatFoldersDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{85}
}

func (x *GetUserChatFoldersDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type ChannelReadViewDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64  `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Receiver string  `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	MsgIds   []int64 `protobuf:"varint,3,rep,packed,name=msgIds,proto3" json:"msgIds,omitempty"`
}

func (x *ChannelReadViewDetail) Reset() {
	*x = ChannelReadViewDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelReadViewDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelReadViewDetail) ProtoMessage() {}

func (x *ChannelReadViewDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelReadViewDetail.ProtoReflect.Descriptor instead.
func (*ChannelReadViewDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{86}
}

func (x *ChannelReadViewDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ChannelReadViewDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *ChannelReadViewDetail) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type EditAdminDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       uint64             `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ModifiedUser string             `protobuf:"bytes,2,opt,name=ModifiedUser,proto3" json:"ModifiedUser,omitempty"`
	Channel      string             `protobuf:"bytes,3,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Rank         string             `protobuf:"bytes,4,opt,name=Rank,proto3" json:"Rank,omitempty"`
	AdminRights  *AdminRightsDetail `protobuf:"bytes,5,opt,name=AdminRights,proto3" json:"AdminRights,omitempty"`
}

func (x *EditAdminDetail) Reset() {
	*x = EditAdminDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAdminDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAdminDetail) ProtoMessage() {}

func (x *EditAdminDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAdminDetail.ProtoReflect.Descriptor instead.
func (*EditAdminDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{87}
}

func (x *EditAdminDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *EditAdminDetail) GetModifiedUser() string {
	if x != nil {
		return x.ModifiedUser
	}
	return ""
}

func (x *EditAdminDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *EditAdminDetail) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *EditAdminDetail) GetAdminRights() *AdminRightsDetail {
	if x != nil {
		return x.AdminRights
	}
	return nil
}

type AdminRightsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, allows the admin to modify the description of the channel/supergroup¹
	ChangeInfo bool `protobuf:"varint,1,opt,name=ChangeInfo,proto3" json:"ChangeInfo,omitempty"`
	// If set, allows the admin to post messages in the channel¹
	PostMessages bool `protobuf:"varint,2,opt,name=PostMessages,proto3" json:"PostMessages,omitempty"`
	// If set, allows the admin to also edit messages from other admins in the channel¹
	EditMessages bool `protobuf:"varint,3,opt,name=EditMessages,proto3" json:"EditMessages,omitempty"`
	// If set, allows the admin to also delete messages from other admins in the channel¹
	DeleteMessages bool `protobuf:"varint,4,opt,name=DeleteMessages,proto3" json:"DeleteMessages,omitempty"`
	// If set, allows the admin to ban users from the channel/supergroup¹
	BanUsers bool `protobuf:"varint,5,opt,name=BanUsers,proto3" json:"BanUsers,omitempty"`
	// If set, allows the admin to invite users in the channel/supergroup¹
	InviteUsers bool `protobuf:"varint,6,opt,name=InviteUsers,proto3" json:"InviteUsers,omitempty"`
	// If set, allows the admin to pin messages in the channel/supergroup¹
	PinMessages bool `protobuf:"varint,7,opt,name=PinMessages,proto3" json:"PinMessages,omitempty"`
	// If set, allows the admin to add other admins with the same (or more limited)
	AddAdmins bool `protobuf:"varint,8,opt,name=AddAdmins,proto3" json:"AddAdmins,omitempty"`
	// Whether this admin is anonymous
	Anonymous bool `protobuf:"varint,9,opt,name=Anonymous,proto3" json:"Anonymous,omitempty"`
	// If set, allows the admin to change group call/livestream settings
	ManageCall bool `protobuf:"varint,10,opt,name=ManageCall,proto3" json:"ManageCall,omitempty"`
	// Set this flag if none of the other flags are set, but you still want the user to be an
	// admin: if this or any of the other flags are set, the admin can get the chat admin
	// log¹, get chat statistics², get message statistics in channels³, get channel
	// members, see anonymous administrators in supergroups and ignore slow mode.
	Other bool `protobuf:"varint,11,opt,name=Other,proto3" json:"Other,omitempty"`
	// If set, allows the admin to create, delete or modify forum topics »¹.
	ManageTopics bool `protobuf:"varint,12,opt,name=ManageTopics,proto3" json:"ManageTopics,omitempty"`
	// PostStories field of ChatAdminRights.
	PostStories bool `protobuf:"varint,13,opt,name=PostStories,proto3" json:"PostStories,omitempty"`
	// EditStories field of ChatAdminRights.
	EditStories bool `protobuf:"varint,14,opt,name=EditStories,proto3" json:"EditStories,omitempty"`
	// DeleteStories field of ChatAdminRights.
	DeleteStories bool `protobuf:"varint,15,opt,name=DeleteStories,proto3" json:"DeleteStories,omitempty"`
}

func (x *AdminRightsDetail) Reset() {
	*x = AdminRightsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRightsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRightsDetail) ProtoMessage() {}

func (x *AdminRightsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRightsDetail.ProtoReflect.Descriptor instead.
func (*AdminRightsDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{88}
}

func (x *AdminRightsDetail) GetChangeInfo() bool {
	if x != nil {
		return x.ChangeInfo
	}
	return false
}

func (x *AdminRightsDetail) GetPostMessages() bool {
	if x != nil {
		return x.PostMessages
	}
	return false
}

func (x *AdminRightsDetail) GetEditMessages() bool {
	if x != nil {
		return x.EditMessages
	}
	return false
}

func (x *AdminRightsDetail) GetDeleteMessages() bool {
	if x != nil {
		return x.DeleteMessages
	}
	return false
}

func (x *AdminRightsDetail) GetBanUsers() bool {
	if x != nil {
		return x.BanUsers
	}
	return false
}

func (x *AdminRightsDetail) GetInviteUsers() bool {
	if x != nil {
		return x.InviteUsers
	}
	return false
}

func (x *AdminRightsDetail) GetPinMessages() bool {
	if x != nil {
		return x.PinMessages
	}
	return false
}

func (x *AdminRightsDetail) GetAddAdmins() bool {
	if x != nil {
		return x.AddAdmins
	}
	return false
}

func (x *AdminRightsDetail) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *AdminRightsDetail) GetManageCall() bool {
	if x != nil {
		return x.ManageCall
	}
	return false
}

func (x *AdminRightsDetail) GetOther() bool {
	if x != nil {
		return x.Other
	}
	return false
}

func (x *AdminRightsDetail) GetManageTopics() bool {
	if x != nil {
		return x.ManageTopics
	}
	return false
}

func (x *AdminRightsDetail) GetPostStories() bool {
	if x != nil {
		return x.PostStories
	}
	return false
}

func (x *AdminRightsDetail) GetEditStories() bool {
	if x != nil {
		return x.EditStories
	}
	return false
}

func (x *AdminRightsDetail) GetDeleteStories() bool {
	if x != nil {
		return x.DeleteStories
	}
	return false
}

type SetTypeActionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	FileType string `protobuf:"bytes,3,opt,name=FileType,proto3" json:"FileType,omitempty"`
}

func (x *SetTypeActionDetail) Reset() {
	*x = SetTypeActionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTypeActionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTypeActionDetail) ProtoMessage() {}

func (x *SetTypeActionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTypeActionDetail.ProtoReflect.Descriptor instead.
func (*SetTypeActionDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{89}
}

func (x *SetTypeActionDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SetTypeActionDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SetTypeActionDetail) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type SendMsgSingleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *SendMsgSingleDetail) Reset() {
	*x = SendMsgSingleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgSingleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgSingleDetail) ProtoMessage() {}

func (x *SendMsgSingleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgSingleDetail.ProtoReflect.Descriptor instead.
func (*SendMsgSingleDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{90}
}

func (x *SendMsgSingleDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SendMsgSingleDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SendMsgSingleDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReadHistoryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *ReadHistoryDetail) Reset() {
	*x = ReadHistoryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHistoryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHistoryDetail) ProtoMessage() {}

func (x *ReadHistoryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHistoryDetail.ProtoReflect.Descriptor instead.
func (*ReadHistoryDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{91}
}

func (x *ReadHistoryDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ReadHistoryDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ReadChannelHistoryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *ReadChannelHistoryDetail) Reset() {
	*x = ReadChannelHistoryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChannelHistoryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChannelHistoryDetail) ProtoMessage() {}

func (x *ReadChannelHistoryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChannelHistoryDetail.ProtoReflect.Descriptor instead.
func (*ReadChannelHistoryDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{92}
}

func (x *ReadChannelHistoryDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ReadChannelHistoryDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type CheckUserNameDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CheckUserNameDetail) Reset() {
	*x = CheckUserNameDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserNameDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserNameDetail) ProtoMessage() {}

func (x *CheckUserNameDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserNameDetail.ProtoReflect.Descriptor instead.
func (*CheckUserNameDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{93}
}

func (x *CheckUserNameDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *CheckUserNameDetail) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdatesGetStatusDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *UpdatesGetStatusDetail) Reset() {
	*x = UpdatesGetStatusDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatesGetStatusDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatesGetStatusDetail) ProtoMessage() {}

func (x *UpdatesGetStatusDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatesGetStatusDetail.ProtoReflect.Descriptor instead.
func (*UpdatesGetStatusDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{94}
}

func (x *UpdatesGetStatusDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

type CreateBotDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender uint64 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
}

func (x *CreateBotDetail) Reset() {
	*x = CreateBotDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBotDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBotDetail) ProtoMessage() {}

func (x *CreateBotDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBotDetail.ProtoReflect.Descriptor instead.
func (*CreateBotDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{95}
}

func (x *CreateBotDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

type StartBotDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       uint64   `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	BotUserNames []string `protobuf:"bytes,2,rep,name=BotUserNames,proto3" json:"BotUserNames,omitempty"`
}

func (x *StartBotDetail) Reset() {
	*x = StartBotDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBotDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBotDetail) ProtoMessage() {}

func (x *StartBotDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBotDetail.ProtoReflect.Descriptor instead.
func (*StartBotDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{96}
}

func (x *StartBotDetail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *StartBotDetail) GetBotUserNames() []string {
	if x != nil {
		return x.BotUserNames
	}
	return nil
}

type UpdateUserChatFoldersDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account      uint64     `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Title        string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	FolderID     uint64     `protobuf:"varint,3,opt,name=folderID,proto3" json:"folderID,omitempty"`
	PinnedPeers  []*PeerBuf `protobuf:"bytes,4,rep,name=pinnedPeers,proto3" json:"pinnedPeers,omitempty"`
	IncludePeers []*PeerBuf `protobuf:"bytes,5,rep,name=includePeers,proto3" json:"includePeers,omitempty"`
	ExcludePeers []*PeerBuf `protobuf:"bytes,6,rep,name=excludePeers,proto3" json:"excludePeers,omitempty"`
	Groups       bool       `protobuf:"varint,7,opt,name=groups,proto3" json:"groups,omitempty"`
	NonContacts  bool       `protobuf:"varint,8,opt,name=nonContacts,proto3" json:"nonContacts,omitempty"`
	Contacts     bool       `protobuf:"varint,9,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Channels     bool       `protobuf:"varint,10,opt,name=channels,proto3" json:"channels,omitempty"`
	Bots         bool       `protobuf:"varint,11,opt,name=bots,proto3" json:"bots,omitempty"`
	Delete       bool       `protobuf:"varint,12,opt,name=delete,proto3" json:"delete,omitempty"`
	Emoticon     string     `protobuf:"bytes,13,opt,name=emoticon,proto3" json:"emoticon,omitempty"`
}

func (x *UpdateUserChatFoldersDetail) Reset() {
	*x = UpdateUserChatFoldersDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserChatFoldersDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserChatFoldersDetail) ProtoMessage() {}

func (x *UpdateUserChatFoldersDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserChatFoldersDetail.ProtoReflect.Descriptor instead.
func (*UpdateUserChatFoldersDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateUserChatFoldersDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *UpdateUserChatFoldersDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateUserChatFoldersDetail) GetFolderID() uint64 {
	if x != nil {
		return x.FolderID
	}
	return 0
}

func (x *UpdateUserChatFoldersDetail) GetPinnedPeers() []*PeerBuf {
	if x != nil {
		return x.PinnedPeers
	}
	return nil
}

func (x *UpdateUserChatFoldersDetail) GetIncludePeers() []*PeerBuf {
	if x != nil {
		return x.IncludePeers
	}
	return nil
}

func (x *UpdateUserChatFoldersDetail) GetExcludePeers() []*PeerBuf {
	if x != nil {
		return x.ExcludePeers
	}
	return nil
}

func (x *UpdateUserChatFoldersDetail) GetGroups() bool {
	if x != nil {
		return x.Groups
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetNonContacts() bool {
	if x != nil {
		return x.NonContacts
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetContacts() bool {
	if x != nil {
		return x.Contacts
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetChannels() bool {
	if x != nil {
		return x.Channels
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetBots() bool {
	if x != nil {
		return x.Bots
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

func (x *UpdateUserChatFoldersDetail) GetEmoticon() string {
	if x != nil {
		return x.Emoticon
	}
	return ""
}

type PeerBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buf []byte `protobuf:"bytes,1,opt,name=buf,proto3" json:"buf,omitempty"`
}

func (x *PeerBuf) Reset() {
	*x = PeerBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerBuf) ProtoMessage() {}

func (x *PeerBuf) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerBuf.ProtoReflect.Descriptor instead.
func (*PeerBuf) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{98}
}

func (x *PeerBuf) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

type MessagesReactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emotion  string            `protobuf:"bytes,1,opt,name=Emotion,proto3" json:"Emotion,omitempty"`
	Detail   *UintkeyUintvalue `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Receiver string            `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
}

func (x *MessagesReactionDetail) Reset() {
	*x = MessagesReactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReactionDetail) ProtoMessage() {}

func (x *MessagesReactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReactionDetail.ProtoReflect.Descriptor instead.
func (*MessagesReactionDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{99}
}

func (x *MessagesReactionDetail) GetEmotion() string {
	if x != nil {
		return x.Emotion
	}
	return ""
}

func (x *MessagesReactionDetail) GetDetail() *UintkeyUintvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *MessagesReactionDetail) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type LeaveDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *UintkeyStringvalue `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *LeaveDetail) Reset() {
	*x = LeaveDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveDetail) ProtoMessage() {}

func (x *LeaveDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveDetail.ProtoReflect.Descriptor instead.
func (*LeaveDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{100}
}

func (x *LeaveDetail) GetDetail() *UintkeyStringvalue {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetGroupMembersDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account uint64 `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"`
	ChatId  int64  `protobuf:"varint,2,opt,name=ChatId,proto3" json:"ChatId,omitempty"`
}

func (x *GetGroupMembersDetail) Reset() {
	*x = GetGroupMembersDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersDetail) ProtoMessage() {}

func (x *GetGroupMembersDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersDetail.ProtoReflect.Descriptor instead.
func (*GetGroupMembersDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{101}
}

func (x *GetGroupMembersDetail) GetAccount() uint64 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *GetGroupMembersDetail) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type QueryPreKeyBundleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*UintkeyUintvalue `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *QueryPreKeyBundleDetail) Reset() {
	*x = QueryPreKeyBundleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPreKeyBundleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPreKeyBundleDetail) ProtoMessage() {}

func (x *QueryPreKeyBundleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPreKeyBundleDetail.ProtoReflect.Descriptor instead.
func (*QueryPreKeyBundleDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{102}
}

func (x *QueryPreKeyBundleDetail) GetDetails() []*UintkeyUintvalue {
	if x != nil {
		return x.Details
	}
	return nil
}

type SyncContactDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*UintkeyUintvalue `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SyncContactDetail) Reset() {
	*x = SyncContactDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncContactDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncContactDetail) ProtoMessage() {}

func (x *SyncContactDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncContactDetail.ProtoReflect.Descriptor instead.
func (*SyncContactDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{103}
}

func (x *SyncContactDetail) GetDetails() []*UintkeyUintvalue {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetHeadSculptureDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail []*SetHeadSculptureAction `protobuf:"bytes,1,rep,name=detail,proto3" json:"detail,omitempty"`
}

func (x *SetHeadSculptureDetail) Reset() {
	*x = SetHeadSculptureDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHeadSculptureDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHeadSculptureDetail) ProtoMessage() {}

func (x *SetHeadSculptureDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHeadSculptureDetail.ProtoReflect.Descriptor instead.
func (*SetHeadSculptureDetail) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{104}
}

func (x *SetHeadSculptureDetail) GetDetail() []*SetHeadSculptureAction {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 定义返回消息
type ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionResult  ActionResult             `protobuf:"varint,1,opt,name=action_result,json=actionResult,proto3,enum=ActionResult" json:"action_result,omitempty"`                                                                                             // 动作的返回状态
	AccountStatus map[string]AccountStatus `protobuf:"bytes,2,rep,name=account_status,json=accountStatus,proto3" json:"account_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=AccountStatus"` // 帐号的执行状态字典
	PongMessage   string                   `protobuf:"bytes,3,opt,name=pong_message,json=pongMessage,proto3" json:"pong_message,omitempty"`
	// Types that are assignable to CallbackInfo:
	//
	//	*ResponseMessage_LoginCallbacks
	//	*ResponseMessage_TextMsgCallbacks
	//	*ResponseMessage_ReadMsgCallbacks
	CallbackInfo         isResponseMessage_CallbackInfo `protobuf_oneof:"callbackInfo"`
	LoginId              string                         `protobuf:"bytes,7,opt,name=login_id,json=loginId,proto3" json:"login_id,omitempty"`
	Account              string                         `protobuf:"bytes,8,opt,name=account,proto3" json:"account,omitempty"`
	Comment              string                         `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`
	Data                 []byte                         `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	RespondAccountStatus AccountStatus                  `protobuf:"varint,11,opt,name=respond_account_status,json=respondAccountStatus,proto3,enum=AccountStatus" json:"respond_account_status,omitempty"` // 账号的执行返回状态
	Key                  string                         `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ResponseMessage) Reset() {
	*x = ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMessage) ProtoMessage() {}

func (x *ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMessage.ProtoReflect.Descriptor instead.
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{105}
}

func (x *ResponseMessage) GetActionResult() ActionResult {
	if x != nil {
		return x.ActionResult
	}
	return ActionResult_ALL_SUCCESS
}

func (x *ResponseMessage) GetAccountStatus() map[string]AccountStatus {
	if x != nil {
		return x.AccountStatus
	}
	return nil
}

func (x *ResponseMessage) GetPongMessage() string {
	if x != nil {
		return x.PongMessage
	}
	return ""
}

func (m *ResponseMessage) GetCallbackInfo() isResponseMessage_CallbackInfo {
	if m != nil {
		return m.CallbackInfo
	}
	return nil
}

func (x *ResponseMessage) GetLoginCallbacks() *LoginCallbacks {
	if x, ok := x.GetCallbackInfo().(*ResponseMessage_LoginCallbacks); ok {
		return x.LoginCallbacks
	}
	return nil
}

func (x *ResponseMessage) GetTextMsgCallbacks() *TextMsgCallbacks {
	if x, ok := x.GetCallbackInfo().(*ResponseMessage_TextMsgCallbacks); ok {
		return x.TextMsgCallbacks
	}
	return nil
}

func (x *ResponseMessage) GetReadMsgCallbacks() *ReadMsgCallbacks {
	if x, ok := x.GetCallbackInfo().(*ResponseMessage_ReadMsgCallbacks); ok {
		return x.ReadMsgCallbacks
	}
	return nil
}

func (x *ResponseMessage) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

func (x *ResponseMessage) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ResponseMessage) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ResponseMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseMessage) GetRespondAccountStatus() AccountStatus {
	if x != nil {
		return x.RespondAccountStatus
	}
	return AccountStatus_SUCCESS
}

func (x *ResponseMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isResponseMessage_CallbackInfo interface {
	isResponseMessage_CallbackInfo()
}

type ResponseMessage_LoginCallbacks struct {
	LoginCallbacks *LoginCallbacks `protobuf:"bytes,4,opt,name=login_callbacks,json=loginCallbacks,proto3,oneof"`
}

type ResponseMessage_TextMsgCallbacks struct {
	TextMsgCallbacks *TextMsgCallbacks `protobuf:"bytes,5,opt,name=text_msg_callbacks,json=textMsgCallbacks,proto3,oneof"`
}

type ResponseMessage_ReadMsgCallbacks struct {
	ReadMsgCallbacks *ReadMsgCallbacks `protobuf:"bytes,6,opt,name=read_msg_callbacks,json=readMsgCallbacks,proto3,oneof"`
}

func (*ResponseMessage_LoginCallbacks) isResponseMessage_CallbackInfo() {}

func (*ResponseMessage_TextMsgCallbacks) isResponseMessage_CallbackInfo() {}

func (*ResponseMessage_ReadMsgCallbacks) isResponseMessage_CallbackInfo() {}

type LoginCallbacks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*LoginCallback `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *LoginCallbacks) Reset() {
	*x = LoginCallbacks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCallbacks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCallbacks) ProtoMessage() {}

func (x *LoginCallbacks) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCallbacks.ProtoReflect.Descriptor instead.
func (*LoginCallbacks) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{106}
}

func (x *LoginCallbacks) GetResults() []*LoginCallback {
	if x != nil {
		return x.Results
	}
	return nil
}

type LoginCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserJid     uint64        `protobuf:"varint,1,opt,name=userJid,proto3" json:"userJid,omitempty"`
	LoginStatus AccountStatus `protobuf:"varint,2,opt,name=loginStatus,proto3,enum=AccountStatus" json:"loginStatus,omitempty"`
	ProxyUrl    string        `protobuf:"bytes,3,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
	Comment     string        `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *LoginCallback) Reset() {
	*x = LoginCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCallback) ProtoMessage() {}

func (x *LoginCallback) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCallback.ProtoReflect.Descriptor instead.
func (*LoginCallback) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{107}
}

func (x *LoginCallback) GetUserJid() uint64 {
	if x != nil {
		return x.UserJid
	}
	return 0
}

func (x *LoginCallback) GetLoginStatus() AccountStatus {
	if x != nil {
		return x.LoginStatus
	}
	return AccountStatus_SUCCESS
}

func (x *LoginCallback) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

func (x *LoginCallback) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type TextMsgCallbacks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TextMsgCallback `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *TextMsgCallbacks) Reset() {
	*x = TextMsgCallbacks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMsgCallbacks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMsgCallbacks) ProtoMessage() {}

func (x *TextMsgCallbacks) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMsgCallbacks.ProtoReflect.Descriptor instead.
func (*TextMsgCallbacks) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{108}
}

func (x *TextMsgCallbacks) GetResults() []*TextMsgCallback {
	if x != nil {
		return x.Results
	}
	return nil
}

type SendFileAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData   map[uint64]*UintFileDetailValue   `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SendTgData map[uint64]*UintTgFileDetailValue `protobuf:"bytes,2,rep,name=send_tgData,json=sendTgData,proto3" json:"send_tgData,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type       string                            `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *SendFileAction) Reset() {
	*x = SendFileAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFileAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFileAction) ProtoMessage() {}

func (x *SendFileAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFileAction.ProtoReflect.Descriptor instead.
func (*SendFileAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{109}
}

func (x *SendFileAction) GetSendData() map[uint64]*UintFileDetailValue {
	if x != nil {
		return x.SendData
	}
	return nil
}

func (x *SendFileAction) GetSendTgData() map[uint64]*UintTgFileDetailValue {
	if x != nil {
		return x.SendTgData
	}
	return nil
}

func (x *SendFileAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SendContactCardAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendData map[uint64]*UintSendContactCard `protobuf:"bytes,1,rep,name=send_data,json=sendData,proto3" json:"send_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type     string                          `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *SendContactCardAction) Reset() {
	*x = SendContactCardAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactCardAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactCardAction) ProtoMessage() {}

func (x *SendContactCardAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactCardAction.ProtoReflect.Descriptor instead.
func (*SendContactCardAction) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{110}
}

func (x *SendContactCardAction) GetSendData() map[uint64]*UintSendContactCard {
	if x != nil {
		return x.SendData
	}
	return nil
}

func (x *SendContactCardAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type TextMsgCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   uint64 `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`     //发送人
	Receiver uint64 `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"` //接收人
	SendText string `protobuf:"bytes,3,opt,name=sendText,proto3" json:"sendText,omitempty"`  //消息内容
	SendTime int64  `protobuf:"varint,4,opt,name=sendTime,proto3" json:"sendTime,omitempty"` //发送时间
	ReqId    string `protobuf:"bytes,5,opt,name=reqId,proto3" json:"reqId,omitempty"`        //请求id
	Read     bool   `protobuf:"varint,6,opt,name=read,proto3" json:"read,omitempty"`         //已读
}

func (x *TextMsgCallback) Reset() {
	*x = TextMsgCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMsgCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMsgCallback) ProtoMessage() {}

func (x *TextMsgCallback) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMsgCallback.ProtoReflect.Descriptor instead.
func (*TextMsgCallback) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{111}
}

func (x *TextMsgCallback) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *TextMsgCallback) GetReceiver() uint64 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *TextMsgCallback) GetSendText() string {
	if x != nil {
		return x.SendText
	}
	return ""
}

func (x *TextMsgCallback) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *TextMsgCallback) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *TextMsgCallback) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

type ReadMsgCallbacks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ReadMsgCallback `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ReadMsgCallbacks) Reset() {
	*x = ReadMsgCallbacks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMsgCallbacks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMsgCallbacks) ProtoMessage() {}

func (x *ReadMsgCallbacks) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMsgCallbacks.ProtoReflect.Descriptor instead.
func (*ReadMsgCallbacks) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{112}
}

func (x *ReadMsgCallbacks) GetResults() []*ReadMsgCallback {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadMsgCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId string `protobuf:"bytes,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
}

func (x *ReadMsgCallback) Reset() {
	*x = ReadMsgCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_arthas_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMsgCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMsgCallback) ProtoMessage() {}

func (x *ReadMsgCallback) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_arthas_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMsgCallback.ProtoReflect.Descriptor instead.
func (*ReadMsgCallback) Descriptor() ([]byte, []int) {
	return file_protobuf_arthas_proto_rawDescGZIP(), []int{113}
}

func (x *ReadMsgCallback) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

var File_protobuf_arthas_proto protoreflect.FileDescriptor

var file_protobuf_arthas_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x72, 0x74, 0x68, 0x61,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x1a, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x43, 0x68, 0x61, 0x74, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1b,
	0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x22, 0xc2, 0x05, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x69, 0x66, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x83, 0x02, 0x0a,
	0x11, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4e, 0x6f, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x72,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x6e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x59, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x54, 0x54, 0x4c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x5a, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xc2, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4c,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4c, 0x6f, 0x6e,
	0x67, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x75, 0x72,
	0x61, 0x63, 0x79, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6c,
	0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0f,
	0x50, 0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x22, 0x96, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x4c, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0x7a, 0x0a, 0x14, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x50, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x4e, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x08, 0x74, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x54, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x08, 0x74, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x42, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x54, 0x67, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x50, 0x61, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x50, 0x61, 0x63,
	0x6b, 0x22, 0x2a, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xb0, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a,
	0x4f, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2c, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67,
	0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x3f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x64, 0x53,
	0x63, 0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74,
	0x72, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x52, 0x11,
	0x48, 0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74, 0x72, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x29, 0x0a, 0x05, 0x56, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x46, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x46, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x22, 0x49, 0x0a, 0x12,
	0x53, 0x65, 0x6e, 0x64, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x39, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0xff, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x4b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d,
	0x73, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3d, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x44, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x45, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xfb, 0x2b, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x17,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x79, 0x6e,
	0x63, 0x41, 0x70, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x19, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x6b, 0x65, 0x79, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x17, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x65, 0x6b, 0x65, 0x79, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x43, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x12,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x10, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x63, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x54, 0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x63,
	0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63,
	0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x16, 0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x10, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x44, 0x0a, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x43, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x11,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x13,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x61, 0x64,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x51, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x15,
	0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4b, 0x0a, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x73,
	0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x51, 0x0a, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x15,
	0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x54, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x10, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x67,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0f,
	0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x15,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f,
	0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x11, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x51, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x0a, 0x13, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x42, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4c, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48,
	0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x53, 0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x0c, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48,
	0x00, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x54,
	0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x57, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a,
	0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x58, 0x0a,
	0x1b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x17,
	0x64, 0x6f, 0x77, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4d, 0x0a,
	0x16, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x16,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x14, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x5b, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x18, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x66, 0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x15, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x52, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x48, 0x00, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x11, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x13, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x61, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x18,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x61, 0x64, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x3e, 0x0a, 0x11, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f,
	0x65, 0x64, 0x69, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x4b, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x5a, 0x0a, 0x1b,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x18,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x16, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x14, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x64, 0x0a, 0x1f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x1b,
	0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x11, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4b, 0x0a, 0x16, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4d, 0x0a, 0x16, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48,
	0x00, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x5a, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x18, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52,
	0x15, 0x65, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x57, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x61, 0x0a, 0x1e, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x48, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x45, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x45, 0x0a, 0x14,
	0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00,
	0x52, 0x11, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x4b, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x74, 0x74, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x47, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x54, 0x54, 0x4c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x74, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x4e, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x48, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x63, 0x0a, 0x1e, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x64, 0x69, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x57, 0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3e,
	0x0a, 0x11, 0x70, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x69, 0x6e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x70,
	0x69, 0x6e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x41,
	0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x48, 0x00, 0x52,
	0x10, 0x67, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x44, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4a, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x13,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x13, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x65, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3c, 0x0a, 0x10, 0x55, 0x69,
	0x6e, 0x74, 0x6b, 0x65, 0x79, 0x55, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x55, 0x69, 0x6e, 0x74,
	0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x55, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x06, 0x76, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x76, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x11, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x54, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x6e, 0x64, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x4d,
	0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x52, 0x0a, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x13, 0x55, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x55, 0x69, 0x6e, 0x74, 0x54, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x55, 0x69, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e,
	0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8d,
	0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d,
	0x0a, 0x0d, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4c, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63,
	0x79, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x41,
	0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0xe9, 0x01,
	0x0a, 0x15, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x65, 0x6f, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x47, 0x65, 0x6f, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x4b, 0x0a, 0x16, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3d, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3b, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x7c, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x3b, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2a, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4d,
	0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x51, 0x0a,
	0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x47, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x65, 0x6c, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x65, 0x6c, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x69, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x49,
	0x44, 0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2e, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x78, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x53,
	0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x6f, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f, 0x70, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x22, 0x30, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74,
	0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x82, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x57, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65,
	0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0xb4, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x54, 0x6f, 0x70, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xe7, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x62, 0x69, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x6f, 0x22, 0x2f, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a, 0x15,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x2b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xc6, 0x01, 0x0a,
	0x15, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x41, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x44, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x44, 0x43, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x8b, 0x02, 0x0a,
	0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x1d, 0x0a, 0x1b, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x10, 0x4a, 0x6f, 0x69,
	0x6e, 0x42, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x65, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x56,
	0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x83, 0x04, 0x0a, 0x11,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x45, 0x64, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x22, 0x50, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x32, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x4c,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x42, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xab, 0x03, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x0b, 0x70, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x42, 0x75, 0x66, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x42, 0x75, 0x66, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x42,
	0x75, 0x66, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x1b, 0x0a, 0x07, 0x50, 0x65,
	0x65, 0x72, 0x42, 0x75, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x22, 0x79, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x6b, 0x65, 0x79, 0x55, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x22, 0x3a, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x49,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65, 0x79, 0x55,
	0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x40, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x6b, 0x65,
	0x79, 0x55, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x49, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63,
	0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x53, 0x63, 0x75, 0x6c, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x93,
	0x05, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x73, 0x12, 0x41, 0x0a, 0x12, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x12, 0x41, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x73, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x16, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x1a, 0x50, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0b,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x51, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x54, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x51, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x27, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x2a, 0xc2, 0x0b, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x45, 0x52, 0x52, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x1f, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x25, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x4b, 0x45, 0x59, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41,
	0x43, 0x54, 0x53, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f,
	0x4e, 0x47, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x56, 0x43, 0x41,
	0x52, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x53, 0x43, 0x55, 0x4c, 0x50, 0x54, 0x55,
	0x52, 0x45, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x0a, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x12, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0b,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x53,
	0x47, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x54,
	0x4f, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41,
	0x43, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x44, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x11, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x4e, 0x44,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x13, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x41,
	0x43, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x14, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x41,
	0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x16, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x10, 0x18, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x10, 0x19, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x1a, 0x12, 0x15, 0x0a,
	0x11, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x47, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x1b, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x42, 0x59, 0x5f,
	0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x1c, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x45, 0x4d,
	0x4f, 0x4a, 0x49, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x1d, 0x12, 0x15, 0x0a, 0x11, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x20, 0x12, 0x16, 0x0a,
	0x12, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x10, 0x21, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x53, 0x10, 0x22, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x23, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x24,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x26, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x27, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x54, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52,
	0x53, 0x10, 0x28, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x53, 0x10,
	0x29, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x2a, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x53,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x2b, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x4f, 0x54, 0x10, 0x2c, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x4f, 0x54, 0x10, 0x2d, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x45, 0x41, 0x44, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x2e, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x56,
	0x49, 0x45, 0x57, 0x10, 0x2f, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x10, 0x30, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x31, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x10, 0x32, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47,
	0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x33, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x4e,
	0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x34, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x49, 0x4e,
	0x47, 0x4c, 0x45, 0x10, 0x35, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x44, 0x52,
	0x41, 0x46, 0x54, 0x10, 0x36, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x41,
	0x4c, 0x4c, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x37, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x38, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x39, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x3a,
	0x12, 0x18, 0x0a, 0x14, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x53, 0x10, 0x3b, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x44,
	0x49, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x52,
	0x49, 0x47, 0x48, 0x54, 0x53, 0x10, 0x3c, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x54, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x3d, 0x12, 0x11, 0x0a, 0x0d, 0x47,
	0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x3e, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x45, 0x54, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x54,
	0x4c, 0x10, 0x3f, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f,
	0x4e, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x53, 0x10, 0x40, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x42, 0x41,
	0x4e, 0x4e, 0x45, 0x44, 0x10, 0x41, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x42, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x49, 0x4e, 0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x43, 0x12,
	0x16, 0x0a, 0x12, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x49, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x44, 0x49,
	0x41, 0x4c, 0x4f, 0x47, 0x53, 0x10, 0x44, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x4e, 0x44, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x46, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x47, 0x2a,
	0xa0, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x52, 0x55, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54,
	0x10, 0x07, 0x2a, 0xd7, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x58, 0x59,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x04, 0x53, 0x45, 0x41, 0x4c, 0x10, 0x93,
	0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x91, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x52, 0x52, 0x55, 0x50, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x09, 0x32, 0x36, 0x0a, 0x06,
	0x41, 0x72, 0x74, 0x68, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x0f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0x40, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x68, 0x61, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x0f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_arthas_proto_rawDescOnce sync.Once
	file_protobuf_arthas_proto_rawDescData = file_protobuf_arthas_proto_rawDesc
)

func file_protobuf_arthas_proto_rawDescGZIP() []byte {
	file_protobuf_arthas_proto_rawDescOnce.Do(func() {
		file_protobuf_arthas_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_arthas_proto_rawDescData)
	})
	return file_protobuf_arthas_proto_rawDescData
}

var file_protobuf_arthas_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_arthas_proto_msgTypes = make([]protoimpl.MessageInfo, 132)
var file_protobuf_arthas_proto_goTypes = []interface{}{
	(Action)(0),                         // 0: Action
	(ActionResult)(0),                   // 1: ActionResult
	(AccountStatus)(0),                  // 2: AccountStatus
	(*EditChatBannedRightsDetail)(nil),  // 3: EditChatBannedRightsDetail
	(*EditParticipantBannedDetail)(nil), // 4: EditParticipantBannedDetail
	(*ChatBannedRightsType)(nil),        // 5: ChatBannedRightsType
	(*GetManageChannelsDetail)(nil),     // 6: GetManageChannelsDetail
	(*SendStoriesDetail)(nil),           // 7: SendStoriesDetail
	(*GetCommonChatsDetail)(nil),        // 8: GetCommonChatsDetail
	(*SetHistoryTTLDetail)(nil),         // 9: SetHistoryTTLDetail
	(*GetChatsInfoDetail)(nil),          // 10: GetChatsInfoDetail
	(*GetUserInfoDetail)(nil),           // 11: GetUserInfoDetail
	(*GetPinnedDialogs)(nil),            // 12: GetPinnedDialogs
	(*ContactsGetLocatedDetail)(nil),    // 13: ContactsGetLocatedDetail
	(*PinDialogDetail)(nil),             // 14: PinDialogDetail
	(*ClearAllDraftDetail)(nil),         // 15: ClearAllDraftDetail
	(*DeleteMessagesDetail)(nil),        // 16: DeleteMessagesDetail
	(*OrdinaryAction)(nil),              // 17: OrdinaryAction
	(*OrdinarySingleAction)(nil),        // 18: OrdinarySingleAction
	(*DeletePrivateChatDetail)(nil),     // 19: DeletePrivateChatDetail
	(*ForwardMessageDetail)(nil),        // 20: ForwardMessageDetail
	(*DeleteMemberDetail)(nil),          // 21: DeleteMemberDetail
	(*LogoutAction)(nil),                // 22: LogoutAction
	(*LoginDetail)(nil),                 // 23: loginDetail
	(*TgDeviceConfig)(nil),              // 24: TgDeviceConfig
	(*LogoutDetail)(nil),                // 25: logoutDetail
	(*GetUserHeadImageAction)(nil),      // 26: GetUserHeadImageAction
	(*GetUserHeadImage)(nil),            // 27: getUserHeadImage
	(*DownUserHeadImageDetail)(nil),     // 28: DownUserHeadImageDetail
	(*SearchDetail)(nil),                // 29: SearchDetail
	(*HeadSculpture)(nil),               // 30: HeadSculpture
	(*SetHeadSculptureAction)(nil),      // 31: SetHeadSculptureAction
	(*VCard)(nil),                       // 32: VCard
	(*SendVCardMsgDetail)(nil),          // 33: SendVCardMsgDetail
	(*SendMessageDetail)(nil),           // 34: SendMessageDetail
	(*AppData)(nil),                     // 35: appData
	(*KeyData)(nil),                     // 36: KeyData
	(*SyncAccountKeyAction)(nil),        // 37: SyncAccountKeyAction
	(*SyncAppInfoAction)(nil),           // 38: SyncAppInfoAction
	(*DeleteStoriesDetail)(nil),         // 39: DeleteStoriesDetail
	(*EditStoriesDetail)(nil),           // 40: EditStoriesDetail
	(*RequestMessage)(nil),              // 41: RequestMessage
	(*UintkeyUintvalue)(nil),            // 42: UintkeyUintvalue
	(*UintkeyStringvalue)(nil),          // 43: UintkeyStringvalue
	(*StringKeyStringvalue)(nil),        // 44: StringKeyStringvalue
	(*UintSenderVcard)(nil),             // 45: UintSenderVcard
	(*SendMessageAction)(nil),           // 46: SendMessageAction
	(*SendVCardMsgDetailAction)(nil),    // 47: SendVCardMsgDetailAction
	(*SendGroupMessageAction)(nil),      // 48: SendGroupMessageAction
	(*SendPhotoAction)(nil),             // 49: SendPhotoAction
	(*UintFileDetailValue)(nil),         // 50: UintFileDetailValue
	(*UintTgFileDetailValue)(nil),       // 51: UintTgFileDetailValue
	(*UintSendContactCard)(nil),         // 52: UintSendContactCard
	(*ContactCardValue)(nil),            // 53: ContactCardValue
	(*FileDetailValue)(nil),             // 54: FileDetailValue
	(*GeoPointValue)(nil),               // 55: GeoPointValue
	(*EditChannelInfoDetail)(nil),       // 56: EditChannelInfoDetail
	(*SendGroupMessageDetail)(nil),      // 57: SendGroupMessageDetail
	(*SendPhotoDetail)(nil),             // 58: SendPhotoDetail
	(*SendFileDetail)(nil),              // 59: SendFileDetail
	(*SendFileSingleDetail)(nil),        // 60: SendFileSingleDetail
	(*SendCodeDetail)(nil),              // 61: SendCodeDetail
	(*GetContactList)(nil),              // 62: GetContactList
	(*GetDialogList)(nil),               // 63: GetDialogList
	(*GetDownLoadFileDetail)(nil),       // 64: GetDownLoadFileDetail
	(*DownLoadFileMsg)(nil),             // 65: DownLoadFileMsg
	(*GetMsgHistory)(nil),               // 66: GetMsgHistory
	(*SendCodeAction)(nil),              // 67: sendCodeAction
	(*SendVideoDetail)(nil),             // 68: SendVideoDetail
	(*SendImageFileDetail)(nil),         // 69: SendImageFileDetail
	(*SendContactCardDetail)(nil),       // 70: SendContactCardDetail
	(*SendContactCardSingleDetail)(nil), // 71: SendContactCardSingleDetail
	(*SaveDraftDetail)(nil),             // 72: SaveDraftDetail
	(*ReceivingMsgDetail)(nil),          // 73: ReceivingMsgDetail
	(*CreateGroupDetail)(nil),           // 74: CreateGroupDetail
	(*CreateChannelDetail)(nil),         // 75: CreateChannelDetail
	(*AddGroupMemberDetail)(nil),        // 76: AddGroupMemberDetail
	(*GetChannelMemberDetail)(nil),      // 77: GetChannelMemberDetail
	(*UpdateUserInfoDetail)(nil),        // 78: UpdateUserInfoDetail
	(*UpdateUserInfoMsg)(nil),           // 79: UpdateUserInfoMsg
	(*GetOnlineAccountsDetail)(nil),     // 80: GetOnlineAccountsDetail
	(*InviteToChannelDetail)(nil),       // 81: InviteToChannelDetail
	(*ImportTgSessionDetail)(nil),       // 82: ImportTgSessionDetail
	(*ImportTgSessionMsg)(nil),          // 83: ImportTgSessionMsg
	(*ImportTgDeviceMsg)(nil),           // 84: ImportTgDeviceMsg
	(*ImportTgSessionDetailAction)(nil), // 85: ImportTgSessionDetailAction
	(*JoinByLinkDetail)(nil),            // 86: JoinByLinkDetail
	(*GetEmojiGroupsDetail)(nil),        // 87: GetEmojiGroupsDetail
	(*GetUserChatFoldersDetail)(nil),    // 88: GetUserChatFoldersDetail
	(*ChannelReadViewDetail)(nil),       // 89: ChannelReadViewDetail
	(*EditAdminDetail)(nil),             // 90: EditAdminDetail
	(*AdminRightsDetail)(nil),           // 91: AdminRightsDetail
	(*SetTypeActionDetail)(nil),         // 92: SetTypeActionDetail
	(*SendMsgSingleDetail)(nil),         // 93: SendMsgSingleDetail
	(*ReadHistoryDetail)(nil),           // 94: ReadHistoryDetail
	(*ReadChannelHistoryDetail)(nil),    // 95: ReadChannelHistoryDetail
	(*CheckUserNameDetail)(nil),         // 96: CheckUserNameDetail
	(*UpdatesGetStatusDetail)(nil),      // 97: UpdatesGetStatusDetail
	(*CreateBotDetail)(nil),             // 98: CreateBotDetail
	(*StartBotDetail)(nil),              // 99: StartBotDetail
	(*UpdateUserChatFoldersDetail)(nil), // 100: UpdateUserChatFoldersDetail
	(*PeerBuf)(nil),                     // 101: PeerBuf
	(*MessagesReactionDetail)(nil),      // 102: MessagesReactionDetail
	(*LeaveDetail)(nil),                 // 103: LeaveDetail
	(*GetGroupMembersDetail)(nil),       // 104: GetGroupMembersDetail
	(*QueryPreKeyBundleDetail)(nil),     // 105: QueryPreKeyBundleDetail
	(*SyncContactDetail)(nil),           // 106: SyncContactDetail
	(*SetHeadSculptureDetail)(nil),      // 107: SetHeadSculptureDetail
	(*ResponseMessage)(nil),             // 108: ResponseMessage
	(*LoginCallbacks)(nil),              // 109: LoginCallbacks
	(*LoginCallback)(nil),               // 110: LoginCallback
	(*TextMsgCallbacks)(nil),            // 111: TextMsgCallbacks
	(*SendFileAction)(nil),              // 112: SendFileAction
	(*SendContactCardAction)(nil),       // 113: SendContactCardAction
	(*TextMsgCallback)(nil),             // 114: TextMsgCallback
	(*ReadMsgCallbacks)(nil),            // 115: ReadMsgCallbacks
	(*ReadMsgCallback)(nil),             // 116: ReadMsgCallback
	nil,                                 // 117: OrdinaryAction.LoginDetailEntry
	nil,                                 // 118: LogoutAction.LogoutDetailEntry
	nil,                                 // 119: GetUserHeadImageAction.HeadImageEntry
	nil,                                 // 120: SyncAccountKeyAction.KeyDataEntry
	nil,                                 // 121: SyncAppInfoAction.AppDataEntry
	nil,                                 // 122: SendMessageAction.SendDataEntry
	nil,                                 // 123: SendMessageAction.SendTgDataEntry
	nil,                                 // 124: SendVCardMsgDetailAction.SendDataEntry
	nil,                                 // 125: SendGroupMessageAction.SendDataEntry
	nil,                                 // 126: SendPhotoAction.SendDataEntry
	nil,                                 // 127: GetDownLoadFileDetail.DownloadFileEntry
	nil,                                 // 128: sendCodeAction.SendCodeEntry
	nil,                                 // 129: UpdateUserInfoDetail.SendDataEntry
	nil,                                 // 130: ImportTgSessionDetail.SendDataEntry
	nil,                                 // 131: ResponseMessage.AccountStatusEntry
	nil,                                 // 132: SendFileAction.SendDataEntry
	nil,                                 // 133: SendFileAction.SendTgDataEntry
	nil,                                 // 134: SendContactCardAction.SendDataEntry
}
var file_protobuf_arthas_proto_depIdxs = []int32{
	5,   // 0: EditChatBannedRightsDetail.ChatBannedRights:type_name -> ChatBannedRightsType
	5,   // 1: EditParticipantBannedDetail.ChatBannedRights:type_name -> ChatBannedRightsType
	54,  // 2: SendStoriesDetail.FileType:type_name -> FileDetailValue
	117, // 3: OrdinaryAction.login_detail:type_name -> OrdinaryAction.LoginDetailEntry
	23,  // 4: OrdinarySingleAction.login_detail:type_name -> loginDetail
	118, // 5: LogoutAction.logout_detail:type_name -> LogoutAction.LogoutDetailEntry
	24,  // 6: loginDetail.tgDevice:type_name -> TgDeviceConfig
	119, // 7: GetUserHeadImageAction.head_image:type_name -> GetUserHeadImageAction.HeadImageEntry
	30,  // 8: SetHeadSculptureAction.HeadSculptrue_data:type_name -> HeadSculpture
	47,  // 9: SendVCardMsgDetail.details:type_name -> SendVCardMsgDetailAction
	46,  // 10: SendMessageDetail.details:type_name -> SendMessageAction
	120, // 11: SyncAccountKeyAction.key_data:type_name -> SyncAccountKeyAction.KeyDataEntry
	121, // 12: SyncAppInfoAction.app_data:type_name -> SyncAppInfoAction.AppDataEntry
	54,  // 13: EditStoriesDetail.FileType:type_name -> FileDetailValue
	0,   // 14: RequestMessage.action:type_name -> Action
	17,  // 15: RequestMessage.ordinary_action:type_name -> OrdinaryAction
	37,  // 16: RequestMessage.sync_account_key_action:type_name -> SyncAccountKeyAction
	38,  // 17: RequestMessage.sync_app_action:type_name -> SyncAppInfoAction
	105, // 18: RequestMessage.query_prekeybundle_detail:type_name -> QueryPreKeyBundleDetail
	34,  // 19: RequestMessage.sendmessage_detail:type_name -> SendMessageDetail
	33,  // 20: RequestMessage.send_vcard_message:type_name -> SendVCardMsgDetail
	31,  // 21: RequestMessage.set_head_sculpture_action:type_name -> SetHeadSculptureAction
	26,  // 22: RequestMessage.get_user_head_image:type_name -> GetUserHeadImageAction
	106, // 23: RequestMessage.sync_contact_detail:type_name -> SyncContactDetail
	73,  // 24: RequestMessage.receive_msg_detail:type_name -> ReceivingMsgDetail
	58,  // 25: RequestMessage.send_photo_detail:type_name -> SendPhotoDetail
	74,  // 26: RequestMessage.create_group_detail:type_name -> CreateGroupDetail
	76,  // 27: RequestMessage.add_group_member_detail:type_name -> AddGroupMemberDetail
	104, // 28: RequestMessage.get_group_members_detail:type_name -> GetGroupMembersDetail
	69,  // 29: RequestMessage.send_image_file_detail:type_name -> SendImageFileDetail
	70,  // 30: RequestMessage.send_contact_card_detail:type_name -> SendContactCardDetail
	57,  // 31: RequestMessage.send_group_message_detail:type_name -> SendGroupMessageDetail
	59,  // 32: RequestMessage.send_file_detail:type_name -> SendFileDetail
	68,  // 33: RequestMessage.send_video_detail:type_name -> SendVideoDetail
	61,  // 34: RequestMessage.send_code_detail:type_name -> SendCodeDetail
	62,  // 35: RequestMessage.get_contact_list:type_name -> GetContactList
	63,  // 36: RequestMessage.get_dialog_list:type_name -> GetDialogList
	66,  // 37: RequestMessage.get_msg_history:type_name -> GetMsgHistory
	22,  // 38: RequestMessage.logout_action:type_name -> LogoutAction
	75,  // 39: RequestMessage.create_channel_detail:type_name -> CreateChannelDetail
	64,  // 40: RequestMessage.get_downLoad_file_detail:type_name -> GetDownLoadFileDetail
	82,  // 41: RequestMessage.import_tg_session:type_name -> ImportTgSessionDetail
	81,  // 42: RequestMessage.invite_to_channel_detail:type_name -> InviteToChannelDetail
	86,  // 43: RequestMessage.join_by_link_detail:type_name -> JoinByLinkDetail
	87,  // 44: RequestMessage.get_emoji_group_detail:type_name -> GetEmojiGroupsDetail
	102, // 45: RequestMessage.messages_reaction_detail:type_name -> MessagesReactionDetail
	103, // 46: RequestMessage.leave_detail:type_name -> LeaveDetail
	77,  // 47: RequestMessage.get_channel_member_detail:type_name -> GetChannelMemberDetail
	80,  // 48: RequestMessage.get_online_accounts_detail:type_name -> GetOnlineAccountsDetail
	78,  // 49: RequestMessage.update_user_info_detail:type_name -> UpdateUserInfoDetail
	28,  // 50: RequestMessage.down_user_head_image_detail:type_name -> DownUserHeadImageDetail
	29,  // 51: RequestMessage.search_detail:type_name -> SearchDetail
	18,  // 52: RequestMessage.ordinary_single_action:type_name -> OrdinarySingleAction
	20,  // 53: RequestMessage.forward_message_detail:type_name -> ForwardMessageDetail
	21,  // 54: RequestMessage.delete_member_detail:type_name -> DeleteMemberDetail
	88,  // 55: RequestMessage.get_user_chat_folders_detail:type_name -> GetUserChatFoldersDetail
	100, // 56: RequestMessage.update_user_chat_folders_details:type_name -> UpdateUserChatFoldersDetail
	96,  // 57: RequestMessage.check_username_detail:type_name -> CheckUserNameDetail
	97,  // 58: RequestMessage.update_get_status_detail:type_name -> UpdatesGetStatusDetail
	98,  // 59: RequestMessage.create_bot_detail:type_name -> CreateBotDetail
	99,  // 60: RequestMessage.start_bot_detail:type_name -> StartBotDetail
	94,  // 61: RequestMessage.read_history_detail:type_name -> ReadHistoryDetail
	89,  // 62: RequestMessage.channel_read_view_detail:type_name -> ChannelReadViewDetail
	90,  // 63: RequestMessage.edit_admin_detail:type_name -> EditAdminDetail
	92,  // 64: RequestMessage.set_type_action_detail:type_name -> SetTypeActionDetail
	95,  // 65: RequestMessage.read_channel_history_action:type_name -> ReadChannelHistoryDetail
	93,  // 66: RequestMessage.send_msg_single_detail:type_name -> SendMsgSingleDetail
	60,  // 67: RequestMessage.send_file_single_detail:type_name -> SendFileSingleDetail
	71,  // 68: RequestMessage.send_contact_card_single_detail:type_name -> SendContactCardSingleDetail
	72,  // 69: RequestMessage.save_draft_detail:type_name -> SaveDraftDetail
	15,  // 70: RequestMessage.clear_all_draft_detail:type_name -> ClearAllDraftDetail
	16,  // 71: RequestMessage.delete_messages_detail:type_name -> DeleteMessagesDetail
	13,  // 72: RequestMessage.contacts_get_located_detail:type_name -> ContactsGetLocatedDetail
	56,  // 73: RequestMessage.edit_channel_info_detail:type_name -> EditChannelInfoDetail
	6,   // 74: RequestMessage.get_manage_channels_detail:type_name -> GetManageChannelsDetail
	3,   // 75: RequestMessage.edit_chat_banned_rights_detail:type_name -> EditChatBannedRightsDetail
	10,  // 76: RequestMessage.get_chats_info_detail:type_name -> GetChatsInfoDetail
	11,  // 77: RequestMessage.get_user_info_detail:type_name -> GetUserInfoDetail
	9,   // 78: RequestMessage.set_history_ttl_detail:type_name -> SetHistoryTTLDetail
	8,   // 79: RequestMessage.get_common_chats_detail:type_name -> GetCommonChatsDetail
	4,   // 80: RequestMessage.edit_participant_banned_detail:type_name -> EditParticipantBannedDetail
	19,  // 81: RequestMessage.delete_private_chat_detail:type_name -> DeletePrivateChatDetail
	14,  // 82: RequestMessage.pin_dialog_detail:type_name -> PinDialogDetail
	12,  // 83: RequestMessage.get_pinned_dialogs:type_name -> GetPinnedDialogs
	7,   // 84: RequestMessage.send_stories_detail:type_name -> SendStoriesDetail
	39,  // 85: RequestMessage.delete_stories_detail:type_name -> DeleteStoriesDetail
	40,  // 86: RequestMessage.edit_stories_detail:type_name -> EditStoriesDetail
	32,  // 87: UintSenderVcard.vcards:type_name -> VCard
	122, // 88: SendMessageAction.send_data:type_name -> SendMessageAction.SendDataEntry
	123, // 89: SendMessageAction.send_tgData:type_name -> SendMessageAction.SendTgDataEntry
	124, // 90: SendVCardMsgDetailAction.send_data:type_name -> SendVCardMsgDetailAction.SendDataEntry
	125, // 91: SendGroupMessageAction.send_data:type_name -> SendGroupMessageAction.SendDataEntry
	126, // 92: SendPhotoAction.send_data:type_name -> SendPhotoAction.SendDataEntry
	54,  // 93: UintFileDetailValue.value:type_name -> FileDetailValue
	54,  // 94: UintTgFileDetailValue.value:type_name -> FileDetailValue
	53,  // 95: UintSendContactCard.value:type_name -> ContactCardValue
	54,  // 96: EditChannelInfoDetail.Photo:type_name -> FileDetailValue
	55,  // 97: EditChannelInfoDetail.GeoPoint:type_name -> GeoPointValue
	48,  // 98: SendGroupMessageDetail.details:type_name -> SendGroupMessageAction
	49,  // 99: SendPhotoDetail.details:type_name -> SendPhotoAction
	112, // 100: SendFileDetail.details:type_name -> SendFileAction
	54,  // 101: SendFileSingleDetail.fileDetail:type_name -> FileDetailValue
	67,  // 102: SendCodeDetail.details:type_name -> sendCodeAction
	127, // 103: GetDownLoadFileDetail.download_file:type_name -> GetDownLoadFileDetail.DownloadFileEntry
	128, // 104: sendCodeAction.send_code:type_name -> sendCodeAction.SendCodeEntry
	112, // 105: SendVideoDetail.details:type_name -> SendFileAction
	112, // 106: SendImageFileDetail.details:type_name -> SendFileAction
	113, // 107: SendContactCardDetail.detail:type_name -> SendContactCardAction
	53,  // 108: SendContactCardSingleDetail.card:type_name -> ContactCardValue
	43,  // 109: CreateGroupDetail.detail:type_name -> UintkeyStringvalue
	43,  // 110: CreateChannelDetail.detail:type_name -> UintkeyStringvalue
	43,  // 111: AddGroupMemberDetail.detail:type_name -> UintkeyStringvalue
	129, // 112: UpdateUserInfoDetail.send_data:type_name -> UpdateUserInfoDetail.SendDataEntry
	54,  // 113: UpdateUserInfoMsg.photo:type_name -> FileDetailValue
	43,  // 114: InviteToChannelDetail.detail:type_name -> UintkeyStringvalue
	130, // 115: ImportTgSessionDetail.send_data:type_name -> ImportTgSessionDetail.SendDataEntry
	84,  // 116: ImportTgSessionMsg.DeviceMsg:type_name -> ImportTgDeviceMsg
	43,  // 117: JoinByLinkDetail.detail:type_name -> UintkeyStringvalue
	91,  // 118: EditAdminDetail.AdminRights:type_name -> AdminRightsDetail
	101, // 119: UpdateUserChatFoldersDetail.pinnedPeers:type_name -> PeerBuf
	101, // 120: UpdateUserChatFoldersDetail.includePeers:type_name -> PeerBuf
	101, // 121: UpdateUserChatFoldersDetail.excludePeers:type_name -> PeerBuf
	42,  // 122: MessagesReactionDetail.detail:type_name -> UintkeyUintvalue
	43,  // 123: LeaveDetail.detail:type_name -> UintkeyStringvalue
	42,  // 124: QueryPreKeyBundleDetail.details:type_name -> UintkeyUintvalue
	42,  // 125: SyncContactDetail.details:type_name -> UintkeyUintvalue
	31,  // 126: SetHeadSculptureDetail.detail:type_name -> SetHeadSculptureAction
	1,   // 127: ResponseMessage.action_result:type_name -> ActionResult
	131, // 128: ResponseMessage.account_status:type_name -> ResponseMessage.AccountStatusEntry
	109, // 129: ResponseMessage.login_callbacks:type_name -> LoginCallbacks
	111, // 130: ResponseMessage.text_msg_callbacks:type_name -> TextMsgCallbacks
	115, // 131: ResponseMessage.read_msg_callbacks:type_name -> ReadMsgCallbacks
	2,   // 132: ResponseMessage.respond_account_status:type_name -> AccountStatus
	110, // 133: LoginCallbacks.results:type_name -> LoginCallback
	2,   // 134: LoginCallback.loginStatus:type_name -> AccountStatus
	114, // 135: TextMsgCallbacks.results:type_name -> TextMsgCallback
	132, // 136: SendFileAction.send_data:type_name -> SendFileAction.SendDataEntry
	133, // 137: SendFileAction.send_tgData:type_name -> SendFileAction.SendTgDataEntry
	134, // 138: SendContactCardAction.send_data:type_name -> SendContactCardAction.SendDataEntry
	116, // 139: ReadMsgCallbacks.results:type_name -> ReadMsgCallback
	23,  // 140: OrdinaryAction.LoginDetailEntry.value:type_name -> loginDetail
	25,  // 141: LogoutAction.LogoutDetailEntry.value:type_name -> logoutDetail
	27,  // 142: GetUserHeadImageAction.HeadImageEntry.value:type_name -> getUserHeadImage
	36,  // 143: SyncAccountKeyAction.KeyDataEntry.value:type_name -> KeyData
	35,  // 144: SyncAppInfoAction.AppDataEntry.value:type_name -> appData
	43,  // 145: SendMessageAction.SendDataEntry.value:type_name -> UintkeyStringvalue
	44,  // 146: SendMessageAction.SendTgDataEntry.value:type_name -> StringKeyStringvalue
	45,  // 147: SendVCardMsgDetailAction.SendDataEntry.value:type_name -> UintSenderVcard
	44,  // 148: SendGroupMessageAction.SendDataEntry.value:type_name -> StringKeyStringvalue
	43,  // 149: SendPhotoAction.SendDataEntry.value:type_name -> UintkeyStringvalue
	65,  // 150: GetDownLoadFileDetail.DownloadFileEntry.value:type_name -> DownLoadFileMsg
	79,  // 151: UpdateUserInfoDetail.SendDataEntry.value:type_name -> UpdateUserInfoMsg
	83,  // 152: ImportTgSessionDetail.SendDataEntry.value:type_name -> ImportTgSessionMsg
	2,   // 153: ResponseMessage.AccountStatusEntry.value:type_name -> AccountStatus
	50,  // 154: SendFileAction.SendDataEntry.value:type_name -> UintFileDetailValue
	51,  // 155: SendFileAction.SendTgDataEntry.value:type_name -> UintTgFileDetailValue
	52,  // 156: SendContactCardAction.SendDataEntry.value:type_name -> UintSendContactCard
	41,  // 157: Arthas.connect:input_type -> RequestMessage
	41,  // 158: ArthasStream.connect:input_type -> RequestMessage
	108, // 159: Arthas.connect:output_type -> ResponseMessage
	108, // 160: ArthasStream.connect:output_type -> ResponseMessage
	159, // [159:161] is the sub-list for method output_type
	157, // [157:159] is the sub-list for method input_type
	157, // [157:157] is the sub-list for extension type_name
	157, // [157:157] is the sub-list for extension extendee
	0,   // [0:157] is the sub-list for field type_name
}

func init() { file_protobuf_arthas_proto_init() }
func file_protobuf_arthas_proto_init() {
	if File_protobuf_arthas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_arthas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChatBannedRightsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditParticipantBannedDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatBannedRightsType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManageChannelsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendStoriesDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommonChatsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHistoryTTLDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatsInfoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPinnedDialogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactsGetLocatedDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinDialogDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAllDraftDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessagesDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdinaryAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdinarySingleAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrivateChatDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardMessageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TgDeviceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserHeadImageAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserHeadImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownUserHeadImageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadSculpture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHeadSculptureAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVCardMsgDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAccountKeyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAppInfoAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoriesDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditStoriesDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintkeyUintvalue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintkeyStringvalue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringKeyStringvalue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintSenderVcard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVCardMsgDetailAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhotoAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintFileDetailValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintTgFileDetailValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintSendContactCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCardValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDetailValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoPointValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelInfoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhotoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFileDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFileSingleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDialogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownLoadFileDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLoadFileMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCodeAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVideoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendImageFileDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactCardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactCardSingleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDraftDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivingMsgDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupMemberDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMemberDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineAccountsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteToChannelDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTgSessionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTgSessionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTgDeviceMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTgSessionDetailAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinByLinkDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmojiGroupsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserChatFoldersDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelReadViewDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAdminDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRightsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTypeActionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgSingleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHistoryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChannelHistoryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserNameDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatesGetStatusDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBotDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBotDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserChatFoldersDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPreKeyBundleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncContactDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHeadSculptureDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCallbacks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextMsgCallbacks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFileAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactCardAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextMsgCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMsgCallbacks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_arthas_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMsgCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protobuf_arthas_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*RequestMessage_OrdinaryAction)(nil),
		(*RequestMessage_SyncAccountKeyAction)(nil),
		(*RequestMessage_SyncAppAction)(nil),
		(*RequestMessage_QueryPrekeybundleDetail)(nil),
		(*RequestMessage_SendmessageDetail)(nil),
		(*RequestMessage_PingMessage)(nil),
		(*RequestMessage_SendVcardMessage)(nil),
		(*RequestMessage_SetHeadSculptureAction)(nil),
		(*RequestMessage_GetUserHeadImage)(nil),
		(*RequestMessage_SyncContactDetail)(nil),
		(*RequestMessage_ReceiveMsgDetail)(nil),
		(*RequestMessage_SendPhotoDetail)(nil),
		(*RequestMessage_CreateGroupDetail)(nil),
		(*RequestMessage_AddGroupMemberDetail)(nil),
		(*RequestMessage_GetGroupMembersDetail)(nil),
		(*RequestMessage_SendImageFileDetail)(nil),
		(*RequestMessage_SendContactCardDetail)(nil),
		(*RequestMessage_SendGroupMessageDetail)(nil),
		(*RequestMessage_SendFileDetail)(nil),
		(*RequestMessage_SendVideoDetail)(nil),
		(*RequestMessage_SendCodeDetail)(nil),
		(*RequestMessage_GetContactList)(nil),
		(*RequestMessage_GetDialogList)(nil),
		(*RequestMessage_GetMsgHistory)(nil),
		(*RequestMessage_LogoutAction)(nil),
		(*RequestMessage_CreateChannelDetail)(nil),
		(*RequestMessage_GetDownLoadFileDetail)(nil),
		(*RequestMessage_ImportTgSession)(nil),
		(*RequestMessage_InviteToChannelDetail)(nil),
		(*RequestMessage_JoinByLinkDetail)(nil),
		(*RequestMessage_GetEmojiGroupDetail)(nil),
		(*RequestMessage_MessagesReactionDetail)(nil),
		(*RequestMessage_LeaveDetail)(nil),
		(*RequestMessage_GetChannelMemberDetail)(nil),
		(*RequestMessage_GetOnlineAccountsDetail)(nil),
		(*RequestMessage_UpdateUserInfoDetail)(nil),
		(*RequestMessage_DownUserHeadImageDetail)(nil),
		(*RequestMessage_SearchDetail)(nil),
		(*RequestMessage_OrdinarySingleAction)(nil),
		(*RequestMessage_ForwardMessageDetail)(nil),
		(*RequestMessage_DeleteMemberDetail)(nil),
		(*RequestMessage_GetUserChatFoldersDetail)(nil),
		(*RequestMessage_UpdateUserChatFoldersDetails)(nil),
		(*RequestMessage_CheckUsernameDetail)(nil),
		(*RequestMessage_UpdateGetStatusDetail)(nil),
		(*RequestMessage_CreateBotDetail)(nil),
		(*RequestMessage_StartBotDetail)(nil),
		(*RequestMessage_ReadHistoryDetail)(nil),
		(*RequestMessage_ChannelReadViewDetail)(nil),
		(*RequestMessage_EditAdminDetail)(nil),
		(*RequestMessage_SetTypeActionDetail)(nil),
		(*RequestMessage_ReadChannelHistoryAction)(nil),
		(*RequestMessage_SendMsgSingleDetail)(nil),
		(*RequestMessage_SendFileSingleDetail)(nil),
		(*RequestMessage_SendContactCardSingleDetail)(nil),
		(*RequestMessage_SaveDraftDetail)(nil),
		(*RequestMessage_ClearAllDraftDetail)(nil),
		(*RequestMessage_DeleteMessagesDetail)(nil),
		(*RequestMessage_ContactsGetLocatedDetail)(nil),
		(*RequestMessage_EditChannelInfoDetail)(nil),
		(*RequestMessage_GetManageChannelsDetail)(nil),
		(*RequestMessage_EditChatBannedRightsDetail)(nil),
		(*RequestMessage_GetChatsInfoDetail)(nil),
		(*RequestMessage_GetUserInfoDetail)(nil),
		(*RequestMessage_SetHistoryTtlDetail)(nil),
		(*RequestMessage_GetCommonChatsDetail)(nil),
		(*RequestMessage_EditParticipantBannedDetail)(nil),
		(*RequestMessage_DeletePrivateChatDetail)(nil),
		(*RequestMessage_PinDialogDetail)(nil),
		(*RequestMessage_GetPinnedDialogs)(nil),
		(*RequestMessage_SendStoriesDetail)(nil),
		(*RequestMessage_DeleteStoriesDetail)(nil),
		(*RequestMessage_EditStoriesDetail)(nil),
	}
	file_protobuf_arthas_proto_msgTypes[76].OneofWrappers = []interface{}{}
	file_protobuf_arthas_proto_msgTypes[105].OneofWrappers = []interface{}{
		(*ResponseMessage_LoginCallbacks)(nil),
		(*ResponseMessage_TextMsgCallbacks)(nil),
		(*ResponseMessage_ReadMsgCallbacks)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_arthas_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   132,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protobuf_arthas_proto_goTypes,
		DependencyIndexes: file_protobuf_arthas_proto_depIdxs,
		EnumInfos:         file_protobuf_arthas_proto_enumTypes,
		MessageInfos:      file_protobuf_arthas_proto_msgTypes,
	}.Build()
	File_protobuf_arthas_proto = out.File
	file_protobuf_arthas_proto_rawDesc = nil
	file_protobuf_arthas_proto_goTypes = nil
	file_protobuf_arthas_proto_depIdxs = nil
}
